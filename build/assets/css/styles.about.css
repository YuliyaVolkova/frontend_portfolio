/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on March 8, 2018 */
@font-face {
  font-family: 'bernier_distressed';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier_shade';
  src: url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff) format("woff");
  font-weight: 900;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff) format("woff");
  font-weight: 900;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff) format("woff");
  font-weight: 400;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff) format("woff");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff) format("woff");
  font-weight: 300;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff) format("woff");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff) format("woff");
  font-weight: 500;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff) format("woff");
  font-weight: 400;
  font-style: normal; }

/**
 * Set up a decent box model on the root element
 */
* {
  box-sizing: border-box; }

body, html {
  color: #455a64;
  background-color: #ededed;
  font-family: "roboto", "Arial", sans-serif;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.425rem;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-display: optional;
  position: relative; }
  @media screen and (max-width: 992px) and (min-width: 769px) {
    body, html {
      font-size: 15px; } }
  @media screen and (max-width: 768px) {
    body, html {
      font-size: 14px; } }
  @media screen and (max-width: 480px) {
    body, html {
      font-size: 13px; } }
  @media screen and (max-width: 375px) {
    body, html {
      font-size: 12px; } }

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*::before,
*::after {
  box-sizing: inherit; }

/**
 * Basic styles for links
 */
a {
  color: white;
  text-decoration: none; }

ul {
  margin: 0;
  padding: 0; }

ul li {
  list-style: none; }

h1, h2, h3, p {
  margin: 0; }

svg {
  fill: currentColor;
  stroke: currentColor; }

button, input, select, textarea {
  font-family: "roboto", "Arial", sans-serif; }

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table; }

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap;
  display: block; }

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  /* margin: -1px;*/
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.l-wrapper {
  width: 100%;
  height: 100%;
  margin: 0;
  position: relative; }

.l-section {
  width: 100%;
  min-height: 100%;
  height: 100%; }

.l-section_header {
  height: 100%;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  position: relative;
  background-image: url(http://localhost:8080/assets/images/decor/bg/montains.jpg);
  background-attachment: fixed; }
  .l-section_header:after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(1, 102, 114, 0.3); }
  @media screen and (min-width: 1301px) {
    .l-section_header {
      min-height: 650px; } }
  @media screen and (max-width: 480px) {
    .l-section_header {
      background-attachment: scroll; } }

.l-section_header-blog:before {
  display: block;
  content: '';
  width: 100%;
  height: 3%;
  background-color: #df5766; }

.l-section_header-blog:after {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  top: 3%;
  background-color: rgba(1, 102, 114, 0.3); }

.l-hamburger {
  position: fixed;
  top: 10%;
  right: 10%;
  z-index: 9; }

.l-developer {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 2; }

.l-developer_blog {
  top: 0;
  -webkit-transform: translate(-50%, 33%);
          transform: translate(-50%, 33%); }

.l-bg-about {
  width: 100%;
  position: relative;
  left: 0;
  top: -33%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 120%;
  min-height: 120%; }

.l-bg-about_blog {
  top: -67%; }

.c-header-social {
  position: absolute;
  z-index: 1;
  left: 10%;
  top: 10%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 12%;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }

.c-header-social__item {
  height: 1.375rem; }

.c-header-social__link {
  display: inline-block;
  height: 100%;
  color: white; }
  .c-header-social__link:hover .svg-use {
    opacity: 1; }

.svg-use {
  width: 1.75rem;
  height: 1.375rem;
  transition: opacity 0.4s;
  opacity: 0.5; }

.c-hamburger-nav {
  width: 2.375rem;
  height: 2.0625rem; }

.c-hamburger-nav__target {
  display: block;
  width: 100%;
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-hamburger-nav__fake {
  display: block;
  width: 2.375rem;
  height: 0.3125rem;
  background-color: white;
  border-radius: 15%;
  overflow: visible;
  transition: 0.3s; }
  .c-hamburger-nav__fake:before {
    content: "";
    display: block;
    width: 2.375rem;
    height: 0.3125rem;
    border-radius: 15%;
    background-color: white;
    position: absolute;
    top: 100%;
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
    left: 0; }
  .c-hamburger-nav__fake:after {
    content: "";
    display: block;
    width: 2.375rem;
    height: 0.3125rem;
    border-radius: 15%;
    background-color: white;
    position: absolute;
    bottom: 100%;
    left: 0;
    -webkit-transform: translateY(100%);
            transform: translateY(100%); }

.c-hamburger-nav__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-hamburger-nav__item {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  text-transform: uppercase;
  font-size: 1.5rem;
  font-weight: 400; }
  .c-hamburger-nav__item:before {
    content: "";
    display: block;
    width: 0.3125rem;
    height: 0.3125rem;
    border-radius: 50%;
    background-color: white;
    margin: 0.9375rem; }
  .c-hamburger-nav__item:first-child:before {
    display: none; }

.c-developer {
  width: 23.75rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-developer__img-wrap {
  width: 8.8125rem;
  height: 8.8125rem;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  overflow: hidden;
  margin-bottom: 4%;
  border-radius: 50%; }

.c-developer__img {
  max-width: 100%; }

.c-developer__content {
  width: 100%;
  text-align: center; }

.c-developer__header {
  font-size: 2.1875rem;
  font-weight: 500;
  line-height: 1.5;
  margin-bottom: 0.3%;
  color: white; }

.c-developer__header_blog {
  font-family: 'bernier';
  font-size: 3.9375rem;
  letter-spacing: 0.2rem; }
  .c-developer__header_blog:first-letter {
    text-transform: uppercase; }

.c-developer__desc {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.5;
  font-weight: 300; }

.c-developer__desc-blog {
  color: white;
  font-weight: 400; }

.c-next {
  display: block;
  width: 1.75rem;
  height: 1.125rem;
  position: absolute;
  bottom: 15%;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  z-index: 2;
  transition: -webkit-transform 0.3s;
  transition: transform 0.3s;
  transition: transform 0.3s, -webkit-transform 0.3s;
  will-change: transform; }
  .c-next:hover {
    -webkit-transform: translateX(-50%) scale(1.2);
            transform: translateX(-50%) scale(1.2); }

.svg_header {
  opacity: 0.06;
  width: 100%;
  height: 37%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  fill: white;
  z-index: 1; }

.svg_next {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white; }

.svg_aboutLeft, .svg_aboutRight {
  width: 50%;
  height: 120%;
  fill: #F0EFE9;
  stroke: #F0EFE9; }

.svg_aboutRight {
  position: relative;
  top: 1px; }

.svg_develop {
  width: 1.6rem;
  height: 0.8rem;
  opacity: 0.25;
  fill: white;
  display: inline-block;
  vertical-align: middle; }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/