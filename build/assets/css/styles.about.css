/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on March 8, 2018 */
@font-face {
  font-family: 'bernier_distressed';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier_shade';
  src: url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff) format("woff");
  font-weight: 900;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff) format("woff");
  font-weight: 900;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff) format("woff");
  font-weight: 400;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff) format("woff");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff) format("woff");
  font-weight: 300;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff) format("woff");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff) format("woff");
  font-weight: 500;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff) format("woff");
  font-weight: 400;
  font-style: normal; }

/**
 * Set up a decent box model on the root element
 */
* {
  box-sizing: border-box; }

body, html {
  color: #455a64;
  background-color: #ededed;
  font-family: "roboto", "Arial", sans-serif;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.425rem;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-display: optional;
  position: relative;
  min-height: 100vh; }
  body.about .l-footer, html.about .l-footer {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0; }
  @media screen and (min-width: 1800px) {
    body, html {
      background-color: rgba(69, 90, 100, 0.3); } }
  @media screen and (max-width: 992px) and (min-width: 769px) {
    body, html {
      font-size: 15px; } }
  @media screen and (max-width: 768px) {
    body, html {
      font-size: 14px; } }
  @media screen and (max-width: 480px) {
    body, html {
      font-size: 13px; } }
  @media screen and (max-width: 375px) {
    body, html {
      font-size: 12px; } }

body.hero, html.hero {
  height: 100%;
  overflow: hidden;
  min-height: 628px; }
  @media screen and (max-width: 768px) {
    body.hero, html.hero {
      min-height: 100vh; } }

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*::before,
*::after {
  box-sizing: inherit; }

/**
 * Basic styles for links
 */
a {
  color: white;
  text-decoration: none; }

ul {
  margin: 0;
  padding: 0; }

ul li {
  list-style: none; }

h1, h2, h3, p {
  margin: 0; }

svg {
  fill: currentColor;
  stroke: currentColor; }

button, input, select, textarea {
  font-family: "roboto", "Arial", sans-serif; }

img {
  display: none; }

.google-map img {
  display: block; }

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table; }

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap;
  display: block; }

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  /* margin: -1px;*/
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

@-webkit-keyframes rotate_leftClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); } }

@keyframes rotate_leftClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); } }

@-webkit-keyframes rotate_rightClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); } }

@keyframes rotate_rightClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); } }

@-webkit-keyframes scale_centerClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); } }

@keyframes scale_centerClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); } }

@-webkit-keyframes rotate_leftHamburger {
  from {
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); }
  to {
    -webkit-transform: none;
            transform: none; } }

@keyframes rotate_leftHamburger {
  from {
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); }
  to {
    -webkit-transform: none;
            transform: none; } }

@-webkit-keyframes rotate_rightHamburger {
  from {
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); }
  to {
    -webkit-transform: none;
            transform: none; } }

@keyframes rotate_rightHamburger {
  from {
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); }
  to {
    -webkit-transform: none;
            transform: none; } }

@-webkit-keyframes scale_centerHamburger {
  from {
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); }
  to {
    -webkit-transform: scaleX(1.1);
            transform: scaleX(1.1); } }

@keyframes scale_centerHamburger {
  from {
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); }
  to {
    -webkit-transform: scaleX(1.1);
            transform: scaleX(1.1); } }

@-webkit-keyframes blog_tabletNavOpen {
  from {
    -webkit-transform: translateX(-72%);
            transform: translateX(-72%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@keyframes blog_tabletNavOpen {
  from {
    -webkit-transform: translateX(-72%);
            transform: translateX(-72%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@-webkit-keyframes blog_tabletNavClose {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(-100.5%);
            transform: translateX(-100.5%); } }

@keyframes blog_tabletNavClose {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(-100.5%);
            transform: translateX(-100.5%); } }

@-webkit-keyframes open_hamburger_left {
  from {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@keyframes open_hamburger_left {
  from {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@-webkit-keyframes open_hamburger_right {
  from {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@keyframes open_hamburger_right {
  from {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@-webkit-keyframes close_hamburger_left {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

@keyframes close_hamburger_left {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

@-webkit-keyframes close_hamburger_right {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); } }

@keyframes close_hamburger_right {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); } }

@-webkit-keyframes to_visible {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes to_visible {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@-webkit-keyframes to_unvisible {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@keyframes to_unvisible {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@-webkit-keyframes bg_to_color {
  from {
    background: rgba(0, 191, 165, 0); }
  to {
    background: rgba(0, 191, 165, 0.87); } }

@keyframes bg_to_color {
  from {
    background: rgba(0, 191, 165, 0); }
  to {
    background: rgba(0, 191, 165, 0.87); } }

@-webkit-keyframes bg_to_transparent {
  from {
    background: rgba(0, 191, 165, 0.87); }
  to {
    background: rgba(0, 191, 165, 0); } }

@keyframes bg_to_transparent {
  from {
    background: rgba(0, 191, 165, 0.87); }
  to {
    background: rgba(0, 191, 165, 0); } }

.l-wrapper {
  width: 100%;
  height: 100%;
  margin: 0;
  position: relative;
  overflow: hidden;
  min-height: 100vh; }
  @media screen and (min-width: 1301px) {
    .l-wrapper {
      min-height: 650px; } }

#loader-wrapper {
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000;
  background: url(http://localhost:8080/assets/images/decor/bg/bg_preloader.jpg) center/cover no-repeat; }

#loader {
  display: block;
  position: relative;
  left: 50%;
  top: 50%;
  width: 9rem;
  height: 9rem;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 1001;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  #loader circle {
    -webkit-transform-origin: center center;
            transform-origin: center center;
    stroke-width: 4;
    opacity: 0; }
  #loader circle#bigCircle {
    -webkit-transform: rotate(-115deg);
            transform: rotate(-115deg); }
  #loader circle#middleCircle {
    -webkit-transform: rotate(-105deg);
            transform: rotate(-105deg); }
  #loader circle#smallCircle {
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); }

.loader__text {
  font-size: 1rem;
  color: white;
  font-weight: 500;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

#loader-wrapper .loader-section {
  position: fixed;
  top: 0;
  width: 51%;
  height: 100%;
  background: rgba(0, 191, 165, 0);
  z-index: 1000;
  -webkit-transform: translateX(0);
          transform: translateX(0); }

#loader-wrapper .loader-section.section-left {
  left: 0; }

#loader-wrapper .loader-section.section-right {
  right: 0; }

/* Loaded */
.loaded #loader-wrapper .loader-section.section-left {
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
  transition: all 0.7s 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), background 0s 0s linear;
  background: rgba(0, 191, 165, 0.3); }

.loaded #loader-wrapper .loader-section.section-right {
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  transition: all 0.7s 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), background 0s 0s linear;
  background: rgba(0, 191, 165, 0.3); }

.loaded #loader {
  opacity: 0;
  transition: all 0.3s ease-out; }

.loaded #loader-wrapper {
  visibility: hidden;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
  transition: all 0.3s 1s ease-out; }

.l-section {
  width: 100%;
  min-height: 628px;
  position: relative; }
  @media screen and (min-width: 1301px) {
    .l-section {
      min-height: 650px;
      max-width: 112.5rem;
      margin: auto; } }
  @media screen and (max-width: 768px) {
    .l-section {
      min-height: 100vh; } }

.l-last {
  height: 100vh;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.l-layout-first {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.l-feeds {
  height: 1280px;
  background: url(http://localhost:8080/assets/images/decor/bg/feeds_bg.png) no-repeat;
  background-position: center center; }

.l-scroll-parallax-container {
  background: #9ABDBE;
  overflow-x: hidden;
  overflow-y: auto;
  position: absolute;
  top: 0;
  left: 0;
  right: 0px;
  bottom: 0;
  -webkit-perspective: 100px;
          perspective: 100px; }
  @media screen and (max-width: 768px) {
    .l-scroll-parallax-container {
      background: url(http://localhost:8080/assets/images/decor/bg/mountains.jpg);
      background-size: 300% auto;
      background-repeat: no-repeat;
      background-position: center top;
      z-index: 0; } }
  @media screen and (max-width: 480px) {
    .l-scroll-parallax-container {
      background-size: 330% auto; } }

.l-scroll-parallax__layer {
  position: absolute;
  top: 0;
  left: -100px;
  right: 0;
  bottom: 0; }
  .l-scroll-parallax__layer:first-child .l-scroll-parallax__img {
    top: 0; }
  @media screen and (max-width: 768px) {
    .l-scroll-parallax__layer {
      display: none; } }

.l-scroll-parallax__img {
  display: block;
  position: absolute;
  left: 50%;
  bottom: 0;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  width: 100%; }
  @media screen and (max-width: 768px) {
    .l-scroll-parallax__img {
      display: none; } }

.parallax__content {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  -webkit-transform: translateZ(0);
          transform: translateZ(0);
  overflow: hidden; }

.l-scroll-parallax__layer:nth-child(10) {
  -webkit-transform: translateZ(0px) scale(1);
          transform: translateZ(0px) scale(1); }

.l-scroll-parallax__layer:nth-child(9) {
  -webkit-transform: translateZ(-50px) scale(1.5);
          transform: translateZ(-50px) scale(1.5); }

.l-scroll-parallax__layer:nth-child(8) {
  -webkit-transform: translateZ(-100px) scale(2);
          transform: translateZ(-100px) scale(2); }

.l-scroll-parallax__layer:nth-child(7) {
  -webkit-transform: translateZ(-150px) scale(2.5);
          transform: translateZ(-150px) scale(2.5); }

.l-scroll-parallax__layer:nth-child(6) {
  -webkit-transform: translateZ(-200px) scale(3);
          transform: translateZ(-200px) scale(3); }

.l-scroll-parallax__layer:nth-child(5) {
  -webkit-transform: translateZ(-250px) scale(3.5);
          transform: translateZ(-250px) scale(3.5); }

.l-scroll-parallax__layer:nth-child(4) {
  -webkit-transform: translateZ(-300px) scale(4);
          transform: translateZ(-300px) scale(4); }

.l-scroll-parallax__layer:nth-child(3) {
  -webkit-transform: translateZ(-350px) scale(4.5);
          transform: translateZ(-350px) scale(4.5); }

.l-scroll-parallax__layer:nth-child(2) {
  -webkit-transform: translateZ(-400px) scale(5);
          transform: translateZ(-400px) scale(5); }

.l-scroll-parallax__layer:nth-child(1) {
  -webkit-transform: translateZ(-450px) scale(5.5);
          transform: translateZ(-450px) scale(5.5); }

.scroll-parallax__layer:nth-child(10) {
  -webkit-transform: translateZ(0px) scale(1);
          transform: translateZ(0px) scale(1); }

.scroll-parallax__layer:nth-child(9) {
  -webkit-transform: translateZ(-50px) scale(1.5);
          transform: translateZ(-50px) scale(1.5); }

.scroll-parallax__layer:nth-child(8) {
  -webkit-transform: translateZ(-100px) scale(2);
          transform: translateZ(-100px) scale(2); }

.scroll-parallax__layer:nth-child(7) {
  -webkit-transform: translateZ(-150px) scale(2.5);
          transform: translateZ(-150px) scale(2.5); }

.scroll-parallax__layer:nth-child(6) {
  -webkit-transform: translateZ(-200px) scale(3);
          transform: translateZ(-200px) scale(3); }

.scroll-parallax__layer:nth-child(5) {
  -webkit-transform: translateZ(-250px) scale(3.5);
          transform: translateZ(-250px) scale(3.5); }

.scroll-parallax__layer:nth-child(4) {
  -webkit-transform: translateZ(-300px) scale(4);
          transform: translateZ(-300px) scale(4); }

.scroll-parallax__layer:nth-child(3) {
  -webkit-transform: translateZ(-350px) scale(4.5);
          transform: translateZ(-350px) scale(4.5); }

.scroll-parallax__layer:nth-child(2) {
  -webkit-transform: translateZ(-400px) scale(5);
          transform: translateZ(-400px) scale(5); }

.scroll-parallax__layer:nth-child(1) {
  -webkit-transform: translateZ(-450px) scale(5.5);
          transform: translateZ(-450px) scale(5.5); }

.l-hero {
  height: 100vh; }
  .l-hero:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(1, 102, 114, 0.3);
    z-index: 0; }
  @media screen and (min-width: 1301px) {
    .l-hero {
      min-height: 650px; } }
  @media screen and (max-width: 480px) {
    .l-hero {
      background-attachment: scroll; } }

.l-hero_blog {
  background-position: center top; }
  .l-hero_blog .l-main__top {
    position: relative;
    top: 70%; }
  .l-hero_blog .parallax__content {
    top: 72%; }
  .l-hero_blog .l-hero__develop {
    top: 0;
    -webkit-transform: translate(-50%, 50%);
            transform: translate(-50%, 50%); }
    @media screen and (min-width: 1800px) {
      .l-hero_blog .l-hero__develop {
        -webkit-transform: translate(-50%, 150%);
                transform: translate(-50%, 150%); } }

.l-hero__develop {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 15; }

.l-hero__social {
  position: absolute;
  z-index: 15;
  left: 10%;
  top: 10%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 12%;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }
  @media screen and (min-width: 1800px) {
    .l-hero__social {
      left: 50%;
      -webkit-transform: translateX(-800px);
              transform: translateX(-800px); } }
  @media screen and (min-width: 993px) and (max-width: 1300px) {
    .l-hero__social {
      width: 16%; } }
  @media screen and (max-width: 992px) and (min-width: 769px) {
    .l-hero__social {
      width: 16%; } }
  @media screen and (max-width: 768px) {
    .l-hero__social {
      width: 20%;
      top: 5%;
      left: 5%; } }
  @media screen and (max-width: 480px) {
    .l-hero__social {
      width: 30%;
      top: 4%;
      left: 4%; } }

.l-hero__social-item {
  height: 1.375rem; }

.l-hero__social-link {
  display: inline-block;
  height: 100%;
  color: white; }
  .l-hero__social-link:hover .svg-use {
    opacity: 1; }
  .l-hero__social-link:visited .svg-use {
    opacity: 0.5; }

.svg-use {
  width: 1.75rem;
  height: 1.375rem;
  transition: opacity 0.4s;
  opacity: 0.5; }

.l-container {
  width: 95%;
  height: 9.1875rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: auto;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  @media screen and (max-width: 768px) {
    .l-container {
      height: 14.75rem;
      -webkit-align-items: center;
          -ms-flex-align: center;
              align-items: center; } }
  @media screen and (max-width: 480px) {
    .l-container {
      height: 16.875rem; } }

.l-hamburger {
  position: absolute;
  top: 10%;
  right: 10%;
  z-index: 15; }
  @media screen and (max-width: 768px) {
    .l-hamburger {
      right: 5%;
      top: 5%; } }
  @media screen and (max-width: 480px) {
    .l-hamburger {
      right: 4%;
      top: 4%; } }
  @media screen and (min-width: 1800px) {
    .l-hamburger {
      left: 50%;
      -webkit-transform: translateX(800px);
              transform: translateX(800px); } }
  @media screen and (max-width: 768px) {
    .l-hamburger_works {
      top: 2.5%; } }

.l-main {
  width: 100%;
  background-color: #F0EFE9; }

.l-main__top {
  width: 100%;
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  z-index: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%); }

.l-main__wrapper {
  width: 100%;
  min-height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline; }
  @media screen and (min-width: 1301px) {
    .l-main__wrapper {
      max-width: 112.5rem;
      margin: auto; } }
  .l-main__wrapper.l-main_blog {
    background-color: #faf8f0;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column; }
  .l-main__wrapper.l-main_works {
    display: block; }
  .l-main__wrapper.l-main_about {
    background: #f0efe9;
    /* Old browsers */
    background: linear-gradient(to right, #f0efe9 0%, #efebe0 50%, #efebe0 100%);
    /* FF3.6-15 */
    /* Chrome10-25,Safari5.1-6 */
    /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f0efe9', endColorstr='#efebe0',GradientType=1 );
    /* IE6-9 */ }
    @media screen and (max-width: 768px) {
      .l-main__wrapper.l-main_about {
        -webkit-flex-direction: column;
            -ms-flex-direction: column;
                flex-direction: column;
        -webkit-align-items: center;
            -ms-flex-align: center;
                align-items: center; } }

.l-main__header {
  width: 100%;
  height: 12.1875rem;
  background-color: #faf8f0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 480px) {
    .l-main__header {
      height: 9rem; } }

.l-main__header-title {
  width: 40%;
  position: relative;
  color: #373e42;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .l-main__header-title .h-title-section {
    text-align: center; }
  .l-main__header-title::first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .l-main__header-title {
      width: 63%; } }

.l-main__slider {
  width: 100%;
  height: 750px;
  display: block;
  margin-bottom: 3%; }
  @media screen and (max-width: 768px) {
    .l-main__slider {
      height: 1030px; } }
  @media screen and (max-width: 480px) {
    .l-main__slider {
      height: 585px; } }

.l-main__column-one, .l-main__column-two {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  width: 50%;
  min-height: 100%;
  position: relative; }
  @media screen and (max-width: 768px) {
    .l-main__column-one, .l-main__column-two {
      width: 100%; } }

.l-main__column-one {
  background-color: #F0EFE9; }

.l-main__column-two {
  background-color: #EFEBE0; }

.l-contacts {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -80%);
          transform: translate(-50%, -80%); }
  @media screen and (max-width: 480px) {
    .l-contacts {
      top: 0;
      left: 0;
      right: 0;
      -webkit-transform: none;
              transform: none; } }

.l-footer {
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 9.1875rem;
  background-color: rgba(55, 62, 66, 0.85);
  padding: 0.5% 0;
  width: 100%; }
  .l-footer:after {
    display: block;
    content: '';
    width: 100%;
    height: 1px;
    background-color: rgba(255, 255, 255, 0.1);
    position: absolute;
    left: 0;
    top: 50%; }
  @media screen and (max-width: 768px) {
    .l-footer {
      min-height: 14.75rem; } }
  @media screen and (max-width: 480px) {
    .l-footer {
      min-height: 16.875rem; } }

.l-footer__nav {
  width: 50%;
  height: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .l-footer__nav {
      width: 90%;
      height: 22%;
      -webkit-order: 1;
          -ms-flex-order: 1;
              order: 1;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__nav {
      width: 100%; } }

.l-footer__text {
  width: 50%;
  height: 50%;
  font-size: 1.0625rem;
  font-weight: 300;
  color: rgba(255, 255, 255, 0.5);
  line-height: 1.5;
  text-align: left;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .l-footer__text a {
    text-decoration: underline;
    cursor: pointer;
    opacity: 0.5; }
  .l-footer__text a:hover {
    text-decoration: none; }
  @media screen and (max-width: 768px) {
    .l-footer__text {
      width: 80%;
      height: 28%;
      -webkit-order: 3;
          -ms-flex-order: 3;
              order: 3;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center;
      text-align: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__text {
      width: 100%; } }

.l-footer__social {
  width: 50%;
  height: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .l-footer__social {
      width: 80%;
      height: 28%;
      -webkit-order: 2;
          -ms-flex-order: 2;
              order: 2;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__social {
      width: 90%; } }

.l-footer__social-item {
  width: 2.1rem;
  height: 2.1rem;
  border: 0.5px solid rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  margin-right: 2%;
  transition: background-color 0.3s; }
  @media screen and (max-width: 480px) {
    .l-footer__social-item {
      margin-right: 4%; } }
  .l-footer__social-item:hover {
    background-color: rgba(255, 255, 255, 0.85); }
    .l-footer__social-item:hover .l-footer__social-link {
      color: #455a64; }
    .l-footer__social-item:hover .svg-use {
      opacity: 1; }

.l-footer__social-link {
  display: inline-block;
  width: 100%;
  height: 100%;
  color: white;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  transition: color 0.3s; }
  .l-footer__social-link .svg-use {
    width: 1.2rem;
    height: 1.55rem;
    opacity: 0.5;
    transition: opacity 0.3s; }

.overlay {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 9;
  overflow: hidden;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 191, 165, 0); }
  @media screen and (min-width: 1800px) {
    .overlay {
      left: 50%;
      -webkit-transform: translateX(-50%);
              transform: translateX(-50%);
      width: 1813px; } }

.overlay .overlay-section {
  position: fixed;
  top: 0;
  width: 50.3%;
  height: 100%;
  background: rgba(0, 191, 165, 0.87);
  z-index: -1;
  will-change: transform; }

.overlay .overlay-section.section-left {
  left: 0;
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%); }

.overlay .overlay-section.section-right {
  right: 0;
  -webkit-transform: translateX(100%);
          transform: translateX(100%); }

.overlay .c-hamburger-nav__list {
  opacity: 0; }

/* to_ open*/
.overlay.to_open {
  -webkit-animation: bg_to_color 0.3s 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: bg_to_color 0.3s 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_open .overlay-section.section-left {
  -webkit-animation: open_hamburger_left 0.5s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_unvisible 0.2s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: open_hamburger_left 0.5s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_unvisible 0.2s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_open .overlay-section.section-right {
  -webkit-animation: open_hamburger_right 0.5s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_unvisible 0.2s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: open_hamburger_right 0.5s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_unvisible 0.2s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_open .c-hamburger-nav__list {
  -webkit-animation: to_visible 0.1s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: to_visible 0.1s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

/*to_close*/
.overlay.to_close {
  -webkit-animation: bg_to_transparent 0s 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: bg_to_transparent 0s 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_close .c-hamburger-nav__list {
  -webkit-animation: to_unvisible 0.2s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: to_unvisible 0.2s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_close .overlay-section.section-left {
  -webkit-animation: close_hamburger_left 0.3s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_visible 0s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: close_hamburger_left 0.3s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_visible 0s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_close .overlay-section.section-right {
  -webkit-animation: close_hamburger_right 0.3s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_visible 0s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: close_hamburger_right 0.3s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_visible 0s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.c-hamburger-nav {
  width: 2.5rem;
  height: 1.875rem;
  position: relative; }

.c-hamburger-nav__target {
  display: block;
  width: 100%;
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  position: absolute;
  left: 0;
  top: 0; }
  .c-hamburger-nav__target #firstLine {
    -webkit-transform-origin: left top;
            transform-origin: left top;
    will-change: transform; }
  .c-hamburger-nav__target #centerLine {
    -webkit-transform-origin: center center;
            transform-origin: center center;
    will-change: transform; }
  .c-hamburger-nav__target #lastLine {
    -webkit-transform-origin: left bottom;
            transform-origin: left bottom;
    will-change: transform; }
  .c-hamburger-nav__target.animate #firstLine {
    -webkit-animation: rotate_leftClose 0.3s linear;
            animation: rotate_leftClose 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
  .c-hamburger-nav__target.animate #centerLine {
    -webkit-animation: scale_centerClose 0.3s linear;
            animation: scale_centerClose 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
  .c-hamburger-nav__target.animate #lastLine {
    -webkit-animation: rotate_rightClose 0.3s linear;
            animation: rotate_rightClose 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }

.c-hamburger-nav__close {
  display: block;
  width: 2.5rem;
  height: 1.875rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  position: absolute;
  right: 10%;
  top: 10%; }
  @media screen and (min-width: 1800px) {
    .c-hamburger-nav__close {
      left: 50%;
      -webkit-transform: translateX(800px);
              transform: translateX(800px); } }
  @media screen and (max-width: 768px) {
    .c-hamburger-nav__close {
      right: 5%;
      top: 5%; } }
  @media screen and (max-width: 480px) {
    .c-hamburger-nav__close {
      top: 3%;
      right: 4%; } }
  .c-hamburger-nav__close #firstLine {
    -webkit-transform-origin: left top;
            transform-origin: left top;
    will-change: transform;
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); }
  .c-hamburger-nav__close #centerLine {
    -webkit-transform-origin: center center;
            transform-origin: center center;
    will-change: transform;
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); }
  .c-hamburger-nav__close #lastLine {
    -webkit-transform-origin: left bottom;
            transform-origin: left bottom;
    will-change: transform;
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); }
  .c-hamburger-nav__close.animate #firstLine {
    -webkit-animation: rotate_leftHamburger 0.3s linear;
            animation: rotate_leftHamburger 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
  .c-hamburger-nav__close.animate #centerLine {
    -webkit-animation: rotate_centerHamburger 0.3s linear;
            animation: rotate_centerHamburger 0.3s linear;
    -webkit-animation-delay: 0.295s;
            animation-delay: 0.295s;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
  .c-hamburger-nav__close.animate #lastLine {
    -webkit-animation: rotate_rightHamburger 0.3s linear;
            animation: rotate_rightHamburger 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }

.c-hamburger-nav__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-hamburger-nav__item {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  color: white;
  margin-bottom: 8%; }
  .c-hamburger-nav__item .svg_dash {
    opacity: 0.2; }
  .c-hamburger-nav__item:hover .svg_dash {
    opacity: 0.5; }

.c-developer {
  width: 23.75rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-developer__img-wrap {
  width: 8.8125rem;
  height: 8.8125rem;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  overflow: hidden;
  margin-bottom: 4%;
  border-radius: 50%; }
  @media screen and (max-width: 480px) {
    .c-developer__img-wrap {
      width: 9.0625rem;
      height: 9.0625rem; } }

.c-developer__img {
  max-width: 100%; }

.c-developer__content {
  width: 100%;
  text-align: center; }

.c-develop_blog-header {
  color: white;
  position: relative; }

.c-developer__header {
  font-size: 2.1875rem;
  font-weight: 500;
  line-height: 1.5;
  margin-bottom: 0.3%;
  color: white; }
  @media screen and (max-width: 480px) {
    .c-developer__header {
      font-size: 1.375rem; } }

.c-developer__desc {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.5;
  font-weight: 300; }

.c-developer__desc_blog {
  color: white;
  font-weight: 400;
  display: inline-block;
  width: 100%; }

.c-next {
  display: block;
  width: 1.75rem;
  height: 1.125rem;
  position: absolute;
  bottom: 15%;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  z-index: 2;
  transition: -webkit-transform 0.3s;
  transition: transform 0.3s;
  transition: transform 0.3s, -webkit-transform 0.3s;
  will-change: transform; }
  .c-next:hover {
    -webkit-transform: translateX(-50%) scale(1.2);
            transform: translateX(-50%) scale(1.2); }
    .c-next:hover .svg_next {
      opacity: 1; }

.svg_hero {
  opacity: 0.06;
  width: 100%;
  height: 37%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  fill: white;
  z-index: 1; }

.svg_hamburger {
  width: 2.5rem;
  height: 1.875rem;
  color: white; }
  @media screen and (max-width: 768px) {
    .svg_hamburger {
      width: 2.1875rem;
      height: 1.6875rem; } }

.svg_hero-blog {
  opacity: 0.06;
  width: 150%;
  height: 300%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -40%);
          transform: translate(-50%, -40%);
  fill: white;
  z-index: 1; }

.svg_next {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white;
  transition: opacity 0.3s; }

.svg_prev {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white;
  transition: opacity 0.3s;
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1); }

.svg_dash {
  width: 1.6rem;
  height: 0.8rem;
  opacity: 0.25;
  fill: currentColor;
  stroke: currentColor;
  display: inline-block;
  vertical-align: middle;
  transition: opacity 0.3s; }
  @media screen and (max-width: 480px) {
    .svg_dash {
      width: 0.9rem; } }

.svg-main-top_two-color {
  width: 100.2%;
  height: 21rem;
  fill: #EFEBE0;
  stroke: #EFEBE0; }
  @media screen and (max-width: 768px) {
    .svg-main-top_two-color {
      fill: #F0EFE9;
      stroke: #F0EFE9; } }

.svg_main-top_one-color {
  width: 100.2%;
  height: 21rem;
  color: #faf8f0; }

.svg-main-icon {
  opacity: 0.07;
  position: absolute;
  top: 0;
  left: 50%;
  right: 0;
  bottom: 0;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 0; }

.svg-main-icon_about {
  width: 80%;
  -webkit-transform: translate(-50%, -30%);
          transform: translate(-50%, -30%); }
  @media screen and (max-width: 768px) {
    .svg-main-icon_about {
      width: 70%;
      -webkit-transform: translate(-50%, -40%);
              transform: translate(-50%, -40%); } }
  @media screen and (max-width: 768px) {
    .svg-main-icon_about {
      width: 50%; } }

.svg-main-icon_works {
  width: 100%;
  height: 11.875rem;
  -webkit-transform: translate(-50%, -28%);
          transform: translate(-50%, -28%); }
  @media screen and (max-width: 768px) {
    .svg-main-icon_works {
      height: 8.125rem; } }

.svg_skype, .svg_mail, .svg_phone, .svg_map-marker {
  color: #00bfa5;
  -webkit-flex-basis: 20%;
      -ms-flex-preferred-size: 20%;
          flex-basis: 20%;
  transition: opacity 0.3s; }
  .svg_skype:hover, .svg_mail:hover, .svg_phone:hover, .svg_map-marker:hover {
    opacity: 0.7; }

.svg_skype {
  width: 1.5rem;
  height: 1.5rem; }

.svg_mail {
  width: 1.5rem;
  height: 1.2rem; }

.svg_phone {
  width: 1.25rem;
  height: 1.1875rem; }

.svg_map-marker {
  width: 1.1875rem;
  height: 1.5rem; }

.svg_login {
  width: 0.9375rem;
  height: 1.0625rem;
  color: #c4cbcd; }

.svg_link {
  width: 1.25rem;
  height: 1.1875rem;
  margin-right: 0.5rem; }

.svg_slider-arrow {
  width: 2.8125rem;
  height: 1.75rem;
  box-shadow: 0px 2px 2px 0 rgba(0, 0, 0, 0.16);
  color: white;
  opacity: 0.7;
  transition: opacity 0.3s; }

.c-about-card {
  width: 70%;
  text-align: center;
  margin: auto;
  padding-bottom: 5%; }
  @media screen and (max-width: 768px) {
    .c-about-card {
      width: 65%; } }
  @media screen and (max-width: 480px) {
    .c-about-card {
      width: 100%; } }

.c-about-card__header {
  color: #373e42;
  margin-bottom: 7%;
  position: relative; }
  @media screen and (max-width: 768px) {
    .c-about-card__header {
      margin-top: 7%; } }

.c-about-card__img {
  max-width: 100%;
  width: 100%;
  height: auto;
  margin-bottom: 3%; }
  @media screen and (max-width: 768px) {
    .c-about-card__img {
      margin-bottom: 6%; } }

.c-about-card__content {
  text-align: center; }
  @media screen and (max-width: 480px) {
    .c-about-card__content {
      padding: 2%; } }

.c-about-card__content-header {
  color: #373e42;
  width: 60%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  margin: auto;
  margin-bottom: 3%; }
  .c-about-card__content-header .svg_dash {
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%); }
    @media screen and (max-width: 480px) {
      .c-about-card__content-header .svg_dash {
        -webkit-transform: none;
                transform: none; } }
  .c-about-card__content-header .h-title-article {
    line-height: 1.17;
    text-align: center; }

.c-about-card__content-text {
  display: block;
  text-align: left;
  line-height: 1.5;
  padding: 1% 0; }
  @media screen and (max-width: 768px) {
    .c-about-card__content-text {
      line-height: 1.714; } }

.h-title-section {
  font-family: 'bernier';
  font-size: 3.9375rem;
  letter-spacing: 0.2rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 1.0625rem;
  line-height: 1.05;
  font-weight: 500;
  color: #373e42; }
  .h-title-section:first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .h-title-section {
      font-size: 3.0625rem; } }
  @media screen and (max-width: 480px) {
    .h-title-section {
      font-size: 2.1875rem; } }

.h-title-section_color {
  color: white; }

.h-title-article {
  font-family: 'bernier';
  font-size: 2.1875rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 1rem;
  line-height: 1.5;
  font-weight: 500;
  color: #455a64; }
  .h-title-article:first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 480px) {
    .h-title-article {
      font-size: 1.375rem; } }

.c-skills-card {
  padding: 0 0 5% 5%; }
  @media screen and (max-width: 768px) {
    .c-skills-card {
      width: 95%;
      margin: 0 auto;
      padding-top: 5%; } }
  @media screen and (max-width: 480px) {
    .c-skills-card {
      padding: 0 0 5% 0; } }

.c-skills-card__header {
  color: #373e42;
  width: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  margin: auto;
  margin-bottom: 3%; }
  @media screen and (max-width: 768px) {
    .c-skills-card__header {
      width: 58%; } }
  @media screen and (max-width: 480px) {
    .c-skills-card__header {
      margin-top: 7%; } }
  .c-skills-card__header .svg_dash {
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%); }
    @media screen and (max-width: 480px) {
      .c-skills-card__header .svg_dash {
        -webkit-transform: none;
                transform: none; } }
  .c-skills-card__header .h-title-article {
    line-height: 1.17;
    text-align: center; }

.c-skills-card__desc {
  margin-bottom: 7%;
  width: 90%;
  display: block; }
  @media screen and (max-width: 768px) {
    .c-skills-card__desc {
      margin: 0 auto 7%;
      width: 77%;
      line-height: 1.714; } }
  @media screen and (max-width: 480px) {
    .c-skills-card__desc {
      width: 100%; } }

.c-skills-card__group {
  width: 100%;
  overflow: hidden; }
  @media screen and (max-width: 768px) {
    .c-skills-card__group {
      text-align: center;
      margin-bottom: 3%; } }

.c-skills-card__group-title {
  font-size: 1.75rem;
  margin-bottom: 2%;
  font-weight: 500;
  width: 100%;
  line-height: 1.14; }
  .c-skills-card__group-title::first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .c-skills-card__group-title {
      font-size: 1.3125rem; } }

.c-skills-card__group-content {
  width: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  @media screen and (max-width: 768px) {
    .c-skills-card__group-content {
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }

.c-skills-card__skill-item {
  position: relative; }

.c-skills-card__skill-title {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 50%;
  font-size: 0.9375rem;
  font-weight: 500;
  color: #00bfa5;
  line-height: 1.12;
  text-align: center; }

@media screen and (max-width: 768px) {
  .svg_skill-diagr {
    width: 140px;
    height: 140px; } }

.c-contacts {
  background-color: rgba(252, 252, 252, 0.85);
  width: 23.75rem;
  height: 18.125rem;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  border-radius: 0.3125rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  align-items: center; }
  @media screen and (max-width: 480px) {
    .c-contacts {
      width: 100%; } }

.c-contacts__header {
  color: #373e42;
  width: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  margin: auto;
  margin-bottom: 3%; }
  .c-contacts__header .svg_dash {
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%); }
    @media screen and (max-width: 480px) {
      .c-contacts__header .svg_dash {
        -webkit-transform: none;
                transform: none; } }
  .c-contacts__header .h-title-article {
    line-height: 1.17;
    text-align: center; }

.c-contacts__content {
  max-width: 100%;
  width: 90%;
  height: 70%; }

.c-contacts__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  height: 80%; }

.c-contacts__row {
  width: 100%; }

.c-contacts__link {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  color: rgba(69, 90, 100, 0.8);
  font-weight: 500;
  font-size: 1.0625rem;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  transition: color 0.3s; }
  .c-contacts__link:hover {
    color: rgba(0, 191, 165, 0.8); }

.c-nav__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 80%;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 375px) {
    .c-nav__list {
      width: 92%; } }

.c-nav__item {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1; }

.c-nav__link {
  display: inline-block;
  font-size: 1.0625rem;
  line-height: 1.5;
  font-weight: 500;
  white-space: nowrap;
  color: white;
  transition: color 0.4s; }
  .c-nav__link::first-letter {
    text-transform: uppercase; }
  .c-nav__link:hover {
    color: #00bfa5; }

.c-copy {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .c-copy a {
    text-decoration: underline;
    cursor: pointer; }
  .c-copy a:hover {
    text-decoration: none; }
  @media screen and (max-width: 768px) {
    .c-copy {
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap;
      text-align: center; } }

.c-copy_item {
  display: inline-block;
  color: white;
  font-weight: 300;
  font-size: 1rem;
  line-height: 6.28; }
  .c-copy_item:after {
    display: inline-block;
    content: '|';
    margin: 0 0.3rem;
    font-size: 1rem;
    font-weight: 300; }
  .c-copy_item:last-child:after {
    display: none; }
  @media screen and (max-width: 480px) {
    .c-copy_item {
      line-height: 1.5; }
      .c-copy_item:first-child {
        width: 100%; }
      .c-copy_item:first-child:after {
        display: none; } }

.c-copy_footer {
  width: 50%;
  height: 50%;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }
  @media screen and (max-width: 768px) {
    .c-copy_footer {
      width: 80%;
      height: 22%;
      -webkit-order: 4;
          -ms-flex-order: 4;
              order: 4;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .c-copy_footer {
      width: 100%; } }
  .c-copy_footer .c-copy_item {
    color: rgba(255, 255, 255, 0.5); }
  .c-copy_footer a {
    opacity: 0.5; }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/