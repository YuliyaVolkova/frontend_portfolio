/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on March 8, 2018 */
@font-face {
  font-family: 'bernier_distressed';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier_shade';
  src: url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff) format("woff");
  font-weight: 900;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff) format("woff");
  font-weight: 900;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff) format("woff");
  font-weight: 400;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff) format("woff");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff) format("woff");
  font-weight: 300;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff) format("woff");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff) format("woff");
  font-weight: 500;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff) format("woff");
  font-weight: 400;
  font-style: normal; }

/**
 * Set up a decent box model on the root element
 */
* {
  box-sizing: border-box; }

body, html {
  color: #455a64;
  background-color: #ededed;
  font-family: "roboto", "Arial", sans-serif;
  margin: 0;
  padding: 0;
  width: 100%;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.425rem;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-display: optional;
  position: relative; }
  @media screen and (min-width: 1800px) {
    body, html {
      background-color: rgba(69, 90, 100, 0.3); } }
  @media screen and (max-width: 992px) and (min-width: 769px) {
    body, html {
      font-size: 15px; } }
  @media screen and (max-width: 768px) {
    body, html {
      font-size: 14px; } }
  @media screen and (max-width: 480px) {
    body, html {
      font-size: 13px; } }
  @media screen and (max-width: 375px) {
    body, html {
      font-size: 12px; } }

body.hero, html.hero {
  height: 100%;
  overflow: hidden; }

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*::before,
*::after {
  box-sizing: inherit; }

/**
 * Basic styles for links
 */
a {
  color: white;
  text-decoration: none; }

ul {
  margin: 0;
  padding: 0; }

ul li {
  list-style: none; }

h1, h2, h3, p {
  margin: 0; }

svg {
  fill: currentColor;
  stroke: currentColor; }

button, input, select, textarea {
  font-family: "roboto", "Arial", sans-serif; }

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table; }

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap;
  display: block; }

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  /* margin: -1px;*/
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.l-wrapper {
  width: 100%;
  height: 100%;
  margin: 0;
  position: relative;
  overflow: hidden; }
  @media screen and (min-width: 1301px) {
    .l-wrapper {
      min-height: 650px; } }

.l-section {
  width: 100%;
  min-height: 628px;
  position: relative; }
  @media screen and (min-width: 1301px) {
    .l-section {
      min-height: 650px;
      width: 112.5rem;
      margin: auto; } }
  @media screen and (max-width: 768px) {
    .l-section {
      min-height: 100vh; } }

.l-last {
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.l-layout-first {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.l-feeds {
  height: 1280px;
  background-image: url(http://localhost:8080/assets/images/decor/bg/feeds_bg.png);
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  background-position: center center; }

.l-hero {
  height: 100vh;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  background-image: url(http://localhost:8080/assets/images/decor/bg/montains.jpg);
  background-attachment: fixed; }
  .l-hero:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(1, 102, 114, 0.3);
    z-index: 0; }
  @media screen and (min-width: 1301px) {
    .l-hero {
      min-height: 650px; } }
  @media screen and (max-width: 480px) {
    .l-hero {
      background-attachment: scroll; } }
  .l-hero .l-hamburger {
    top: 10%; }

.l-hero_blog {
  background-position: center top;
  height: 350px;
  min-height: 350px; }

.l-hero__develop {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 2; }

.l-hero__social {
  position: absolute;
  z-index: 1;
  left: 10%;
  top: 10%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 12%;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }
  @media screen and (max-width: 768px) {
    .l-hero__social {
      width: 20%; } }
  @media screen and (max-width: 480px) {
    .l-hero__social {
      width: 30%; } }

.l-hero__social-item {
  height: 1.375rem; }

.l-hero__social-link {
  display: inline-block;
  height: 100%;
  color: white; }
  .l-hero__social-link:hover .svg-use {
    opacity: 1; }

.svg-use {
  width: 1.75rem;
  height: 1.375rem;
  transition: opacity 0.4s;
  opacity: 0.5; }

.l-container {
  width: 95%;
  height: 9.1875rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: auto;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  @media screen and (max-width: 768px) {
    .l-container {
      height: 14.75rem;
      -webkit-align-items: center;
          -ms-flex-align: center;
              align-items: center; } }
  @media screen and (max-width: 480px) {
    .l-container {
      height: 16.875rem; } }

.l-hamburger {
  position: absolute;
  top: 2%;
  right: 10%;
  z-index: 1; }
  .l-hamburger_about {
    top: 2.5%; }
    @media screen and (max-width: 480px) {
      .l-hamburger_about {
        top: 2%; } }
  @media screen and (max-width: 768px) {
    .l-hamburger_works {
      top: 2.5%; } }

.l-main {
  width: 100%;
  background-color: #F0EFE9;
  height: 100%; }

.l-main__top {
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%); }

.l-main__wrapper {
  width: 100%;
  min-height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline; }
  @media screen and (min-width: 1301px) {
    .l-main__wrapper {
      width: 112.5rem;
      margin: auto; } }
  .l-main__wrapper.l-main_blog {
    background-color: #faf8f0;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column; }
  .l-main__wrapper.l-main_works {
    display: block;
    margin-bottom: 2%; }
  @media screen and (max-width: 768px) {
    .l-main__wrapper.l-main_about {
      -webkit-flex-direction: column;
          -ms-flex-direction: column;
              flex-direction: column;
      -webkit-align-items: center;
          -ms-flex-align: center;
              align-items: center; } }

.l-main__header {
  width: 100%;
  height: 12.1875rem;
  background-color: #faf8f0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.l-main__header-title {
  width: 40%;
  position: relative;
  color: #373e42;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .l-main__header-title .h-title-section {
    text-align: center; }
  .l-main__header-title::first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .l-main__header-title {
      width: 43%; } }

.l-main__slider {
  width: 100%;
  height: 750px;
  display: block; }
  @media screen and (max-width: 768px) {
    .l-main__slider {
      height: 1030px; } }

.l-main__column-one, .l-main__column-two {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  width: 50%;
  min-height: 100%;
  position: relative; }
  @media screen and (max-width: 768px) {
    .l-main__column-one, .l-main__column-two {
      width: 100%; } }

.l-main__column-one {
  background-color: #F0EFE9; }

.l-main__column-two {
  background-color: #EFEBE0; }

.l-footer {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 9.1875rem;
  background-color: rgba(55, 62, 66, 0.85);
  padding: 0.5% 0;
  position: relative;
  width: 100%; }
  .l-footer:after {
    display: block;
    content: '';
    width: 100%;
    height: 1px;
    background-color: rgba(255, 255, 255, 0.1);
    position: absolute;
    left: 0;
    top: 50%; }
  @media screen and (max-width: 768px) {
    .l-footer {
      min-height: 14.75rem; } }
  @media screen and (max-width: 480px) {
    .l-footer {
      min-height: 16.875rem; } }

.l-footer__nav {
  width: 50%;
  height: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .l-footer__nav {
      width: 80%;
      height: 22%;
      -webkit-order: 1;
          -ms-flex-order: 1;
              order: 1;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__nav {
      width: 90%; } }

.l-footer__text {
  width: 50%;
  height: 50%;
  font-size: 1.0625rem;
  font-weight: 300;
  color: rgba(255, 255, 255, 0.5);
  line-height: 1.5;
  text-align: left;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .l-footer__text a {
    text-decoration: underline;
    cursor: pointer;
    opacity: 0.5; }
  .l-footer__text a:hover {
    text-decoration: none; }
  @media screen and (max-width: 768px) {
    .l-footer__text {
      width: 80%;
      height: 28%;
      -webkit-order: 3;
          -ms-flex-order: 3;
              order: 3;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center;
      text-align: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__text {
      width: 90%; } }

.l-footer__social {
  width: 50%;
  height: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .l-footer__social {
      width: 80%;
      height: 28%;
      -webkit-order: 2;
          -ms-flex-order: 2;
              order: 2;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__social {
      width: 90%; } }

.l-footer__social-item {
  width: 2.1rem;
  height: 2.1rem;
  border: 0.5px solid rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  margin-right: 2%;
  transition: background-color 0.3s; }
  .l-footer__social-item:hover {
    background-color: rgba(255, 255, 255, 0.85); }
    .l-footer__social-item:hover .l-footer__social-link {
      color: #455a64; }
    .l-footer__social-item:hover .svg-use {
      opacity: 1; }

.l-footer__social-link {
  display: inline-block;
  width: 100%;
  height: 100%;
  color: white;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  transition: color 0.3s; }
  .l-footer__social-link .svg-use {
    width: 1.2rem;
    height: 1.55rem;
    opacity: 0.5;
    transition: opacity 0.3s; }

.c-hamburger-nav {
  width: 2.375rem;
  height: 2.0625rem; }

.c-hamburger-nav__target {
  display: block;
  width: 100%;
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-hamburger-nav__fake {
  display: block;
  width: 2.375rem;
  height: 0.3125rem;
  background-color: white;
  border-radius: 15%;
  overflow: visible;
  transition: 0.3s; }
  .c-hamburger-nav__fake:before {
    content: "";
    display: block;
    width: 2.375rem;
    height: 0.3125rem;
    border-radius: 15%;
    background-color: white;
    position: absolute;
    top: 100%;
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
    left: 0; }
  .c-hamburger-nav__fake:after {
    content: "";
    display: block;
    width: 2.375rem;
    height: 0.3125rem;
    border-radius: 15%;
    background-color: white;
    position: absolute;
    bottom: 100%;
    left: 0;
    -webkit-transform: translateY(100%);
            transform: translateY(100%); }

.c-hamburger-nav__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-hamburger-nav__item {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  text-transform: uppercase;
  font-size: 1.5rem;
  font-weight: 400; }
  .c-hamburger-nav__item:before {
    content: "";
    display: block;
    width: 0.3125rem;
    height: 0.3125rem;
    border-radius: 50%;
    background-color: white;
    margin: 0.9375rem; }
  .c-hamburger-nav__item:first-child:before {
    display: none; }

.c-developer {
  width: 23.75rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-developer__img-wrap {
  width: 8.8125rem;
  height: 8.8125rem;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  overflow: hidden;
  margin-bottom: 4%;
  border-radius: 50%; }

.c-developer__img {
  max-width: 100%; }

.c-developer__content {
  width: 100%;
  text-align: center; }

.c-develop_blog-header {
  color: white;
  position: relative; }

.c-developer__header {
  font-size: 2.1875rem;
  font-weight: 500;
  line-height: 1.5;
  margin-bottom: 0.3%;
  color: white; }

.c-developer__desc {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.5;
  font-weight: 300; }

.c-developer__desc_blog {
  color: white;
  font-weight: 400;
  display: inline-block;
  width: 100%; }

.c-blog {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  position: relative;
  padding-top: 4%;
  margin-bottom: auto;
  -webkit-align-items: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }

.c-blog__aside {
  position: absolute;
  left: 0;
  top: 1.5%;
  right: 75%; }
  @media screen and (max-width: 768px) {
    .c-blog__aside {
      display: none; } }

.pos-fixed {
  position: fixed;
  top: 10%; }

.c-blog__nav-item {
  text-align: right;
  padding: 4.5% 6.5%; }
  .c-blog__nav-item.is-active .c-blog__nav-link {
    font-weight: 900;
    color: #00bfa5; }
  .c-blog__nav-item.is-active {
    border-right: 3px solid #00bfa5; }

.c-blog__nav-link {
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.63;
  text-align: right;
  color: #455a64; }

.c-blog__main {
  width: 68%;
  padding: 0 1% 2% 1%;
  padding: 1% 1% 2% 1%;
  margin: 0 1.9% 0% auto; }
  @media screen and (max-width: 768px) {
    .c-blog__main {
      width: 95%;
      margin-bottom: 5%;
      margin-left: 0; } }

.c-blog__article {
  padding: 9% 0;
  border-bottom: 5px solid rgba(55, 62, 66, 0.07); }
  .c-blog__article:first-child {
    padding-top: 0; }
  .c-blog__article:last-child {
    border-bottom: none; }
  .c-blog__article .h-title-article {
    margin: 0; }

.article__date {
  display: block;
  font-size: 1rem;
  font-weight: 400;
  line-height: 2.56;
  text-align: left;
  color: rgba(0, 191, 165, 0.7); }

.article__text {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.63;
  text-align: left;
  color: #455a64; }

pre.prettyprint, code.prettyprint {
  background-color: #f4f2f0 !important;
  border: none !important;
  position: relative;
  counter-reset: item; }
  pre.prettyprint li, code.prettyprint li {
    background-color: #f4f2f0 !important;
    counter-increment: item;
    margin-bottom: 5px;
    position: relative; }
  pre.prettyprint li:before, code.prettyprint li:before {
    content: counter(item);
    color: #5a7b8c;
    width: 1.2em;
    text-align: center;
    display: block;
    top: 0;
    left: -1.3rem;
    bottom: 0;
    position: absolute;
    z-index: 1; }

pre.prettyprint {
  width: 100%;
  margin: 1em 0;
  padding: 1em;
  white-space: pre-wrap;
  font-weight: bold;
  border-radius: 1px; }
  pre.prettyprint:before {
    content: '';
    display: block;
    background-color: #E8E6E4;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: 3rem;
    z-index: 1; }

li.L0, li.L1, li.L2, li.L3,
li.L5, li.L6, li.L7, li.L8 {
  list-style-type: decimal !important; }

/*! Color themes for Google Code Prettify | MIT License | github.com/jmblog/color-themes-for-google-code-prettify */
.prettyprint {
  background: #f7f3f7;
  font-family: Menlo, "Bitstream Vera Sans Mono", "DejaVu Sans Mono", Monaco, Consolas, monospace;
  border: 0 !important; }

.pln {
  color: #1b181b; }

/* Specify class=linenums on a pre to get line numbering */
ol.linenums {
  margin-top: 0;
  margin-bottom: 0;
  color: #5a7b8c; }

li.L0,
li.L1,
li.L2,
li.L3,
li.L4,
li.L5,
li.L6,
li.L7,
li.L8,
li.L9 {
  padding-left: 1em;
  background-color: #f7f3f7; }

@media screen {
  /* string content */
  .str {
    color: #918b3b; }
  /* keyword */
  .kwd {
    color: #7b59c0; }
  /* comment */
  .com {
    color: #5a7b8c; }
  /* type name */
  .typ {
    color: #516aec; }
  /* literal value */
  .lit {
    color: #a65926; }
  /* punctuation */
  .pun {
    color: #1b181b; }
  /* lisp open bracket */
  .opn {
    color: #1b181b; }
  /* lisp close bracket */
  .clo {
    color: #1b181b; }
  /* markup tag name */
  .tag {
    color: #ca402b; }
  /* markup attribute name */
  .atn {
    color: #a65926; }
  /* markup attribute value */
  .atv {
    color: #159393; }
  /* declaration */
  .dec {
    color: #a65926; }
  /* variable name */
  .var {
    color: #ca402b; }
  /* function name */
  .fun {
    color: #516aec; } }

.svg_hero {
  opacity: 0.06;
  width: 100%;
  height: 37%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  fill: white;
  z-index: 1; }

.svg_hero-blog {
  opacity: 0.06;
  width: 150%;
  height: 300%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -40%);
          transform: translate(-50%, -40%);
  fill: white;
  z-index: 1; }

.svg_next {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white;
  transition: opacity 0.3s; }

.svg_prev {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white;
  transition: opacity 0.3s;
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1); }

.svg_dash {
  width: 1.6rem;
  height: 0.8rem;
  opacity: 0.25;
  fill: currentColor;
  stroke: currentColor;
  display: inline-block;
  vertical-align: middle; }

.svg-main-top_two-color {
  width: 100%;
  height: 20rem;
  fill: #EFEBE0;
  stroke: #EFEBE0; }
  @media screen and (max-width: 768px) {
    .svg-main-top_two-color {
      fill: #F0EFE9;
      stroke: #F0EFE9; } }

.svg_main-top_one-color {
  width: 100%;
  height: 20rem;
  color: #faf8f0; }

.svg-main-icon {
  opacity: 0.07;
  position: absolute;
  top: 0;
  left: 50%;
  right: 0;
  bottom: 0;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 0; }

.svg-main-icon_about {
  width: 80%;
  -webkit-transform: translate(-50%, -30%);
          transform: translate(-50%, -30%); }
  @media screen and (max-width: 768px) {
    .svg-main-icon_about {
      width: 70%;
      -webkit-transform: translate(-50%, -40%);
              transform: translate(-50%, -40%); } }

.svg-main-icon_works {
  width: 100%;
  height: 11.875rem;
  -webkit-transform: translate(-50%, -28%);
          transform: translate(-50%, -28%); }
  @media screen and (max-width: 768px) {
    .svg-main-icon_works {
      height: 8.125rem; } }

.svg_skype, .svg_mail, .svg_phone, .svg_map-marker {
  color: #00bfa5;
  -webkit-flex-basis: 20%;
      -ms-flex-preferred-size: 20%;
          flex-basis: 20%;
  transition: opacity 0.3s; }
  .svg_skype:hover, .svg_mail:hover, .svg_phone:hover, .svg_map-marker:hover {
    opacity: 0.7; }

.svg_skype {
  width: 1.5rem;
  height: 1.5rem; }

.svg_mail {
  width: 1.5rem;
  height: 1.2rem; }

.svg_phone {
  width: 1.25rem;
  height: 1.1875rem; }

.svg_map-marker {
  width: 1.1875rem;
  height: 1.5rem; }

.svg_login {
  width: 0.9375rem;
  height: 1.0625rem;
  color: #c4cbcd; }

.svg_link {
  width: 1.25rem;
  height: 1.1875rem;
  margin-right: 0.5rem; }

.svg_slider-arrow {
  width: 2.8125rem;
  height: 1.75rem;
  box-shadow: 0px 2px 2px 0 rgba(0, 0, 0, 0.16);
  color: white;
  opacity: 0.7;
  transition: opacity 0.3s; }

.h-title-section {
  font-family: 'bernier';
  font-size: 3.9375rem;
  letter-spacing: 0.2rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 1.0625rem;
  line-height: 1.05;
  font-weight: 500;
  color: #373e42; }
  .h-title-section:first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .h-title-section {
      font-size: 3.0625rem; } }

.h-title-section_color {
  color: white; }

.h-title-article {
  font-family: 'bernier';
  font-size: 2.1875rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 1rem;
  line-height: 1.5;
  font-weight: 500;
  color: #455a64; }
  .h-title-article:first-letter {
    text-transform: uppercase; }

.c-nav__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 80%;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-nav__item {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1; }

.c-nav__link {
  display: inline-block;
  font-size: 1.0625rem;
  line-height: 1.5;
  font-weight: 500;
  white-space: nowrap;
  color: white;
  transition: color 0.4s; }
  .c-nav__link::first-letter {
    text-transform: uppercase; }
  .c-nav__link:hover {
    color: #00bfa5; }

.c-copy {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .c-copy a {
    text-decoration: underline;
    cursor: pointer; }
  .c-copy a:hover {
    text-decoration: none; }
  @media screen and (max-width: 480px) {
    .c-copy {
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap;
      text-align: center; } }

.c-copy_item {
  display: inline-block;
  color: white;
  font-weight: 300;
  font-size: 1rem;
  line-height: 6.28; }
  .c-copy_item:after {
    display: inline-block;
    content: '|';
    margin: 0 0.3rem;
    font-size: 1rem;
    font-weight: 300; }
  .c-copy_item:last-child:after {
    display: none; }
  @media screen and (max-width: 480px) {
    .c-copy_item {
      line-height: 1.5; }
      .c-copy_item:first-child {
        width: 100%; }
      .c-copy_item:first-child:after {
        display: none; } }

.c-copy_footer {
  width: 50%;
  height: 50%;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }
  @media screen and (max-width: 768px) {
    .c-copy_footer {
      width: 80%;
      height: 22%;
      -webkit-order: 4;
          -ms-flex-order: 4;
              order: 4;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .c-copy_footer {
      width: 90%; } }
  .c-copy_footer .c-copy_item {
    color: rgba(255, 255, 255, 0.5); }
  .c-copy_footer a {
    opacity: 0.5; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hc3NldHMvc3R5bGVzL0M6XFxVc2Vyc1xcWXVsaXlhXFx3ZWJwcm9qZWN0c1xccG9ydGZvbGlvL3NyY1xcYXNzZXRzXFxzdHlsZXNcXGJhc2VcXF9mb250cy5zY3NzIiwic3JjL2Fzc2V0cy9zdHlsZXMvQzpcXFVzZXJzXFxZdWxpeWFcXHdlYnByb2plY3RzXFxwb3J0Zm9saW8vc3JjXFxhc3NldHNcXHN0eWxlc1xcYmFzZVxcX2Jhc2Uuc2NzcyIsInNyYy9hc3NldHMvc3R5bGVzL0M6XFxVc2Vyc1xcWXVsaXlhXFx3ZWJwcm9qZWN0c1xccG9ydGZvbGlvL3NyY1xcYXNzZXRzXFxzdHlsZXNcXHV0aWxzXFxfdmFyaWFibGVzLnNjc3MiLCJzcmMvYXNzZXRzL3N0eWxlcy9DOlxcVXNlcnNcXFl1bGl5YVxcd2VicHJvamVjdHNcXHBvcnRmb2xpby9zcmNcXGFzc2V0c1xcc3R5bGVzXFx1dGlsc1xcX21peGlucy5zY3NzIiwic3JjL2Fzc2V0cy9zdHlsZXMvQzpcXFVzZXJzXFxZdWxpeWFcXHdlYnByb2plY3RzXFxwb3J0Zm9saW8vc3JjXFxhc3NldHNcXHN0eWxlc1xcYmFzZVxcX2hlbHBlcnMuc2NzcyIsInNyYy9hc3NldHMvc3R5bGVzL0M6XFxVc2Vyc1xcWXVsaXlhXFx3ZWJwcm9qZWN0c1xccG9ydGZvbGlvL3NyY1xcYXNzZXRzXFxzdHlsZXNcXGxheW91dFxcX2wtd3JhcHBlci5zY3NzIiwic3JjL2Fzc2V0cy9zdHlsZXMvQzpcXFVzZXJzXFxZdWxpeWFcXHdlYnByb2plY3RzXFxwb3J0Zm9saW8vc3JjXFxhc3NldHNcXHN0eWxlc1xcbGF5b3V0XFxfbC1zZWN0aW9uLnNjc3MiLCJzcmMvYXNzZXRzL3N0eWxlcy9DOlxcVXNlcnNcXFl1bGl5YVxcd2VicHJvamVjdHNcXHBvcnRmb2xpby9zcmNcXGFzc2V0c1xcc3R5bGVzXFx1dGlsc1xcX2Z1bmN0aW9ucy5zY3NzIiwic3JjL2Fzc2V0cy9zdHlsZXMvQzpcXFVzZXJzXFxZdWxpeWFcXHdlYnByb2plY3RzXFxwb3J0Zm9saW8vc3JjXFxhc3NldHNcXHN0eWxlc1xcbGF5b3V0XFxfbC1oZXJvLnNjc3MiLCJzcmMvYXNzZXRzL3N0eWxlcy9DOlxcVXNlcnNcXFl1bGl5YVxcd2VicHJvamVjdHNcXHBvcnRmb2xpby9zcmNcXGFzc2V0c1xcc3R5bGVzXFxsYXlvdXRcXF9sLWhlcm9fX3NvY2lhbC5zY3NzIiwic3JjL2Fzc2V0cy9zdHlsZXMvQzpcXFVzZXJzXFxZdWxpeWFcXHdlYnByb2plY3RzXFxwb3J0Zm9saW8vc3JjXFxhc3NldHNcXHN0eWxlc1xcbGF5b3V0XFxfbC1jb250YWluZXIuc2NzcyIsInNyYy9hc3NldHMvc3R5bGVzL0M6XFxVc2Vyc1xcWXVsaXlhXFx3ZWJwcm9qZWN0c1xccG9ydGZvbGlvL3NyY1xcYXNzZXRzXFxzdHlsZXNcXGxheW91dFxcX2wtaGFtYnVyZ2VyLnNjc3MiLCJzcmMvYXNzZXRzL3N0eWxlcy9DOlxcVXNlcnNcXFl1bGl5YVxcd2VicHJvamVjdHNcXHBvcnRmb2xpby9zcmNcXGFzc2V0c1xcc3R5bGVzXFxsYXlvdXRcXF9sLW1haW4uc2NzcyIsInNyYy9hc3NldHMvc3R5bGVzL0M6XFxVc2Vyc1xcWXVsaXlhXFx3ZWJwcm9qZWN0c1xccG9ydGZvbGlvL3NyY1xcYXNzZXRzXFxzdHlsZXNcXGxheW91dFxcX2wtZm9vdGVyLnNjc3MiLCJzcmMvYXNzZXRzL3N0eWxlcy9DOlxcVXNlcnNcXFl1bGl5YVxcd2VicHJvamVjdHNcXHBvcnRmb2xpby9zcmNcXGFzc2V0c1xcc3R5bGVzXFxjb21wb25lbnRzXFxfYy1oYW1idXJnZXItbmF2LnNjc3MiLCJzcmMvYXNzZXRzL3N0eWxlcy9DOlxcVXNlcnNcXFl1bGl5YVxcd2VicHJvamVjdHNcXHBvcnRmb2xpby9zcmNcXGFzc2V0c1xcc3R5bGVzXFxjb21wb25lbnRzXFxfYy1kZXZlbG9wZXIuc2NzcyIsInNyYy9hc3NldHMvc3R5bGVzL0M6XFxVc2Vyc1xcWXVsaXlhXFx3ZWJwcm9qZWN0c1xccG9ydGZvbGlvL3NyY1xcYXNzZXRzXFxzdHlsZXNcXGNvbXBvbmVudHNcXF9jLWJsb2cuc2NzcyIsInNyYy9hc3NldHMvc3R5bGVzL0M6XFxVc2Vyc1xcWXVsaXlhXFx3ZWJwcm9qZWN0c1xccG9ydGZvbGlvL3NyY1xcYXNzZXRzXFxzdHlsZXNcXGNvbXBvbmVudHNcXF9zdmcuc2NzcyIsInNyYy9hc3NldHMvc3R5bGVzL0M6XFxVc2Vyc1xcWXVsaXlhXFx3ZWJwcm9qZWN0c1xccG9ydGZvbGlvL3NyY1xcYXNzZXRzXFxzdHlsZXNcXGNvbXBvbmVudHNcXF9oLXRpdGxlLnNjc3MiLCJzcmMvYXNzZXRzL3N0eWxlcy9DOlxcVXNlcnNcXFl1bGl5YVxcd2VicHJvamVjdHNcXHBvcnRmb2xpby9zcmNcXGFzc2V0c1xcc3R5bGVzXFxjb21wb25lbnRzXFxfYy1uYXYuc2NzcyIsInNyYy9hc3NldHMvc3R5bGVzL0M6XFxVc2Vyc1xcWXVsaXlhXFx3ZWJwcm9qZWN0c1xccG9ydGZvbGlvL3NyY1xcYXNzZXRzXFxzdHlsZXNcXGNvbXBvbmVudHNcXF9jLWNvcHkuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpRkFBaUY7QUFFakY7RUFDSSxrQ0FBaUM7RUFDakMsb0tBQ2tGO0VBQ2xGLG9CQUFtQjtFQUNuQixtQkFBa0IsRUFBQTs7QUFJdEI7RUFDSSx1QkFBc0I7RUFDdEIsOEpBQytFO0VBQy9FLG9CQUFtQjtFQUNuQixtQkFBa0IsRUFBQTs7QUFJdEI7RUFDSSw2QkFBNEI7RUFDNUIsMEpBQzZFO0VBQzdFLG9CQUFtQjtFQUNuQixtQkFBa0IsRUFBQTs7QUFLdEI7RUFDSSxzQkFBcUI7RUFDckIsc0lBQ21FO0VBQ25FLGlCQUFnQjtFQUNoQixtQkFBa0IsRUFBQTs7QUFJdEI7RUFDSSxzQkFBcUI7RUFDckIsa0pBQ3lFO0VBQ3pFLGlCQUFnQjtFQUNoQixtQkFBa0IsRUFBQTs7QUFJdEI7RUFDSSxzQkFBcUI7RUFDckIsMElBQ3FFO0VBQ3JFLGlCQUFnQjtFQUNoQixtQkFBa0IsRUFBQTs7QUFJdEI7RUFDSSxzQkFBcUI7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QVFqQjtNQTNCRDtRQXFCRyxZQUFXLEVBQ1g7TUF0Qkg7UUF3QkcsY0FBYSxFQUNiLEVBQUE7O0FBR0g7RUFDQyxXQUFVO0VBQ1YsWUFBVztFQUNYLGtDQUF5QjtNQUF6QixtQkFBeUI7VUFBekIsMEJBQXlCLEVBZ0J6QjtFakJoQ0E7SWlCYUQ7TUFLRSxXQUFVO01BQ1YsWUFBVztNQUNYLGlCQUFRO1VBQVIsa0JBQVE7Y0FBUixTQUFRO01BQ1IsZ0NBQXVCO1VBQXZCLHNCQUF1QjtjQUF2Qix3QkFBdUIsRUFXeEIsRUFBQTtFakIxQkE7SWlCT0Q7TUFXRSxXQUFVLEVBUVgsRUFBQTtFQW5CRDtJQWNFLGdDbEJyRCtCLEVrQnNEL0I7RUFmRjtJQWlCRSxhQUFZLEVBQ1oiLCJmaWxlIjoic3JjL2Fzc2V0cy9zdHlsZXMvYmxvZy5tYWluLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgR2VuZXJhdGVkIGJ5IEZvbnQgU3F1aXJyZWwgKGh0dHBzOi8vd3d3LmZvbnRzcXVpcnJlbC5jb20pIG9uIE1hcmNoIDgsIDIwMTggKi9cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdiZXJuaWVyX2Rpc3RyZXNzZWQnO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2Jlcm5pZXIvYmVybmllcmRpc3RyZXNzZWQtcmVndWxhci13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2Jlcm5pZXIvYmVybmllcmRpc3RyZXNzZWQtcmVndWxhci13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnYmVybmllcic7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvYmVybmllci9iZXJuaWVycmVndWxhci1yZWd1bGFyLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvYmVybmllci9iZXJuaWVycmVndWxhci1yZWd1bGFyLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdiZXJuaWVyX3NoYWRlJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJzaGFkZS1yZWd1bGFyLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvYmVybmllci9iZXJuaWVyc2hhZGUtcmVndWxhci13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcblxyXG59XHJcblxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ3JvYm90byc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1ib2xkLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1ib2xkLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tYm9sZGl0YWxpYy13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tYm9sZGl0YWxpYy13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWl0YWxpYy13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8taXRhbGljLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbGlnaHQtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0LXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbGlnaHRpdGFsaWMtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0aXRhbGljLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbWVkaXVtLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1tZWRpdW0td2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG5cclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ3JvYm90byc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1tZWRpdW1pdGFsaWMtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLW1lZGl1bWl0YWxpYy13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLXJlZ3VsYXItd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLXJlZ3VsYXItd2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG5cclxufVxyXG5cclxuJHRleHQtZm9udC1zdGFjazogKCdyb2JvdG8nLCAnQXJpYWwnLCBzYW5zLXNlcmlmKTsiLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIHZlcnkgYmFzaWMgc3R5bGVzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLyoqXG4gKiBTZXQgdXAgYSBkZWNlbnQgYm94IG1vZGVsIG9uIHRoZSByb290IGVsZW1lbnRcbiAqL1xuKiB7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmJvZHksIGh0bWwge1xuXG4gIFx0Y29sb3I6ICR0ZXh0LWNvbG9yO1xuIFx0YmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0LWdyZXk7IFxuICBcdGZvbnQtZmFtaWx5OiAkdGV4dC1mb250LXN0YWNrO1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG5cdHdpZHRoOiAxMDAlO1xuXHRmb250LXdlaWdodDogNDAwO1xuXHRmb250LXNpemU6IDE2cHg7XG5cdGxpbmUtaGVpZ2h0OiAxLjQyNXJlbTtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcblx0Zm9udC1kaXNwbGF5OiBvcHRpb25hbDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRAaW5jbHVkZSBjdXN0b21fMTgwMCB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSgkdGV4dC1jb2xvciwgMC4zKTtcblx0fSBcblx0XG5cdEBpbmNsdWRlIGxhcHRvcCB7XG5cblx0XHRmb250LXNpemU6IDE1cHg7XG5cdH1cblxuXHRAaW5jbHVkZSB0YWJsZXQge1xuXG5cdFx0Zm9udC1zaXplOiAxNHB4O1xuXHR9XG5cblx0QGluY2x1ZGUgbW9iaWxlIHtcblxuXHRcdGZvbnQtc2l6ZTogMTNweDtcblx0fVxuXG5cdEBpbmNsdWRlIHMtbW9iaWxlIHtcblxuXHRcdGZvbnQtc2l6ZTogMTJweDtcblx0fVxufVxuYm9keS5oZXJvLCBodG1sLmhlcm8ge1xuXHRoZWlnaHQ6IDEwMCU7XG5cdG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qKlxuICogTWFrZSBhbGwgZWxlbWVudHMgZnJvbSB0aGUgRE9NIGluaGVyaXQgZnJvbSB0aGUgcGFyZW50IGJveC1zaXppbmdcbiAqIFNpbmNlIGAqYCBoYXMgYSBzcGVjaWZpY2l0eSBvZiAwLCBpdCBkb2VzIG5vdCBvdmVycmlkZSB0aGUgYGh0bWxgIHZhbHVlXG4gKiBtYWtpbmcgYWxsIGVsZW1lbnRzIGluaGVyaXRpbmcgZnJvbSB0aGUgcm9vdCBib3gtc2l6aW5nIHZhbHVlXG4gKiBTZWU6IGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vaW5oZXJpdGluZy1ib3gtc2l6aW5nLXByb2JhYmx5LXNsaWdodGx5LWJldHRlci1iZXN0LXByYWN0aWNlL1xuICovXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQmFzaWMgc3R5bGVzIGZvciBsaW5rc1xuICovXG5hIHtcbiAgY29sb3I6ICRwcmltYXJ5Q29sb3I7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxudWwge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG59XG5cbnVsIGxpIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaDEsIGgyLCBoMywgcCB7XG5cdG1hcmdpbjogMDtcbn1cblxuc3ZnIHtcblx0ZmlsbDogY3VycmVudENvbG9yO1xuXHRzdHJva2U6IGN1cnJlbnRDb2xvcjtcbn1cblxuYnV0dG9uLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiAkdGV4dC1mb250LXN0YWNrO1xuIH1cblxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFRoaXMgZmlsZSBjb250YWlucyBhbGwgYXBwbGljYXRpb24td2lkZSBTYXNzIHZhcmlhYmxlcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLy8gUmVndWxhciBmb250IGZhbWlseVxuLy8vIEB0eXBlIExpc3RcblxuJHByaW1hcnlDb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xuXG4vLy8gQ29weSB0ZXh0IGNvbG9yXG4vLy8gQHR5cGUgQ29sb3JcbiR0ZXh0LWNvbG9yOiByZ2IoNjksIDkwLCAxMDApICFkZWZhdWx0O1xuJHRpdGxlLWNvbG9yOiByZ2IoNTUsIDYyLCA2Nik7XG4vLy9cbiRkYXJrLXRleHQtY29sb3I6ICMzNzNFNDI7XG5cbi8vLyBNYWluIGJyYW5kIGNvbG9yXG4vLy8gQHR5cGUgQ29sb3Jcbi8vJGJyYW5kLWNvbG9yOiByZ2IoMzIsMTgxLDE2MSkgIWRlZmF1bHQ7XG4kYnJhbmQtY29sb3I6IHJnYigwLCAxOTEsIDE2NSkgIWRlZmF1bHQ7XG5cbi8vLyBTZWNvbmRhcnkgY29sb3JcbiRzZWNvbmQtY29sb3I6IHJnYigwLCAxNTAsIDEzNik7XG5cbiRsaWdodC1yZWQ6IHJnYigyMjMsIDg3LCAxMDIpO1xuXG4kbGlnaHQtd2hpdGU6ICNGRUZFRkU7XG4kbGlnaHQtYmVpZ2U6ICNGMEVGRTk7XG4kYmVpZ2U6ICNGQkY4RjE7XG4kYmVpZ2Utb25lOiAjZWZlZWU5O1xuJGJlaWdlLXR3bzogI2VlZWJkZjtcblxuLy8vIExpZ2h0IGdyZXlcbi8vLyBAdHlwZSBDb2xvclxuJGxpZ2h0LWdyZXk6IHJnYigyMzcsIDIzNywgMjM3KSAhZGVmYXVsdDtcblxuLy8vIE1lZGl1bSBncmV5XG4vLy8gQHR5cGUgQ29sb3JcbiRtaWQtZ3JleTogcmdiKDE1MywgMTUzLCAxNTMpICFkZWZhdWx0O1xuXG4vLy8gRGFyayBncmV5XG4vLy8gQHR5cGUgQ29sb3JcbiRkYXJrLWdyZXk6IHJnYig2OCwgNjgsIDY4KSAhZGVmYXVsdDtcblxuLy8vKioqIGNvbG9ycyAqKioqXG4vLy9cbi8vXCIjMDA3N0I1XCJcbi8vcmdiKDEsIDEwMiwgMTE0KVxuXG4vLy8gQ29udGFpbmVyJ3MgbWF4aW11bSB3aWR0aFxuLy8vIEB0eXBlIExlbmd0aFxuJG1heC13aWR0aDogMTE4MHB4ICFkZWZhdWx0O1xuXG4vLy8gQnJlYWtwb2ludHMgbWFwXG4vLy8gQHByb3Age1N0cmluZ30ga2V5cyAtIEtleXMgYXJlIGlkZW50aWZpZXJzIG1hcHBlZCB0byBhIGdpdmVuIGxlbmd0aFxuLy8vIEBwcm9wIHtNYXB9IHZhbHVlcyAtIFZhbHVlcyBhcmUgYWN0dWFsIGJyZWFrcG9pbnRzIGV4cHJlc3NlZCBpbiBwaXhlbHNcbiRicmVha3BvaW50czogKFxuICAnc21hbGwnOiAzMjBweCxcbiAgJ21lZGl1bSc6IDc2OHB4LFxuICAnbGFyZ2UnOiAxMDI0cHgsXG4pICFkZWZhdWx0O1xuXG4kZGVza3RvcDogMTMwMHB4O1xuJGxhcHRvcDogIDk5MnB4O1xuJHRhYmxldDogNzY4cHg7XG4kbW9iaWxlOiA0ODBweDtcbiRzbWFsbC1tb2JpbGU6IDM3NXB4O1xuXG4vLy8gUmVsYXRpdmUgb3IgYWJzb2x1dGUgVVJMIHdoZXJlIGFsbCBhc3NldHMgYXJlIHNlcnZlZCBmcm9tXG4vLy8gQHR5cGUgU3RyaW5nXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdoZW4gdXNpbmcgYSBDRE5cbi8vLyAgICRiYXNlLXVybDogJ2h0dHA6Ly9jZG4uZXhhbXBsZS5jb20vYXNzZXRzLyc7XG4kYmFzZS11cmw6ICcvYXNzZXRzLycgIWRlZmF1bHQ7XG4iLCJcclxuQG1peGluIHNpemUoJHdpZHRoLCAkaGVpZ2h0OiAkd2lkdGgpIHtcclxuICB3aWR0aDogJHdpZHRoO1xyXG4gIGhlaWdodDogJGhlaWdodDtcclxufVxyXG5cclxuLy8vIG1peGlucyBmb3IgTWVkaWEgUXVlcmllc1xyXG5AbWl4aW4gY3VzdG9tXzE4MDAge1xyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE4MDBweCkge1xyXG4gICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBjdXN0b20ge1xyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRkZXNrdG9wICsgMSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gZGVza3RvcCB7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGxhcHRvcCArIDEpIGFuZCAobWF4LXdpZHRoOiAkZGVza3RvcCkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gbGFwdG9wIHtcclxuXHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbGFwdG9wKSBhbmQgKG1pbi13aWR0aDogJHRhYmxldCArIDEpIHtcclxuICBcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIHRhYmxldCB7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHRhYmxldCkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gbW9iaWxlIHtcclxuXHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbW9iaWxlKSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbkBtaXhpbiBzLW1vYmlsZSB7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHNtYWxsLW1vYmlsZSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gcmV0aW5hIHtcclxuICBAbWVkaWFcclxuICAgIG9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSxcclxuICAgIG9ubHkgc2NyZWVuIGFuZCAobWluLS1tb3otZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSxcclxuICAgIG9ubHkgc2NyZWVuIGFuZCAoLW8tbWluLWRldmljZS1waXhlbC1yYXRpbzogMi8xKSxcclxuICAgIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksXHJcbiAgICBvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpLFxyXG4gICAgb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuXHJcbkBtaXhpbiBwcmludCB7XHJcbiAgQG1lZGlhIHByaW50IHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuLy8vIG1peGlucyBmb3IgY2hhbmdlIHZpc2libGl0eVxyXG5cclxuQG1peGluIGludmlzaWJsZSB7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgbWFyZ2luOiAtMXB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcGFkZGluZzogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDFweDtcclxufVxyXG5cclxuQG1peGluIHZpc2libGUge1xyXG4gIGhlaWdodDogaW5pdGlhbDtcclxuICB3aWR0aDogaW5pdGlhbDtcclxuICBtYXJnaW46IGluaXRpYWw7XHJcbiAgcG9zaXRpb246IGluaXRpYWw7XHJcbn1cclxuXHJcbi8vLyBwb3NpdGlvblxyXG5cclxuQG1peGluIGFic29sdXRlLXN0cmV0Y2gge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuXHJcbkBtaXhpbiBhYnNvbHV0ZS1jZW50ZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbn1cclxuXHJcbkBtaXhpbiBhYnNvbHV0ZS1jZW50ZXJYIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxufVxyXG5cclxuQG1peGluIGFic29sdXRlLWNlbnRlclkge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG59XHJcbi8vLyBUcmlhbmdsZSBoZWxwZXIgbWl4aW5cclxuLy8vIEBwYXJhbSB7RGlyZWN0aW9ufSAkZGlyZWN0aW9uIC0gVHJpYW5nbGUgZGlyZWN0aW9uLCBlaXRoZXIgYHRvcGAsIGByaWdodGAsIFxyXG4vLy9gYm90dG9tYCBvciBgbGVmdGBcclxuLy8vIEBwYXJhbSB7Q29sb3J9ICRjb2xvciBbY3VycmVudGNvbG9yXSAtIFRyaWFuZ2xlIGNvbG9yIFxyXG4vLy8gQHBhcmFtIHtMZW5ndGh9ICRzaXplIFsxZW1dIC0gVHJpYW5nbGUgc2l6ZVxyXG5cclxuQG1peGluIHRyaWFuZ2xlKCRkaXJlY3Rpb24sICRjb2xvcjogY3VycmVudGNvbG9yLCAkc2l6ZTogMWVtKSB7XHJcbiAgXHJcbiAgQGlmIG5vdCBpbmRleCh0b3AgcmlnaHQgYm90dG9tIGxlZnQsICRkaXJlY3Rpb24pIHtcclxuICAgIEBlcnJvciBcIkRpcmVjdGlvbiBtdXN0IGJlIGVpdGhlciBgdG9wYCwgYHJpZ2h0YCwgYGJvdHRvbWAgb3IgYGxlZnRgLlwiO1xyXG4gIH1cclxuXHJcbiAgd2lkdGg6IDA7XHJcbiAgaGVpZ2h0OiAwO1xyXG4gIHotaW5kZXg6IDI7XHJcbiAgYm9yZGVyLSN7b3Bwb3NpdGUtZGlyZWN0aW9uKCRkaXJlY3Rpb24pfTogKCRzaXplICogMS41KSBzb2xpZCAkY29sb3I7XHJcbiAgXHJcbiAgJHBlcnBlbmRpY3VsYXItYm9yZGVyczogJHNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgXHJcbiAgQGlmICRkaXJlY3Rpb24gPT0gdG9wIG9yICRkaXJlY3Rpb24gPT0gYm90dG9tIHtcclxuICAgIGJvcmRlci1sZWZ0OiAgICRwZXJwZW5kaWN1bGFyLWJvcmRlcnM7XHJcbiAgICBib3JkZXItcmlnaHQ6ICAkcGVycGVuZGljdWxhci1ib3JkZXJzO1xyXG4gIH0gQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSByaWdodCBvciAkZGlyZWN0aW9uID09IGxlZnQge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogJHBlcnBlbmRpY3VsYXItYm9yZGVycztcclxuICAgIGJvcmRlci10b3A6ICAgICRwZXJwZW5kaWN1bGFyLWJvcmRlcnM7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLy8vIHN0eWxpbmcgcmFkaW9idXR0b24sIGNoZWNrYm94XHJcblxyXG5AbWl4aW4gaGlkZGVuIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwcHg7XHJcbiAgbGVmdDogMHB4O1xyXG4gIHdpZHRoOiAwO1xyXG4gIGhlaWdodDogMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG9wYWNpdHk6IDA7XHJcbn1cclxuLy8vIGZvciBwbGFjZWhvbGRlciBzdHlsaW5nXHJcblxyXG5AbWl4aW4gcGxhY2Vob2xkZXIge1xyXG4gIFxyXG4gICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyBAY29udGVudDsgfVxyXG4gICY6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAgeyBAY29udGVudDsgfVxyXG4gICY6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgeyBAY29udGVudDsgfVxyXG4gICY6LW1zLWlucHV0LXBsYWNlaG9sZGVyICAgICAgeyBAY29udGVudDsgfSAgXHJcbn0iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIENTUyBoZWxwZXIgY2xhc3Nlcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qKlxuICogQ2xlYXIgaW5uZXIgZmxvYXRzXG4gKi9cbi5jbGVhcmZpeDo6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IHRhYmxlO1xufVxuXG4vKipcbiAqIE1haW4gY29udGVudCBjb250YWluZXJzXG4gKiAxLiBNYWtlIHRoZSBjb250YWluZXIgZnVsbC13aWR0aCB3aXRoIGEgbWF4aW11bSB3aWR0aFxuICogMi4gQ2VudGVyIGl0IGluIHRoZSB2aWV3cG9ydFxuICogMy4gTGVhdmUgc29tZSBzcGFjZSBvbiB0aGUgZWRnZXMsIGVzcGVjaWFsbHkgdmFsdWFibGUgb24gc21hbGwgc2NyZWVuc1xuICovXG5cblxuLyoqXG4gKiBIaWRlIHRleHQgd2hpbGUgbWFraW5nIGl0IHJlYWRhYmxlIGZvciBzY3JlZW4gcmVhZGVyc1xuICogMS4gTmVlZGVkIGluIFdlYktpdC1iYXNlZCBicm93c2VycyBiZWNhdXNlIG9mIGFuIGltcGxlbWVudGF0aW9uIGJ1ZztcbiAqICAgIFNlZTogaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ1NzE0NlxuICovXG4uaGlkZS10ZXh0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMDsgLyogMSAqL1xuICB0ZXh0LWluZGVudDogMTAxJTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogSGlkZSBlbGVtZW50IHdoaWxlIG1ha2luZyBpdCByZWFkYWJsZSBmb3Igc2NyZWVuIHJlYWRlcnNcbiAqIFNoYW1lbGVzc2x5IGJvcnJvd2VkIGZyb20gSFRNTDVCb2lsZXJwbGF0ZTpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9oNWJwL2h0bWw1LWJvaWxlcnBsYXRlL2Jsb2IvbWFzdGVyL3NyYy9jc3MvbWFpbi5jc3MjTDExOS1MMTMzXG4gKi9cbi52aXN1YWxseS1oaWRkZW4ge1xuICBib3JkZXI6IDA7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGhlaWdodDogMXB4O1xuIC8qIG1hcmdpbjogLTFweDsqL1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG59XG5cbiIsIlxyXG4ubC13cmFwcGVyIHtcclxuXHRcclxuXHRAaW5jbHVkZSBzaXplKDEwMCUpO1xyXG5cdG1hcmdpbjogMDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRAaW5jbHVkZSBjdXN0b20ge1xyXG5cdFx0bWluLWhlaWdodDogNjUwcHg7XHJcblx0fVxyXG59IiwiXHJcbi5sLXNlY3Rpb24ge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdG1pbi1oZWlnaHQ6IDYyOHB4O1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdEBpbmNsdWRlIGN1c3RvbSB7XHJcblx0XHRcdG1pbi1oZWlnaHQ6IDY1MHB4O1xyXG5cdFx0XHR3aWR0aDogcmVtKDE4MDApO1xyXG5cdFx0XHRtYXJnaW46IGF1dG87XHJcblx0XHR9XHJcblx0XHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0XHRtaW4taGVpZ2h0OiAxMDB2aDtcclxuXHRcdH1cclxufVxyXG5cclxuLmwtbGFzdCB7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5sLWxheW91dC1maXJzdCB7XHJcblx0QGluY2x1ZGUgYWJzb2x1dGUtc3RyZXRjaDtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuLmwtZmVlZHMge1xyXG5cdGhlaWdodDogMTI4MHB4O1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2RlY29yL2JnL2ZlZWRzX2JnLnBuZycpO1xyXG5cdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcblx0YmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcclxuXHRiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG5cdGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbn0iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIGFsbCBhcHBsaWNhdGlvbi13aWRlIFNhc3MgZnVuY3Rpb25zLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRicm93c2VyLWNvbnRleHQ6IDE2O1xuXG4vLy8gcmVtXG5cbkBmdW5jdGlvbiByZW0oJHBpeGVscywgJGNvbnRleHQ6ICRicm93c2VyLWNvbnRleHQpIHtcbiAgQGlmICh1bml0bGVzcygkcGl4ZWxzKSkge1xuICAgICRwaXhlbHM6ICRwaXhlbHMgKiAxcHg7XG4gIH1cblxuICBAaWYgKHVuaXRsZXNzKCRjb250ZXh0KSkge1xuICAgICRjb250ZXh0OiAkY29udGV4dCAqIDFweDtcbiAgfVxuXG4gIEByZXR1cm4gJHBpeGVscyAvICRjb250ZXh0ICogMXJlbTtcbn1cblxuLy8vIGVtXG5cbkBmdW5jdGlvbiBlbSgkcGl4ZWxzLCAkY29udGV4dDogJGJyb3dzZXItY29udGV4dCkge1xuICBAaWYgKHVuaXRsZXNzKCRwaXhlbHMpKSB7XG4gICAgJHBpeGVsczogJHBpeGVscyAqIDFweDtcbiAgfVxuXG4gIEBpZiAodW5pdGxlc3MoJGNvbnRleHQpKSB7XG4gICAgJGNvbnRleHQ6ICRjb250ZXh0ICogMXB4O1xuICB9XG5cbiAgQHJldHVybiAkcGl4ZWxzIC8gJGNvbnRleHQgKiAxZW07XG59XG5cbi8vLyBmdW5jdGlvbiBpcyBpdCBhbGxvd3MgeW91IHRvIHBhc3MgYSBsaXN0IG9mIGRpcmVjdGlvbnMsIFxuLy8vc28gdGhhdCB5b3UgZ2V0IGJvdHRvbSBsZWZ0IGZyb20gb3Bwb3NpdGUtZGlyZWN0aW9uKHRvcCByaWdodCkuXG4vLy8gSXQgY2FuIGJlIHVzZWZ1bCB3aGVuIGRlYWxpbmcgd2l0aCBiYWNrZ3JvdW5kLXBvc2l0aW9uLCBmb3IgaW5zdGFuY2VcblxuQGZ1bmN0aW9uIG9wcG9zaXRlLWRpcmVjdGlvbigkZGlyZWN0aW9ucykge1xuXG4gICRvcHBvc2l0ZS1kaXJlY3Rpb25zOiAoKTtcbiAgJGRpcmVjdGlvbi1tYXA6IChcbiAgICAndG9wJzogJ2JvdHRvbScsXG4gICAgJ3JpZ2h0JzogJ2xlZnQnLFxuICAgICdib3R0b20nOiAndG9wJyxcbiAgICAnbGVmdCc6ICdyaWdodCcsXG4gICAgJ2x0cic6ICdydGwnLFxuICAgICdydGwnOiAnbHRyJyk7XG5cbiAgQGVhY2ggJGRpcmVjdGlvbiBpbiAkZGlyZWN0aW9ucyB7XG4gICAgJG9wcG9zaXRlLWRpcmVjdGlvbjogbWFwLWdldCgkZGlyZWN0aW9uLW1hcCwgJGRpcmVjdGlvbik7XG4gICAgICAgIEBpZiAkb3Bwb3NpdGUtZGlyZWN0aW9uICE9IG51bGwgeyBcbiAgICAgICRvcHBvc2l0ZS1kaXJlY3Rpb25zOiBhcHBlbmQoJG9wcG9zaXRlLWRpcmVjdGlvbnMsICN7JG9wcG9zaXRlLWRpcmVjdGlvbn0pO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICBAd2FybiBcIk5vIG9wcG9zaXRlIGRpcmVjdGlvbiBjYW4gYmUgZm91bmQgZm9yIGAjeyRkaXJlY3Rpb259YC5cIjtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuICRvcHBvc2l0ZS1kaXJlY3Rpb25zO1xufVxuXG4iLCJcclxuLmwtaGVybyB7XHJcblx0aGVpZ2h0OiAxMDB2aDtcclxuXHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG5cdGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcblx0YmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcclxuXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltYWdlcy9kZWNvci9iZy9tb250YWlucy5qcGcnKTtcclxuXHRiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xyXG5cdFx0XHJcblx0XHQmOmJlZm9yZSB7XHJcblx0XHRcdGNvbnRlbnQ6ICcnO1xyXG5cdFx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdFx0QGluY2x1ZGUgYWJzb2x1dGUtc3RyZXRjaDtcclxuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSgxLCAxMDIsIDExNCwgMC4zKTtcclxuXHRcdFx0ei1pbmRleDogMDtcclxuXHRcdH1cclxuXHJcblx0QGluY2x1ZGUgY3VzdG9tIHtcclxuXHRcdG1pbi1oZWlnaHQ6IDY1MHB4O1xyXG5cdH1cclxuXHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xyXG5cdH1cclxuXHQmIC5sLWhhbWJ1cmdlciB7XHJcblx0XHR0b3A6IDEwJTtcclxuXHR9XHJcbn1cclxuXHJcbi5sLWhlcm9fYmxvZyB7XHJcblx0YmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcclxuXHRoZWlnaHQ6IDM1MHB4O1xyXG5cdG1pbi1oZWlnaHQ6IDM1MHB4O1xyXG59XHJcblxyXG4ubC1oZXJvX19kZXZlbG9wIHtcclxuXHRAaW5jbHVkZSBhYnNvbHV0ZS1jZW50ZXI7XHJcblx0ei1pbmRleDogMjtcclxufSIsIlxyXG4ubC1oZXJvX19zb2NpYWwge1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR6LWluZGV4OiAxO1xyXG5cdGxlZnQ6IDEwJTtcclxuXHR0b3A6IDEwJTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdHdpZHRoOiAxMiU7XHJcblx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogMjAlO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0d2lkdGg6IDMwJTtcclxuXHR9XHJcbn1cclxuXHJcbi5sLWhlcm9fX3NvY2lhbC1pdGVtIHtcclxuXHJcblx0aGVpZ2h0OiByZW0oMjIpO1xyXG59XHJcblxyXG4ubC1oZXJvX19zb2NpYWwtbGluayB7XHJcblxyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRoZWlnaHQ6IDEwMCU7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblxyXG5cdCY6aG92ZXIgLnN2Zy11c2Uge1xyXG5cclxuXHRcdG9wYWNpdHk6IDE7XHJcblx0fVxyXG59XHJcblxyXG4uc3ZnLXVzZSB7XHJcblxyXG5cdEBpbmNsdWRlIHNpemUocmVtKDI4KSwgcmVtKDIyKSk7XHJcblx0dHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzO1xyXG5cdG9wYWNpdHk6IDAuNTtcclxufSIsIi5sLWNvbnRhaW5lciB7XHJcblx0d2lkdGg6IDk1JTtcclxuXHRoZWlnaHQ6IHJlbSgxNDdweCk7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRtYXJnaW46IGF1dG87XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRmbGV4LXdyYXA6IHdyYXA7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdGhlaWdodDogcmVtKDIzNik7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0aGVpZ2h0OiByZW0oMjcwKTtcclxuXHR9XHJcbn0iLCJcclxuLmwtaGFtYnVyZ2VyIHtcclxuXHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHRvcDogMiU7XHJcblx0cmlnaHQ6IDEwJTtcclxuXHR6LWluZGV4OiAxO1xyXG5cdCZfYWJvdXQge1xyXG5cdFx0dG9wOiAyLjUlO1xyXG5cdFx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdFx0dG9wOiAyJTtcclxuXHRcdH1cclxuXHR9XHJcblx0Jl93b3JrcyB7XHJcblx0XHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0XHR0b3A6IDIuNSU7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4iLCIubC1tYWluIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRkU5O1xyXG5cdGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLmwtbWFpbl9fdG9wIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0dG9wOiAwO1xyXG5cdGxlZnQ6IDA7XHJcblx0cmlnaHQ6IDA7XHJcblx0ei1pbmRleDogMDtcclxuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbn1cclxuXHJcbi5sLW1haW5fX3dyYXBwZXIge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdG1pbi1oZWlnaHQ6IDEwMCU7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRhbGlnbi1pdGVtczogYmFzZWxpbmU7XHJcblx0QGluY2x1ZGUgY3VzdG9tIHtcclxuXHRcdFx0d2lkdGg6IHJlbSgxODAwKTtcclxuXHRcdFx0bWFyZ2luOiBhdXRvO1xyXG5cdH1cclxuXHQmLmwtbWFpbl9ibG9nIHtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICNmYWY4ZjA7XHJcblx0XHQvL2hlaWdodDogMTUyMnB4O1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0fVxyXG5cdCYubC1tYWluX3dvcmtzIHtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMiU7XHJcblx0fVxyXG5cdCYubC1tYWluX2Fib3V0IHtcclxuXHRcdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4ubC1tYWluX19oZWFkZXIge1xyXG5cdEBpbmNsdWRlIHNpemUoMTAwJSwgcmVtKDE5NSkpO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsIDI0OCwgMjQwKTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHRcclxufVxyXG5cclxuLmwtbWFpbl9faGVhZGVyLXRpdGxlIHtcclxuXHR3aWR0aDogNDAlO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRjb2xvcjogJHRpdGxlLWNvbG9yO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHQmIC5oLXRpdGxlLXNlY3Rpb24ge1xyXG5cdFx0IHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR9XHJcblx0Jjo6Zmlyc3QtbGV0dGVyIHtcclxuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0fVxyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogNDMlO1xyXG5cdH1cclxufVxyXG5cclxuLmwtbWFpbl9fc2xpZGVyIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRoZWlnaHQ6IDc1MHB4O1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRoZWlnaHQ6IDEwMzBweDtcclxuXHR9XHJcbn1cclxuXHJcbi5sLW1haW5fX2NvbHVtbi1vbmUsIC5sLW1haW5fX2NvbHVtbi10d28ge1xyXG5cdGZsZXg6IDE7XHJcblx0d2lkdGg6IDUwJTtcclxuXHRtaW4taGVpZ2h0OiAxMDAlO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0d2lkdGg6IDEwMCU7XHJcblx0fVxyXG59XHJcblxyXG4ubC1tYWluX19jb2x1bW4tb25lIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRkU5O1xyXG59XHJcblxyXG4ubC1tYWluX19jb2x1bW4tdHdvIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRUZFQkUwO1xyXG59IiwiLmwtZm9vdGVyIHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdG1pbi1oZWlnaHQ6IHJlbSgxNDdweCk7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSg1NSwgNjIsIDY2LDAuODUpO1xyXG5cdHBhZGRpbmc6IDAuNSUgMDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0JjphZnRlciB7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdGNvbnRlbnQ6ICcnO1xyXG5cdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRoZWlnaHQ6IDFweDtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6IHJnYmEoJHByaW1hcnlDb2xvciwgMC4xKTtcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdGxlZnQ6IDA7XHJcblx0XHR0b3A6IDUwJTtcclxuXHR9XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdG1pbi1oZWlnaHQ6IHJlbSgyMzYpO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0bWluLWhlaWdodDogcmVtKDI3MCk7XHJcblx0fVxyXG59XHJcblxyXG4ubC1mb290ZXJfX25hdiB7XHJcblx0d2lkdGg6IDUwJTtcclxuXHRoZWlnaHQ6IDUwJTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiA4MCU7XHJcblx0XHRoZWlnaHQ6IDIyJTtcclxuXHRcdG9yZGVyOiAxO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0fVxyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHR3aWR0aDogOTAlO1xyXG5cdH1cclxufVxyXG5cclxuLmwtZm9vdGVyX190ZXh0IHtcclxuXHR3aWR0aDogNTAlO1xyXG5cdGhlaWdodDogNTAlO1xyXG5cdGZvbnQtc2l6ZTogcmVtKDE3KTtcclxuXHRmb250LXdlaWdodDogMzAwO1xyXG5cdGNvbG9yOiByZ2JhKCRwcmltYXJ5Q29sb3IsIDAuNSk7XHJcblx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHR0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHQmIGEge1xyXG5cdFx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcblx0XHRjdXJzb3I6IHBvaW50ZXI7XHJcblx0XHRvcGFjaXR5OiAwLjU7XHJcblx0fVxyXG5cdCYgYTpob3ZlciB7XHJcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0fVxyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogODAlO1xyXG5cdFx0aGVpZ2h0OiAyOCU7XHJcblx0XHRvcmRlcjogMztcclxuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0d2lkdGg6IDkwJTtcclxuXHR9XHJcbn1cclxuXHJcbi5sLWZvb3Rlcl9fc29jaWFsIHtcclxuXHR3aWR0aDo1MCU7XHJcblx0aGVpZ2h0OiA1MCU7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiA4MCU7XHJcblx0XHRoZWlnaHQ6IDI4JTtcclxuXHRcdG9yZGVyOiAyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0fVxyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHR3aWR0aDogOTAlO1xyXG5cdH1cclxufVxyXG5cclxuLmwtZm9vdGVyX19zb2NpYWwtaXRlbSB7XHJcblx0QGluY2x1ZGUgc2l6ZSgyLjFyZW0pO1xyXG5cdGJvcmRlcjogMC41cHggc29saWQgcmdiYSgkcHJpbWFyeUNvbG9yLCAwLjUpO1xyXG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcclxuXHRtYXJnaW4tcmlnaHQ6IDIlO1xyXG5cdHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcclxuXHQmOmhvdmVyICB7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRwcmltYXJ5Q29sb3IsIDAuODUpO1xyXG5cdFx0LmwtZm9vdGVyX19zb2NpYWwtbGluayB7XHJcblx0XHRcdGNvbG9yOiAkdGV4dC1jb2xvcjtcclxuXHRcdH1cclxuXHRcdCYgLnN2Zy11c2Uge1xyXG5cdFx0b3BhY2l0eTogMTtcclxuXHRcdH1cdFx0XHJcblx0fVxyXG59XHJcblxyXG4ubC1mb290ZXJfX3NvY2lhbC1saW5rIHtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0QGluY2x1ZGUgc2l6ZSgxMDAlKTtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0dHJhbnNpdGlvbjogY29sb3IgMC4zcztcclxuXHQmIC5zdmctdXNlIHtcclxuXHRcdEBpbmNsdWRlIHNpemUoMS4ycmVtLCAxLjU1cmVtKTtcclxuXHRcdG9wYWNpdHk6IDAuNTtcclxuXHRcdHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxuXHR9XHRcdFxyXG59IiwiXHJcbi5jLWhhbWJ1cmdlci1uYXYge1xyXG5cdFxyXG5cdEBpbmNsdWRlIHNpemUocmVtKDM4KSwgcmVtKDMzKSk7XHJcbn1cclxuXHJcbi5jLWhhbWJ1cmdlci1uYXZfX3RhcmdldCB7XHJcblx0XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0QGluY2x1ZGUgc2l6ZSgxMDAlKTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jLWhhbWJ1cmdlci1uYXZfX2Zha2Uge1xyXG5cclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHRAaW5jbHVkZSBzaXplKHJlbSgzOCksIHJlbSg1KSk7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHRib3JkZXItcmFkaXVzOiAxNSU7XHJcblx0b3ZlcmZsb3c6IHZpc2libGU7XHJcblx0dHJhbnNpdGlvbjogMC4zcztcclxuXHJcblx0JjpiZWZvcmUge1xyXG5cclxuXHQgIGNvbnRlbnQ6IFwiXCI7XHJcblx0ICBkaXNwbGF5OiBibG9jaztcclxuXHQgIEBpbmNsdWRlIHNpemUocmVtKDM4KSwgcmVtKDUpKTtcclxuXHQgIGJvcmRlci1yYWRpdXM6IDE1JTtcclxuXHQgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0ICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0ICB0b3A6IDEwMCU7XHJcblx0ICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xyXG5cdCAgbGVmdDogMDtcclxuXHR9XHJcblxyXG5cdCY6YWZ0ZXIge1xyXG5cclxuXHQgIGNvbnRlbnQ6IFwiXCI7XHJcblx0ICBkaXNwbGF5OiBibG9jaztcclxuXHQgIEBpbmNsdWRlIHNpemUocmVtKDM4KSwgcmVtKDUpKTtcclxuXHQgIGJvcmRlci1yYWRpdXM6IDE1JTtcclxuXHQgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0ICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0ICBib3R0b206IDEwMCU7XHJcblx0ICBsZWZ0OiAwO1xyXG5cdCAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xyXG5cdH1cclxufVxyXG5cclxuLmMtaGFtYnVyZ2VyLW5hdl9fbGlzdCB7XHJcblxyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uYy1oYW1idXJnZXItbmF2X19pdGVtIHtcclxuXHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHRmb250LXNpemU6IHJlbSgyNCk7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHJcblx0JjpiZWZvcmUge1xyXG5cclxuXHRcdGNvbnRlbnQ6IFwiXCI7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdEBpbmNsdWRlIHNpemUocmVtKDUpKTtcclxuXHRcdGJvcmRlci1yYWRpdXM6IDUwJTtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0XHRtYXJnaW46IHJlbSgxNSk7XHJcblx0fVxyXG5cclxuXHQmOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcblx0XHRcclxuXHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0fVxyXG59XHJcbi5jLWhhbWJ1cmdlci1uYXZfX2xpbmsge1xyXG5cclxuXHJcbn0iLCIuYy1kZXZlbG9wZXIge1xyXG5cdHdpZHRoOiByZW0oMzgwKTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19pbWctd3JhcCB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMTQxKSk7XHJcblx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcblx0YmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdG1hcmdpbi1ib3R0b206IDQlO1xyXG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19pbWcge1xyXG5cdG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19jb250ZW50IHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jLWRldmVsb3BfYmxvZy1oZWFkZXIge1xyXG5cdGNvbG9yOiAkcHJpbWFyeUNvbG9yO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19oZWFkZXIge1xyXG5cclxuXHRmb250LXNpemU6IHJlbSgzNSk7XHJcblx0Zm9udC13ZWlnaHQ6IDUwMDtcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdG1hcmdpbi1ib3R0b206IDAuMyU7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcbn1cclxuXHJcbi5jLWRldmVsb3Blcl9fZGVzYyB7XHJcblx0Zm9udC1zaXplOiByZW0oMTYpO1xyXG5cdGNvbG9yOiByZ2JhKCRwcmltYXJ5Q29sb3IsIDAuOCk7XHJcblx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHRmb250LXdlaWdodDogMzAwO1xyXG59XHJcblxyXG4uYy1kZXZlbG9wZXJfX2Rlc2NfYmxvZyB7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0d2lkdGg6IDEwMCU7XHJcbn0iLCIuYy1ibG9nIHtcclxuXHRmbGV4LWdyb3c6IDE7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHQvL292ZXJmbG93OiBoaWRkZW47XHJcblx0cGFkZGluZy10b3A6IDQlO1xyXG5cdG1hcmdpbi1ib3R0b206IGF1dG87XHJcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XHJcbn1cclxuXHJcbi5jLWJsb2dfX2FzaWRlIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0bGVmdDogMDtcclxuXHR0b3A6IDEuNSU7XHJcblx0cmlnaHQ6IDc1JTtcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0ZGlzcGxheTogbm9uZTtcclxuXHR9XHJcbn1cclxuLnBvcy1maXhlZCB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDoxMCU7XHJcbn1cclxuXHJcblxyXG4uYy1ibG9nX19uYXYtaXRlbSB7XHJcblx0dGV4dC1hbGlnbjogcmlnaHQ7XHJcblx0cGFkZGluZzogNC41JSA2LjUlO1xyXG5cdCYuaXMtYWN0aXZlIC5jLWJsb2dfX25hdi1saW5rIHtcclxuXHRmb250LXdlaWdodDogOTAwO1xyXG5cdGNvbG9yOiByZ2IoMCwgMTkxLCAxNjUpO1xyXG5cdH1cclxuXHQmLmlzLWFjdGl2ZSB7XHJcblx0XHRib3JkZXItcmlnaHQ6IDNweCBzb2xpZCByZ2IoMCwgMTkxLCAxNjUpO1xyXG5cdH1cclxufVxyXG5cclxuLmMtYmxvZ19fbmF2LWxpbmsge1xyXG5cdGZvbnQtc2l6ZTogcmVtKDE2KTtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjYzO1xyXG5cdHRleHQtYWxpZ246IHJpZ2h0O1xyXG5cdGNvbG9yOiAkdGV4dC1jb2xvcjtcclxufVxyXG5cclxuLmMtYmxvZ19fbWFpbiB7XHJcblx0ICB3aWR0aDogNjglO1xyXG4gICAgcGFkZGluZzogMCAxJSAyJSAxJTtcclxuICAgIHBhZGRpbmc6IDElIDElIDIlIDElO1xyXG4gICAgbWFyZ2luOiAwIDEuOSUgMCUgYXV0bztcclxuICAgIEBpbmNsdWRlIHRhYmxldCB7XHJcbiAgICBcdHdpZHRoOiA5NSU7XHJcbiAgICBcdG1hcmdpbi1ib3R0b206IDUlO1xyXG4gICAgXHRtYXJnaW4tbGVmdDogMDtcclxuICAgIH1cclxufVxyXG5cclxuLmMtYmxvZ19fYXJ0aWNsZSB7XHJcblx0cGFkZGluZzogOSUgMDtcclxuXHRib3JkZXItYm90dG9tOiA1cHggc29saWQgcmdiYSg1NSwgNjIsIDY2LCAwLjA3KTtcclxuXHQmOmZpcnN0LWNoaWxkIHtcclxuXHRcdHBhZGRpbmctdG9wOiAwO1xyXG5cdH1cclxuXHQmOmxhc3QtY2hpbGQge1xyXG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcclxuXHR9XHJcblx0JiAuaC10aXRsZS1hcnRpY2xlIHtcclxuXHRcdG1hcmdpbjogMDtcclxuXHR9XHJcbn1cclxuXHJcbi5hcnRpY2xlX19kYXRlIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuIFx0Zm9udC1zaXplOiByZW0oMTYpO1xyXG5cdGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0bGluZS1oZWlnaHQ6IDIuNTY7XHJcblx0dGV4dC1hbGlnbjogbGVmdDtcclxuXHRjb2xvcjogcmdiYSgwLCAxOTEsIDE2NSwgMC43KTtcclxufVxyXG5cclxuLmFydGljbGVfX3RleHQge1xyXG5cdGZvbnQtc2l6ZTogMTZweDtcclxuIFx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRsaW5lLWhlaWdodDogMS42MztcclxuXHR0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cdGNvbG9yOiByZ2IoNjksIDkwLCAxMDApO1xyXG59XHJcblxyXG5wcmUucHJldHR5cHJpbnQsIGNvZGUucHJldHR5cHJpbnQge1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNmNGYyZjAgIWltcG9ydGFudDtcclxuXHRib3JkZXI6IG5vbmUgIWltcG9ydGFudDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0JiBsaSB7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmMmYwICFpbXBvcnRhbnQ7XHJcbiAgIFx0XHRjb3VudGVyLWluY3JlbWVudDogaXRlbTtcclxuICBcdFx0bWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiBcdH1cclxuIFx0JiBsaTpiZWZvcmUge1xyXG4gICBcdFx0Y29udGVudDogY291bnRlcihpdGVtKTtcclxuICAgXHRcdGNvbG9yOiAjNWE3YjhjO1xyXG4gIFx0XHR3aWR0aDogMS4yZW07XHJcbiAgIFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG4gIFx0XHR0b3A6IDA7XHJcbiAgXHRcdGxlZnQ6IC0xLjNyZW07XHJcbiAgXHRcdGJvdHRvbTogMDtcclxuICBcdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG4gIFx0XHR6LWluZGV4OiAxO1xyXG4gXHR9XHJcblx0Y291bnRlci1yZXNldDogaXRlbTtcclxufVxyXG5cclxucHJlLnByZXR0eXByaW50IHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRtYXJnaW46IDFlbSAwO1xyXG5cdHBhZGRpbmc6IDFlbTtcclxuXHR3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XHJcblx0Zm9udC13ZWlnaHQ6IGJvbGQ7XHJcblx0Ym9yZGVyLXJhZGl1czogMXB4O1xyXG5cdCY6YmVmb3JlIHtcclxuXHRcdGNvbnRlbnQ6ICcnO1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjRThFNkU0O1xyXG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0dG9wOiAwO1xyXG5cdFx0bGVmdDogMDtcclxuXHRcdGJvdHRvbTogMDtcclxuXHRcdHdpZHRoOiAzcmVtO1xyXG5cdFx0ei1pbmRleDogMTtcclxuXHR9XHJcbn1cclxuXHJcbmxpLkwwLCBsaS5MMSwgbGkuTDIsIGxpLkwzLFxyXG5saS5MNSwgbGkuTDYsIGxpLkw3LCBsaS5MOCB7XHJcbiAgbGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsICFpbXBvcnRhbnQ7XHJcbn1cclxuLyohIENvbG9yIHRoZW1lcyBmb3IgR29vZ2xlIENvZGUgUHJldHRpZnkgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vam1ibG9nL2NvbG9yLXRoZW1lcy1mb3ItZ29vZ2xlLWNvZGUtcHJldHRpZnkgKi9cclxuLnByZXR0eXByaW50IHtcclxuICBiYWNrZ3JvdW5kOiAjZjdmM2Y3O1xyXG4gIGZvbnQtZmFtaWx5OiBNZW5sbywgXCJCaXRzdHJlYW0gVmVyYSBTYW5zIE1vbm9cIiwgXCJEZWphVnUgU2FucyBNb25vXCIsIE1vbmFjbywgQ29uc29sYXMsIG1vbm9zcGFjZTtcclxuICBib3JkZXI6IDAgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnBsbiB7XHJcbiAgY29sb3I6ICMxYjE4MWI7XHJcbn1cclxuXHJcbi8qIFNwZWNpZnkgY2xhc3M9bGluZW51bXMgb24gYSBwcmUgdG8gZ2V0IGxpbmUgbnVtYmVyaW5nICovXHJcbm9sLmxpbmVudW1zIHtcclxuICBtYXJnaW4tdG9wOiAwO1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgY29sb3I6ICM1YTdiOGM7XHJcbn1cclxuXHJcbmxpLkwwLFxyXG5saS5MMSxcclxubGkuTDIsXHJcbmxpLkwzLFxyXG5saS5MNCxcclxubGkuTDUsXHJcbmxpLkw2LFxyXG5saS5MNyxcclxubGkuTDgsXHJcbmxpLkw5IHtcclxuICBwYWRkaW5nLWxlZnQ6IDFlbTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmM2Y3O1xyXG4gLy8gbGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsO1xyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIHtcclxuXHJcbiAgLyogc3RyaW5nIGNvbnRlbnQgKi9cclxuXHJcbiAgLnN0ciB7XHJcbiAgICBjb2xvcjogIzkxOGIzYjtcclxuICB9XHJcblxyXG4gIC8qIGtleXdvcmQgKi9cclxuXHJcbiAgLmt3ZCB7XHJcbiAgICBjb2xvcjogIzdiNTljMDtcclxuICB9XHJcblxyXG4gIC8qIGNvbW1lbnQgKi9cclxuXHJcbiAgLmNvbSB7XHJcbiAgICBjb2xvcjogIzVhN2I4YztcclxuICB9XHJcblxyXG4gIC8qIHR5cGUgbmFtZSAqL1xyXG5cclxuICAudHlwIHtcclxuICAgIGNvbG9yOiAjNTE2YWVjO1xyXG4gIH1cclxuXHJcbiAgLyogbGl0ZXJhbCB2YWx1ZSAqL1xyXG5cclxuICAubGl0IHtcclxuICAgIGNvbG9yOiAjYTY1OTI2O1xyXG4gIH1cclxuXHJcbiAgLyogcHVuY3R1YXRpb24gKi9cclxuXHJcbiAgLnB1biB7XHJcbiAgICBjb2xvcjogIzFiMTgxYjtcclxuICB9XHJcblxyXG4gIC8qIGxpc3Agb3BlbiBicmFja2V0ICovXHJcblxyXG4gIC5vcG4ge1xyXG4gICAgY29sb3I6ICMxYjE4MWI7XHJcbiAgfVxyXG5cclxuICAvKiBsaXNwIGNsb3NlIGJyYWNrZXQgKi9cclxuXHJcbiAgLmNsbyB7XHJcbiAgICBjb2xvcjogIzFiMTgxYjtcclxuICB9XHJcblxyXG4gIC8qIG1hcmt1cCB0YWcgbmFtZSAqL1xyXG5cclxuICAudGFnIHtcclxuICAgIGNvbG9yOiAjY2E0MDJiO1xyXG4gIH1cclxuXHJcbiAgLyogbWFya3VwIGF0dHJpYnV0ZSBuYW1lICovXHJcblxyXG4gIC5hdG4ge1xyXG4gICAgY29sb3I6ICNhNjU5MjY7XHJcbiAgfVxyXG5cclxuICAvKiBtYXJrdXAgYXR0cmlidXRlIHZhbHVlICovXHJcblxyXG4gIC5hdHYge1xyXG4gICAgY29sb3I6ICMxNTkzOTM7XHJcbiAgfVxyXG5cclxuICAvKiBkZWNsYXJhdGlvbiAqL1xyXG5cclxuICAuZGVjIHtcclxuICAgIGNvbG9yOiAjYTY1OTI2O1xyXG4gIH1cclxuXHJcbiAgLyogdmFyaWFibGUgbmFtZSAqL1xyXG5cclxuICAudmFyIHtcclxuICAgIGNvbG9yOiAjY2E0MDJiO1xyXG4gIH1cclxuXHJcbiAgLyogZnVuY3Rpb24gbmFtZSAqL1xyXG5cclxuICAuZnVuIHtcclxuICAgIGNvbG9yOiAjNTE2YWVjO1xyXG4gIH1cclxufVxyXG4iLCJcclxuLnN2Z19oZXJvIHtcclxuXHRvcGFjaXR5OiAwLjA2O1xyXG5cdEBpbmNsdWRlIHNpemUoMTAwJSwgMzclKTtcclxuXHRAaW5jbHVkZSBhYnNvbHV0ZS1jZW50ZXI7XHJcblx0ZmlsbDogJHByaW1hcnlDb2xvcjtcclxuXHR6LWluZGV4OiAxO1xyXG59XHJcblxyXG4uc3ZnX2hlcm8tYmxvZyB7XHJcblx0b3BhY2l0eTogMC4wNjtcclxuXHRAaW5jbHVkZSBzaXplKDE1MCUsIDMwMCUpO1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDUwJTtcclxuXHRsZWZ0OiA1MCU7XHJcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTQwJSk7XHJcblx0ZmlsbDogJHByaW1hcnlDb2xvcjtcclxuXHR6LWluZGV4OiAxO1xyXG59XHJcblxyXG4uc3ZnX25leHQge1xyXG5cdG9wYWNpdHk6IDAuNztcclxuXHRAaW5jbHVkZSBzaXplKDEwMCUpO1xyXG5cdGZpbGw6ICRwcmltYXJ5Q29sb3I7XHJcblx0dHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xyXG59XHJcbi5zdmdfcHJldiB7XHJcblx0b3BhY2l0eTogMC43O1xyXG5cdEBpbmNsdWRlIHNpemUoMTAwJSk7XHJcblx0ZmlsbDogJHByaW1hcnlDb2xvcjtcclxuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7XHJcblx0dHJhbnNmb3JtOiBzY2FsZSgxLCAtMSk7XHJcbn1cclxuXHJcbi5zdmdfZGFzaCB7XHJcblx0QGluY2x1ZGUgc2l6ZSgxLjZyZW0sIDAuOHJlbSk7XHJcblx0b3BhY2l0eTogMC4yNTtcclxuXHRmaWxsOiBjdXJyZW50Q29sb3I7XHJcblx0c3Ryb2tlOiBjdXJyZW50Q29sb3I7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbi5zdmctbWFpbi10b3BfdHdvLWNvbG9yIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRoZWlnaHQ6IDIwcmVtO1xyXG5cdGZpbGw6ICNFRkVCRTA7XHJcblx0c3Ryb2tlOiAjRUZFQkUwO1xyXG5cdFx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdFx0ZmlsbDogI0YwRUZFOTtcclxuXHRcdFx0c3Ryb2tlOiAjRjBFRkU5O1xyXG5cdH1cclxufVxyXG5cclxuLnN2Z19tYWluLXRvcF9vbmUtY29sb3Ige1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdGhlaWdodDogMjByZW07XHJcblx0Y29sb3I6IHJnYigyNTAsIDI0OCwgMjQwKTtcclxufVxyXG5cclxuLnN2Zy1tYWluLWljb24ge1xyXG5cdG9wYWNpdHk6IDAuMDc7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHRvcDogMDtcclxuXHRsZWZ0OiA1MCU7XHJcblx0cmlnaHQ6IDA7XHJcblx0Ym90dG9tOiAwO1xyXG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG5cdHotaW5kZXg6IDA7XHJcbn1cclxuLnN2Zy1tYWluLWljb25fYWJvdXQge1xyXG5cdHdpZHRoOiA4MCU7XHJcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTMwJSk7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiA3MCU7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNDAlKTtcclxuXHR9XHJcbn1cclxuXHJcbi5zdmctbWFpbi1pY29uX3dvcmtzIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRoZWlnaHQ6IHJlbSgxOTApO1xyXG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0yOCUpO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRoZWlnaHQ6IDguMTI1cmVtO1xyXG5cdH1cclxufVxyXG5cclxuLnN2Z19za3lwZSwgLnN2Z19tYWlsLCAuc3ZnX3Bob25lLCAuc3ZnX21hcC1tYXJrZXIge1xyXG5cdGNvbG9yOiAkYnJhbmQtY29sb3I7XHJcblx0ZmxleC1iYXNpczogMjAlO1xyXG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxuXHQmOmhvdmVyIHtcclxuXHRcdG9wYWNpdHk6IDAuNztcclxuXHR9XHJcbn1cclxuXHJcbi5zdmdfc2t5cGUge1xyXG5cdEBpbmNsdWRlIHNpemUocmVtKDI0KSwgcmVtKDI0KSk7XHJcbn1cclxuLnN2Z19tYWlsIHtcclxuXHRAaW5jbHVkZSBzaXplKDEuNXJlbSwgMS4ycmVtKTtcclxufVxyXG4uc3ZnX3Bob25lIHtcclxuXHRAaW5jbHVkZSBzaXplKHJlbSgyMCksIHJlbSgxOSkpO1xyXG5cclxufVxyXG4uc3ZnX21hcC1tYXJrZXIge1xyXG5cdEBpbmNsdWRlIHNpemUocmVtKDE5KSwgcmVtKDI0KSk7XHJcbn1cclxuLnN2Z19sb2dpbiB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMTUpLCByZW0oMTcpKTtcclxuXHQgY29sb3I6IHJnYigxOTYsIDIwMywgMjA1KTtcclxufVxyXG4uc3ZnX2xpbmsge1xyXG5cdEBpbmNsdWRlIHNpemUocmVtKDIwKSwgcmVtKDE5KSk7XHJcblx0bWFyZ2luLXJpZ2h0OiByZW0oOCk7XHJcbn1cclxuLnN2Z19zbGlkZXItYXJyb3cge1xyXG5cdEBpbmNsdWRlIHNpemUocmVtKDQ1KSwgcmVtKDI4KSk7XHJcblx0Ym94LXNoYWRvdzogMHB4IDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xyXG5cdGNvbG9yOiAkcHJpbWFyeUNvbG9yO1xyXG5cdG9wYWNpdHk6IDAuNztcclxuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7XHJcbn0iLCIuaC10aXRsZS1zZWN0aW9uIHtcclxuXHRmb250LWZhbWlseTogJ2Jlcm5pZXInO1xyXG5cdGZvbnQtc2l6ZTogcmVtKDYzKTtcclxuXHRsZXR0ZXItc3BhY2luZzogMC4ycmVtO1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG5cdG1hcmdpbjogMCByZW0oMTcpO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjA1O1xyXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0Y29sb3I6ICR0aXRsZS1jb2xvcjtcclxuXHJcblx0JjpmaXJzdC1sZXR0ZXIge1xyXG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHR9XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdGZvbnQtc2l6ZTogcmVtKDQ5KTtcclxuXHR9XHJcbn1cclxuXHJcbi5oLXRpdGxlLXNlY3Rpb25fY29sb3Ige1xyXG5cdGNvbG9yOiAkcHJpbWFyeUNvbG9yO1xyXG59XHJcblxyXG4uaC10aXRsZS1hcnRpY2xlIHtcclxuXHRmb250LWZhbWlseTogJ2Jlcm5pZXInO1xyXG5cdGZvbnQtc2l6ZTogcmVtKDM1KTtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHRtYXJnaW46IDAgcmVtKDE2KTtcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0Y29sb3I6ICR0ZXh0LWNvbG9yO1xyXG5cclxuXHQmOmZpcnN0LWxldHRlciB7XHJcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdH1cclxufSIsIi5jLW5hdl9fbGlzdCB7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHR3aWR0aDogODAlO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jLW5hdl9faXRlbSB7XHJcblx0ZmxleC1ncm93OiAxO1xyXG59XHJcblxyXG4uYy1uYXZfX2xpbmsge1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRmb250LXNpemU6IChyZW0oMTcpKTtcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHR0cmFuc2l0aW9uOiBjb2xvciAwLjRzO1xyXG5cdCY6OmZpcnN0LWxldHRlciB7XHJcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdH1cclxuXHQmOmhvdmVyIHtcclxuXHRcdGNvbG9yOiAkYnJhbmQtY29sb3I7XHJcblx0fVxyXG59IiwiLmMtY29weSB7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdCYgYSB7XHJcblx0XHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuXHRcdGN1cnNvcjogcG9pbnRlcjtcclxuXHR9XHJcblx0JiBhOmhvdmVyIHtcclxuXHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHR9XHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdGZsZXgtd3JhcDogd3JhcDtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR9XHJcbn1cclxuXHJcbi5jLWNvcHlfaXRlbSB7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdGNvbG9yOiAkcHJpbWFyeUNvbG9yO1xyXG5cdGZvbnQtd2VpZ2h0OiAzMDA7XHJcblx0Zm9udC1zaXplOiByZW0oMTYpO1xyXG5cdGxpbmUtaGVpZ2h0OiA2LjI4O1xyXG5cdFxyXG5cdCY6YWZ0ZXIge1xyXG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdFx0Y29udGVudDogJ3wnO1xyXG5cdFx0bWFyZ2luOiAwIDAuM3JlbTtcclxuXHRcdGZvbnQtc2l6ZTogcmVtKDE2KTtcclxuXHRcdGZvbnQtd2VpZ2h0OiAzMDA7XHJcblx0fVxyXG5cdCY6bGFzdC1jaGlsZDphZnRlciB7XHJcblx0XHRkaXNwbGF5OiBub25lO1xyXG5cdH1cclxuXHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdGxpbmUtaGVpZ2h0OiAxLjU7XHJcblx0XHQmOmZpcnN0LWNoaWxkIHtcclxuXHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHR9XHJcblx0XHQmOmZpcnN0LWNoaWxkOmFmdGVyIHtcclxuXHRcdFx0ZGlzcGxheTogbm9uZTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuLmMtY29weV9mb290ZXIge1xyXG5cdHdpZHRoOiA1MCU7XHJcblx0aGVpZ2h0OiA1MCU7XHJcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0d2lkdGg6IDgwJTtcclxuXHRcdGhlaWdodDogMjIlO1xyXG5cdFx0b3JkZXI6IDQ7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR9XHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdHdpZHRoOiA5MCU7XHJcblx0fVxyXG5cdCYgLmMtY29weV9pdGVtIHtcclxuXHRcdGNvbG9yOiByZ2JhKCRwcmltYXJ5Q29sb3IsIDAuNSk7XHJcblx0fVxyXG5cdCYgYSB7XHJcblx0XHRvcGFjaXR5OiAwLjU7XHJcblx0fVxyXG59Il19 */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/