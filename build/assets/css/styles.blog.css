/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on March 8, 2018 */
@font-face {
  font-family: 'bernier_distressed';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier_shade';
  src: url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff) format("woff");
  font-weight: 900;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff) format("woff");
  font-weight: 900;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff) format("woff");
  font-weight: 400;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff) format("woff");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff) format("woff");
  font-weight: 300;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff) format("woff");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff) format("woff");
  font-weight: 500;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff) format("woff");
  font-weight: 400;
  font-style: normal; }

/**
 * Set up a decent box model on the root element
 */
* {
  box-sizing: border-box; }

body, html {
  color: #455a64;
  background-color: #ededed;
  font-family: "roboto", "Arial", sans-serif;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.425rem;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-display: optional;
  position: relative;
  min-height: 100vh; }
  body.about .l-footer, html.about .l-footer {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0; }
  @media screen and (min-width: 1800px) {
    body, html {
      background-color: rgba(69, 90, 100, 0.3); } }
  @media screen and (max-width: 992px) and (min-width: 769px) {
    body, html {
      font-size: 15px; } }
  @media screen and (max-width: 768px) {
    body, html {
      font-size: 14px; } }
  @media screen and (max-width: 480px) {
    body, html {
      font-size: 13px; } }
  @media screen and (max-width: 375px) {
    body, html {
      font-size: 12px; } }

body.hero, html.hero {
  height: 100%;
  overflow: hidden;
  min-height: 628px; }
  @media screen and (max-width: 768px) {
    body.hero, html.hero {
      min-height: 100vh; } }

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*::before,
*::after {
  box-sizing: inherit; }

/**
 * Basic styles for links
 */
a {
  color: white;
  text-decoration: none; }

ul {
  margin: 0;
  padding: 0; }

ul li {
  list-style: none; }

h1, h2, h3, p {
  margin: 0; }

svg {
  fill: currentColor;
  stroke: currentColor; }

button, input, select, textarea {
  font-family: "roboto", "Arial", sans-serif; }

img {
  display: none; }

.google-map img {
  display: block; }

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table; }

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap;
  display: block; }

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  /* margin: -1px;*/
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

@-webkit-keyframes rotate_leftClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); } }

@keyframes rotate_leftClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); } }

@-webkit-keyframes rotate_rightClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); } }

@keyframes rotate_rightClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); } }

@-webkit-keyframes scale_centerClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); } }

@keyframes scale_centerClose {
  from {
    -webkit-transform: none;
            transform: none; }
  to {
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); } }

@-webkit-keyframes rotate_leftHamburger {
  from {
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); }
  to {
    -webkit-transform: none;
            transform: none; } }

@keyframes rotate_leftHamburger {
  from {
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); }
  to {
    -webkit-transform: none;
            transform: none; } }

@-webkit-keyframes rotate_rightHamburger {
  from {
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); }
  to {
    -webkit-transform: none;
            transform: none; } }

@keyframes rotate_rightHamburger {
  from {
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); }
  to {
    -webkit-transform: none;
            transform: none; } }

@-webkit-keyframes scale_centerHamburger {
  from {
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); }
  to {
    -webkit-transform: scaleX(1.1);
            transform: scaleX(1.1); } }

@keyframes scale_centerHamburger {
  from {
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); }
  to {
    -webkit-transform: scaleX(1.1);
            transform: scaleX(1.1); } }

@-webkit-keyframes blog_tabletNavOpen {
  from {
    -webkit-transform: translateX(-72%);
            transform: translateX(-72%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@keyframes blog_tabletNavOpen {
  from {
    -webkit-transform: translateX(-72%);
            transform: translateX(-72%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@-webkit-keyframes blog_tabletNavClose {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(-100.5%);
            transform: translateX(-100.5%); } }

@keyframes blog_tabletNavClose {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(-100.5%);
            transform: translateX(-100.5%); } }

@-webkit-keyframes open_hamburger_left {
  from {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@keyframes open_hamburger_left {
  from {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@-webkit-keyframes open_hamburger_right {
  from {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@keyframes open_hamburger_right {
  from {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); }
  to {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); } }

@-webkit-keyframes close_hamburger_left {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

@keyframes close_hamburger_left {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%); } }

@-webkit-keyframes close_hamburger_right {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); } }

@keyframes close_hamburger_right {
  from {
    -webkit-transform: translateX(0%);
            transform: translateX(0%); }
  to {
    -webkit-transform: translateX(100%);
            transform: translateX(100%); } }

@-webkit-keyframes to_visible {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes to_visible {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@-webkit-keyframes to_unvisible {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@keyframes to_unvisible {
  from {
    opacity: 1; }
  to {
    opacity: 0; } }

@-webkit-keyframes bg_to_color {
  from {
    background: rgba(0, 191, 165, 0); }
  to {
    background: rgba(0, 191, 165, 0.87); } }

@keyframes bg_to_color {
  from {
    background: rgba(0, 191, 165, 0); }
  to {
    background: rgba(0, 191, 165, 0.87); } }

@-webkit-keyframes bg_to_transparent {
  from {
    background: rgba(0, 191, 165, 0.87); }
  to {
    background: rgba(0, 191, 165, 0); } }

@keyframes bg_to_transparent {
  from {
    background: rgba(0, 191, 165, 0.87); }
  to {
    background: rgba(0, 191, 165, 0); } }

.l-wrapper {
  width: 100%;
  height: 100%;
  margin: 0;
  position: relative;
  overflow: hidden;
  min-height: 100vh; }
  @media screen and (min-width: 1301px) {
    .l-wrapper {
      min-height: 650px; } }

#loader-wrapper {
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000;
  background: url(http://localhost:8080/assets/images/decor/bg/bg_preloader.jpg) center/cover no-repeat; }

#loader {
  display: block;
  position: relative;
  left: 50%;
  top: 50%;
  width: 9rem;
  height: 9rem;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 1001;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  #loader circle {
    -webkit-transform-origin: center center;
            transform-origin: center center;
    stroke-width: 4;
    opacity: 0; }
  #loader circle#bigCircle {
    -webkit-transform: rotate(-115deg);
            transform: rotate(-115deg); }
  #loader circle#middleCircle {
    -webkit-transform: rotate(-105deg);
            transform: rotate(-105deg); }
  #loader circle#smallCircle {
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); }

.loader__text {
  font-size: 1rem;
  color: white;
  font-weight: 500;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

#loader-wrapper .loader-section {
  position: fixed;
  top: 0;
  width: 51%;
  height: 100%;
  background: rgba(0, 191, 165, 0);
  z-index: 1000;
  -webkit-transform: translateX(0);
          transform: translateX(0); }

#loader-wrapper .loader-section.section-left {
  left: 0; }

#loader-wrapper .loader-section.section-right {
  right: 0; }

/* Loaded */
.loaded #loader-wrapper .loader-section.section-left {
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
  transition: all 0.7s 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), background 0s 0s linear;
  background: rgba(0, 191, 165, 0.3); }

.loaded #loader-wrapper .loader-section.section-right {
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  transition: all 0.7s 0.3s cubic-bezier(0.645, 0.045, 0.355, 1), background 0s 0s linear;
  background: rgba(0, 191, 165, 0.3); }

.loaded #loader {
  opacity: 0;
  transition: all 0.3s ease-out; }

.loaded #loader-wrapper {
  visibility: hidden;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
  transition: all 0.3s 1s ease-out; }

.l-section {
  width: 100%;
  min-height: 628px;
  position: relative; }
  @media screen and (min-width: 1301px) {
    .l-section {
      min-height: 650px;
      max-width: 112.5rem;
      margin: auto; } }
  @media screen and (max-width: 768px) {
    .l-section {
      min-height: 100vh; } }

.l-last {
  height: 100vh;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.l-layout-first {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.l-feeds {
  height: 1280px;
  background: url(http://localhost:8080/assets/images/decor/bg/feeds_bg.png) no-repeat;
  background-position: center center; }

.l-scroll-parallax-container {
  background: #9ABDBE;
  overflow-x: hidden;
  overflow-y: auto;
  position: absolute;
  top: 0;
  left: 0;
  right: 0px;
  bottom: 0;
  -webkit-perspective: 100px;
          perspective: 100px; }
  @media screen and (max-width: 768px) {
    .l-scroll-parallax-container {
      background: url(http://localhost:8080/assets/images/decor/bg/mountains.jpg);
      background-size: 300% auto;
      background-repeat: no-repeat;
      background-position: center top;
      z-index: 0; } }
  @media screen and (max-width: 480px) {
    .l-scroll-parallax-container {
      background-size: 330% auto; } }

.l-scroll-parallax__layer {
  position: absolute;
  top: 0;
  left: -100px;
  right: 0;
  bottom: 0;
  z-index: -1; }
  .l-scroll-parallax__layer:first-child .l-scroll-parallax__img {
    top: 0; }
  @media screen and (max-width: 768px) {
    .l-scroll-parallax__layer {
      display: none; } }

.l-scroll-parallax__img {
  display: block;
  position: absolute;
  left: 50%;
  bottom: 0;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  width: 100%; }
  @media screen and (max-width: 768px) {
    .l-scroll-parallax__img {
      display: none; } }

.parallax__content {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  -webkit-transform: translateZ(0);
          transform: translateZ(0);
  overflow: hidden; }

.l-scroll-parallax__layer:nth-child(10) {
  -webkit-transform: translateZ(0px) scale(1);
          transform: translateZ(0px) scale(1); }

.l-scroll-parallax__layer:nth-child(9) {
  -webkit-transform: translateZ(-50px) scale(1.5);
          transform: translateZ(-50px) scale(1.5); }

.l-scroll-parallax__layer:nth-child(8) {
  -webkit-transform: translateZ(-100px) scale(2);
          transform: translateZ(-100px) scale(2); }

.l-scroll-parallax__layer:nth-child(7) {
  -webkit-transform: translateZ(-150px) scale(2.5);
          transform: translateZ(-150px) scale(2.5); }

.l-scroll-parallax__layer:nth-child(6) {
  -webkit-transform: translateZ(-200px) scale(3);
          transform: translateZ(-200px) scale(3); }

.l-scroll-parallax__layer:nth-child(5) {
  -webkit-transform: translateZ(-250px) scale(3.5);
          transform: translateZ(-250px) scale(3.5); }

.l-scroll-parallax__layer:nth-child(4) {
  -webkit-transform: translateZ(-300px) scale(4);
          transform: translateZ(-300px) scale(4); }

.l-scroll-parallax__layer:nth-child(3) {
  -webkit-transform: translateZ(-350px) scale(4.5);
          transform: translateZ(-350px) scale(4.5); }

.l-scroll-parallax__layer:nth-child(2) {
  -webkit-transform: translateZ(-400px) scale(5);
          transform: translateZ(-400px) scale(5); }

.l-scroll-parallax__layer:nth-child(1) {
  -webkit-transform: translateZ(-450px) scale(5.5);
          transform: translateZ(-450px) scale(5.5); }

.scroll-parallax__layer:nth-child(10) {
  -webkit-transform: translateZ(0px) scale(1);
          transform: translateZ(0px) scale(1); }

.scroll-parallax__layer:nth-child(9) {
  -webkit-transform: translateZ(-50px) scale(1.5);
          transform: translateZ(-50px) scale(1.5); }

.scroll-parallax__layer:nth-child(8) {
  -webkit-transform: translateZ(-100px) scale(2);
          transform: translateZ(-100px) scale(2); }

.scroll-parallax__layer:nth-child(7) {
  -webkit-transform: translateZ(-150px) scale(2.5);
          transform: translateZ(-150px) scale(2.5); }

.scroll-parallax__layer:nth-child(6) {
  -webkit-transform: translateZ(-200px) scale(3);
          transform: translateZ(-200px) scale(3); }

.scroll-parallax__layer:nth-child(5) {
  -webkit-transform: translateZ(-250px) scale(3.5);
          transform: translateZ(-250px) scale(3.5); }

.scroll-parallax__layer:nth-child(4) {
  -webkit-transform: translateZ(-300px) scale(4);
          transform: translateZ(-300px) scale(4); }

.scroll-parallax__layer:nth-child(3) {
  -webkit-transform: translateZ(-350px) scale(4.5);
          transform: translateZ(-350px) scale(4.5); }

.scroll-parallax__layer:nth-child(2) {
  -webkit-transform: translateZ(-400px) scale(5);
          transform: translateZ(-400px) scale(5); }

.scroll-parallax__layer:nth-child(1) {
  -webkit-transform: translateZ(-450px) scale(5.5);
          transform: translateZ(-450px) scale(5.5); }

.l-hero {
  height: 100vh; }
  .l-hero:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(1, 102, 114, 0.3);
    z-index: 0; }
  @media screen and (min-width: 1301px) {
    .l-hero {
      min-height: 650px; } }
  @media screen and (max-width: 480px) {
    .l-hero {
      background-attachment: scroll; } }

.l-hero_blog {
  background-position: center top; }
  .l-hero_blog .l-main__top {
    position: relative;
    top: 70%; }
  .l-hero_blog .parallax__content {
    top: 72%; }
  .l-hero_blog .l-hero__develop {
    top: 0;
    -webkit-transform: translate(-50%, 50%);
            transform: translate(-50%, 50%); }
    @media screen and (min-width: 1800px) {
      .l-hero_blog .l-hero__develop {
        -webkit-transform: translate(-50%, 150%);
                transform: translate(-50%, 150%); } }

.l-hero__develop {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 15; }

.l-hero__social {
  position: absolute;
  z-index: 15;
  left: 10%;
  top: 10%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 12%;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }
  @media screen and (min-width: 1800px) {
    .l-hero__social {
      left: 50%;
      -webkit-transform: translateX(-800px);
              transform: translateX(-800px); } }
  @media screen and (min-width: 993px) and (max-width: 1300px) {
    .l-hero__social {
      width: 16%; } }
  @media screen and (max-width: 992px) and (min-width: 769px) {
    .l-hero__social {
      width: 16%; } }
  @media screen and (max-width: 768px) {
    .l-hero__social {
      width: 20%;
      top: 5%;
      left: 5%; } }
  @media screen and (max-width: 480px) {
    .l-hero__social {
      width: 30%;
      top: 4%;
      left: 4%; } }

.l-hero__social-item {
  height: 1.375rem; }

.l-hero__social-link {
  display: inline-block;
  height: 100%;
  color: white; }
  .l-hero__social-link:hover .svg-use {
    opacity: 1; }
  .l-hero__social-link:visited .svg-use {
    opacity: 0.5; }

.svg-use {
  width: 1.75rem;
  height: 1.375rem;
  transition: opacity 0.4s;
  opacity: 0.5; }

.l-container {
  width: 95%;
  height: 9.1875rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: auto;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  @media screen and (max-width: 768px) {
    .l-container {
      height: 14.75rem;
      -webkit-align-items: center;
          -ms-flex-align: center;
              align-items: center; } }
  @media screen and (max-width: 480px) {
    .l-container {
      height: 16.875rem; } }

.l-hamburger {
  position: absolute;
  top: 10%;
  right: 10%;
  z-index: 15; }
  @media screen and (max-width: 768px) {
    .l-hamburger {
      right: 5%;
      top: 5%; } }
  @media screen and (max-width: 480px) {
    .l-hamburger {
      right: 4%;
      top: 4%; } }
  @media screen and (min-width: 1800px) {
    .l-hamburger {
      left: 50%;
      -webkit-transform: translateX(800px);
              transform: translateX(800px); } }
  @media screen and (max-width: 768px) {
    .l-hamburger_works {
      top: 2.5%; } }

.l-main {
  width: 100%;
  background-color: #F0EFE9; }

.l-main__top {
  width: 100%;
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  z-index: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%); }

.l-main__wrapper {
  width: 100%;
  min-height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline; }
  @media screen and (min-width: 1301px) {
    .l-main__wrapper {
      max-width: 112.5rem;
      margin: auto; } }
  .l-main__wrapper.l-main_blog {
    background-color: #faf8f0;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column; }
  .l-main__wrapper.l-main_works {
    display: block; }
  .l-main__wrapper.l-main_about {
    background: #f0efe9;
    /* Old browsers */
    background: linear-gradient(to right, #f0efe9 0%, #efebe0 50%, #efebe0 100%);
    /* FF3.6-15 */
    /* Chrome10-25,Safari5.1-6 */
    /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f0efe9', endColorstr='#efebe0',GradientType=1 );
    /* IE6-9 */ }
    @media screen and (max-width: 768px) {
      .l-main__wrapper.l-main_about {
        -webkit-flex-direction: column;
            -ms-flex-direction: column;
                flex-direction: column;
        -webkit-align-items: center;
            -ms-flex-align: center;
                align-items: center; } }

.l-main__header {
  width: 100%;
  height: 12.1875rem;
  background-color: #faf8f0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 480px) {
    .l-main__header {
      height: 9rem; } }

.l-main__header-title {
  width: 40%;
  position: relative;
  color: #373e42;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .l-main__header-title .h-title-section {
    text-align: center; }
  .l-main__header-title::first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .l-main__header-title {
      width: 63%; } }

.l-main__slider {
  width: 100%;
  height: 750px;
  display: block;
  margin-bottom: 3%; }
  @media screen and (max-width: 768px) {
    .l-main__slider {
      height: 1030px; } }
  @media screen and (max-width: 480px) {
    .l-main__slider {
      height: 585px; } }

.l-main__column-one, .l-main__column-two {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  width: 50%;
  min-height: 100%;
  position: relative; }
  @media screen and (max-width: 768px) {
    .l-main__column-one, .l-main__column-two {
      width: 100%; } }

.l-main__column-one {
  background-color: #F0EFE9; }

.l-main__column-two {
  background-color: #EFEBE0; }

.l-footer {
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 9.1875rem;
  background-color: rgba(55, 62, 66, 0.85);
  padding: 0.5% 0;
  width: 100%; }
  .l-footer:after {
    display: block;
    content: '';
    width: 100%;
    height: 1px;
    background-color: rgba(255, 255, 255, 0.1);
    position: absolute;
    left: 0;
    top: 50%; }
  @media screen and (max-width: 768px) {
    .l-footer {
      min-height: 14.75rem; } }
  @media screen and (max-width: 480px) {
    .l-footer {
      min-height: 16.875rem; } }

.l-footer__nav {
  width: 50%;
  height: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .l-footer__nav {
      width: 90%;
      height: 22%;
      -webkit-order: 1;
          -ms-flex-order: 1;
              order: 1;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__nav {
      width: 100%; } }

.l-footer__text {
  width: 50%;
  height: 50%;
  font-size: 1.0625rem;
  font-weight: 300;
  color: rgba(255, 255, 255, 0.5);
  line-height: 1.5;
  text-align: left;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .l-footer__text a {
    text-decoration: underline;
    cursor: pointer;
    opacity: 0.5; }
  .l-footer__text a:hover {
    text-decoration: none; }
  @media screen and (max-width: 768px) {
    .l-footer__text {
      width: 80%;
      height: 28%;
      -webkit-order: 3;
          -ms-flex-order: 3;
              order: 3;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center;
      text-align: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__text {
      width: 100%; } }

.l-footer__social {
  width: 50%;
  height: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .l-footer__social {
      width: 80%;
      height: 28%;
      -webkit-order: 2;
          -ms-flex-order: 2;
              order: 2;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__social {
      width: 90%; } }

.l-footer__social-item {
  width: 2.1rem;
  height: 2.1rem;
  border: 0.5px solid rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  margin-right: 2%;
  transition: background-color 0.3s; }
  @media screen and (max-width: 480px) {
    .l-footer__social-item {
      margin-right: 4%; } }
  .l-footer__social-item:hover {
    background-color: rgba(255, 255, 255, 0.85); }
    .l-footer__social-item:hover .l-footer__social-link {
      color: #455a64; }
    .l-footer__social-item:hover .svg-use {
      opacity: 1; }

.l-footer__social-link {
  display: inline-block;
  width: 100%;
  height: 100%;
  color: white;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  transition: color 0.3s; }
  .l-footer__social-link .svg-use {
    width: 1.2rem;
    height: 1.55rem;
    opacity: 0.5;
    transition: opacity 0.3s; }

.overlay {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 9;
  overflow: hidden;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 191, 165, 0); }
  @media screen and (min-width: 1800px) {
    .overlay {
      left: 50%;
      -webkit-transform: translateX(-50%);
              transform: translateX(-50%);
      width: 1813px; } }

.overlay .overlay-section {
  position: fixed;
  top: 0;
  width: 50.3%;
  height: 100%;
  background: rgba(0, 191, 165, 0.87);
  z-index: -1;
  will-change: transform; }

.overlay .overlay-section.section-left {
  left: 0;
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%); }

.overlay .overlay-section.section-right {
  right: 0;
  -webkit-transform: translateX(100%);
          transform: translateX(100%); }

.overlay .c-hamburger-nav__list {
  opacity: 0; }

/* to_ open*/
.overlay.to_open {
  -webkit-animation: bg_to_color 0.3s 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: bg_to_color 0.3s 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_open .overlay-section.section-left {
  -webkit-animation: open_hamburger_left 0.5s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_unvisible 0.2s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: open_hamburger_left 0.5s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_unvisible 0.2s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_open .overlay-section.section-right {
  -webkit-animation: open_hamburger_right 0.5s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_unvisible 0.2s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: open_hamburger_right 0.5s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_unvisible 0.2s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_open .c-hamburger-nav__list {
  -webkit-animation: to_visible 0.1s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: to_visible 0.1s 0.6s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

/*to_close*/
.overlay.to_close {
  -webkit-animation: bg_to_transparent 0s 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: bg_to_transparent 0s 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_close .c-hamburger-nav__list {
  -webkit-animation: to_unvisible 0.2s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: to_unvisible 0.2s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_close .overlay-section.section-left {
  -webkit-animation: close_hamburger_left 0.3s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_visible 0s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: close_hamburger_left 0.3s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_visible 0s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.overlay.to_close .overlay-section.section-right {
  -webkit-animation: close_hamburger_right 0.3s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_visible 0s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
          animation: close_hamburger_right 0.3s 0s cubic-bezier(0.645, 0.045, 0.355, 1), to_visible 0s 0s cubic-bezier(0.645, 0.045, 0.355, 1);
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards; }

.c-hamburger-nav {
  width: 2.5rem;
  height: 1.875rem;
  position: relative; }

.c-hamburger-nav__target {
  display: block;
  width: 100%;
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  position: absolute;
  left: 0;
  top: 0; }
  .c-hamburger-nav__target #firstLine {
    -webkit-transform-origin: left top;
            transform-origin: left top;
    will-change: transform; }
  .c-hamburger-nav__target #centerLine {
    -webkit-transform-origin: center center;
            transform-origin: center center;
    will-change: transform; }
  .c-hamburger-nav__target #lastLine {
    -webkit-transform-origin: left bottom;
            transform-origin: left bottom;
    will-change: transform; }
  .c-hamburger-nav__target.animate #firstLine {
    -webkit-animation: rotate_leftClose 0.3s linear;
            animation: rotate_leftClose 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
  .c-hamburger-nav__target.animate #centerLine {
    -webkit-animation: scale_centerClose 0.3s linear;
            animation: scale_centerClose 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
  .c-hamburger-nav__target.animate #lastLine {
    -webkit-animation: rotate_rightClose 0.3s linear;
            animation: rotate_rightClose 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }

.c-hamburger-nav__close {
  display: block;
  width: 2.5rem;
  height: 1.875rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  position: absolute;
  right: 10%;
  top: 10%; }
  @media screen and (min-width: 1800px) {
    .c-hamburger-nav__close {
      left: 50%;
      -webkit-transform: translateX(800px);
              transform: translateX(800px); } }
  @media screen and (max-width: 768px) {
    .c-hamburger-nav__close {
      right: 5%;
      top: 5%; } }
  @media screen and (max-width: 480px) {
    .c-hamburger-nav__close {
      top: 3%;
      right: 4%; } }
  .c-hamburger-nav__close #firstLine {
    -webkit-transform-origin: left top;
            transform-origin: left top;
    will-change: transform;
    -webkit-transform: rotate(45deg) translate(2px, 1px);
            transform: rotate(45deg) translate(2px, 1px); }
  .c-hamburger-nav__close #centerLine {
    -webkit-transform-origin: center center;
            transform-origin: center center;
    will-change: transform;
    -webkit-transform: scaleX(0.0002);
            transform: scaleX(0.0002); }
  .c-hamburger-nav__close #lastLine {
    -webkit-transform-origin: left bottom;
            transform-origin: left bottom;
    will-change: transform;
    -webkit-transform: rotate(-45deg) translate(2px, 1px);
            transform: rotate(-45deg) translate(2px, 1px); }
  .c-hamburger-nav__close.animate #firstLine {
    -webkit-animation: rotate_leftHamburger 0.3s linear;
            animation: rotate_leftHamburger 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
  .c-hamburger-nav__close.animate #centerLine {
    -webkit-animation: rotate_centerHamburger 0.3s linear;
            animation: rotate_centerHamburger 0.3s linear;
    -webkit-animation-delay: 0.295s;
            animation-delay: 0.295s;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
  .c-hamburger-nav__close.animate #lastLine {
    -webkit-animation: rotate_rightHamburger 0.3s linear;
            animation: rotate_rightHamburger 0.3s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }

.c-hamburger-nav__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-hamburger-nav__item {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  color: white;
  margin-bottom: 8%; }
  .c-hamburger-nav__item .svg_dash {
    opacity: 0.2; }
  .c-hamburger-nav__item:hover .svg_dash {
    opacity: 0.5; }

.c-developer {
  width: 23.75rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-developer__img-wrap {
  width: 8.8125rem;
  height: 8.8125rem;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  overflow: hidden;
  margin-bottom: 4%;
  border-radius: 50%; }
  @media screen and (max-width: 480px) {
    .c-developer__img-wrap {
      width: 9.0625rem;
      height: 9.0625rem; } }

.c-developer__img {
  max-width: 100%; }

.c-developer__content {
  width: 100%;
  text-align: center; }

.c-develop_blog-header {
  color: white;
  position: relative; }

.c-developer__header {
  font-size: 2.1875rem;
  font-weight: 500;
  line-height: 1.5;
  margin-bottom: 0.3%;
  color: white; }
  @media screen and (max-width: 480px) {
    .c-developer__header {
      font-size: 1.375rem; } }

.c-developer__desc {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.5;
  font-weight: 300; }

.c-developer__desc_blog {
  color: white;
  font-weight: 400;
  display: inline-block;
  width: 100%; }

.c-blog {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  position: relative;
  padding-top: 4%;
  margin-bottom: auto;
  -webkit-align-items: stretch;
      -ms-flex-align: stretch;
          align-items: stretch; }

.c-blog__aside {
  position: absolute;
  top: 1.5%;
  right: 50%;
  width: 25%;
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%); }
  @media screen and (min-width: 1800px) {
    .c-blog__aside {
      width: 450px; } }
  @media screen and (max-width: 768px) {
    .c-blog__aside {
      width: 70%;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-justify-content: flex-end;
          -ms-flex-pack: end;
              justify-content: flex-end;
      -webkit-align-items: center;
          -ms-flex-align: center;
              align-items: center;
      -webkit-transform: translateX(-72%);
              transform: translateX(-72%);
      background-color: #00bfa5;
      padding-right: 1rem;
      box-shadow: 3px 0px 3px 0px rgba(0, 0, 0, 0.2); } }
  .c-blog__aside.pos-fixed {
    position: fixed;
    top: 10%; }
  .c-blog__aside.overlay-mobile {
    position: fixed;
    top: 0;
    bottom: 0;
    right: initial;
    -webkit-transform: none;
            transform: none;
    z-index: 3;
    will-change: transform; }
  .c-blog__aside.animateOpen {
    -webkit-animation: blog_tabletNavOpen 0.7s linear;
            animation: blog_tabletNavOpen 0.7s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
    @media screen and (max-width: 768px) {
      .c-blog__aside.animateOpen .c-blog__menu-swipe:hover {
        cursor: initial; } }
  .c-blog__aside.animateClose {
    -webkit-animation: blog_tabletNavClose 0.7s linear;
            animation: blog_tabletNavClose 0.7s linear;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }

.c-blog__menu-swipe {
  display: none; }
  @media screen and (max-width: 768px) {
    .c-blog__menu-swipe:hover {
      cursor: pointer; } }
  .c-blog__menu-swipe:before {
    content: '';
    height: 110%;
    width: 70%;
    background-color: inherit;
    z-index: 0;
    position: absolute;
    top: 50%;
    left: 0;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    display: none; }
    @media screen and (max-width: 768px) {
      .c-blog__menu-swipe:before {
        display: block; } }
  @media screen and (max-width: 768px) {
    .c-blog__menu-swipe {
      display: block;
      position: absolute;
      top: 50%;
      left: 100%;
      z-index: -1;
      -webkit-transform: translateX(-70%);
              transform: translateX(-70%);
      width: 4.375rem;
      height: 4.375rem;
      border-radius: 0 50% 50% 0;
      background-color: #00bfa5;
      box-shadow: 3px 0px 3px 0px rgba(0, 0, 0, 0.2); } }

@media screen and (max-width: 768px) {
  .c-blog__nav {
    width: 55%; } }

@media screen and (max-width: 480px) {
  .c-blog__nav {
    width: 70%; } }

.c-blog__nav-item {
  text-align: right;
  padding: 4.5% 6.5%;
  border-right: 3px solid transparent; }
  .c-blog__nav-item.is-active .c-blog__nav-link {
    font-weight: 900;
    color: #00bfa5; }
    @media screen and (max-width: 768px) {
      .c-blog__nav-item.is-active .c-blog__nav-link {
        color: white; } }
  .c-blog__nav-item.is-active {
    border-right: 3px solid #00bfa5; }
    @media screen and (max-width: 768px) {
      .c-blog__nav-item.is-active {
        border-right: none; } }
  @media screen and (max-width: 768px) {
    .c-blog__nav-item {
      border-right: none; } }

.c-blog__nav-link {
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.63;
  text-align: right;
  color: #455a64; }
  @media screen and (max-width: 768px) {
    .c-blog__nav-link {
      color: rgba(255, 255, 255, 0.7); } }

.c-blog__main {
  width: 68%;
  padding: 0 1% 2% 1%;
  padding: 1% 1% 2% 1%;
  margin: 0 1.9% 0% auto; }
  @media screen and (max-width: 768px) {
    .c-blog__main {
      width: 95%;
      margin-bottom: 5%;
      margin-left: 0; } }

.c-blog__article {
  padding: 9% 0;
  border-bottom: 5px solid rgba(55, 62, 66, 0.07); }
  .c-blog__article:first-child {
    padding-top: 0; }
  .c-blog__article:last-child {
    border-bottom: none; }
  .c-blog__article .h-title-article {
    margin: 0; }

.article__date {
  display: block;
  font-size: 1rem;
  font-weight: 400;
  line-height: 2.56;
  text-align: left;
  color: rgba(0, 191, 165, 0.7); }

.article__text {
  font-size: 16px;
  font-weight: 400;
  line-height: 1.63;
  text-align: left;
  color: #455a64; }

pre.prettyprint, code.prettyprint {
  background-color: #f4f2f0 !important;
  border: none !important;
  position: relative;
  counter-reset: item; }
  pre.prettyprint li, code.prettyprint li {
    background-color: #f4f2f0 !important;
    counter-increment: item;
    margin-bottom: 5px;
    position: relative; }
  pre.prettyprint li:before, code.prettyprint li:before {
    content: counter(item);
    color: #5a7b8c;
    width: 1.2em;
    text-align: center;
    display: block;
    top: 0;
    left: -1.3rem;
    bottom: 0;
    position: absolute;
    z-index: 1; }

pre.prettyprint {
  width: 100%;
  margin: 1em 0;
  padding: 1em;
  white-space: pre-wrap;
  font-weight: bold;
  border-radius: 1px; }
  pre.prettyprint:before {
    content: '';
    display: block;
    background-color: #E8E6E4;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    width: 3rem;
    z-index: 1; }

li.L0, li.L1, li.L2, li.L3,
li.L5, li.L6, li.L7, li.L8 {
  list-style-type: decimal !important; }

/*! Color themes for Google Code Prettify | MIT License | github.com/jmblog/color-themes-for-google-code-prettify */
.prettyprint {
  background: #f7f3f7;
  font-family: Menlo, "Bitstream Vera Sans Mono", "DejaVu Sans Mono", Monaco, Consolas, monospace;
  border: 0 !important; }

.pln {
  color: #1b181b; }

/* Specify class=linenums on a pre to get line numbering */
ol.linenums {
  margin-top: 0;
  margin-bottom: 0;
  color: #5a7b8c; }

li.L0,
li.L1,
li.L2,
li.L3,
li.L4,
li.L5,
li.L6,
li.L7,
li.L8,
li.L9 {
  padding-left: 1em;
  background-color: #f7f3f7; }

@media screen {
  /* string content */
  .str {
    color: #918b3b; }
  /* keyword */
  .kwd {
    color: #7b59c0; }
  /* comment */
  .com {
    color: #5a7b8c; }
  /* type name */
  .typ {
    color: #516aec; }
  /* literal value */
  .lit {
    color: #a65926; }
  /* punctuation */
  .pun {
    color: #1b181b; }
  /* lisp open bracket */
  .opn {
    color: #1b181b; }
  /* lisp close bracket */
  .clo {
    color: #1b181b; }
  /* markup tag name */
  .tag {
    color: #ca402b; }
  /* markup attribute name */
  .atn {
    color: #a65926; }
  /* markup attribute value */
  .atv {
    color: #159393; }
  /* declaration */
  .dec {
    color: #a65926; }
  /* variable name */
  .var {
    color: #ca402b; }
  /* function name */
  .fun {
    color: #516aec; } }

.svg_hero {
  opacity: 0.06;
  width: 100%;
  height: 37%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  fill: white;
  z-index: 1; }

.svg_hamburger {
  width: 2.5rem;
  height: 1.875rem;
  color: white; }
  @media screen and (max-width: 768px) {
    .svg_hamburger {
      width: 2.1875rem;
      height: 1.6875rem; } }

.svg_hero-blog {
  opacity: 0.06;
  width: 150%;
  height: 300%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -40%);
          transform: translate(-50%, -40%);
  fill: white;
  z-index: 1; }

.svg_next {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white;
  transition: opacity 0.3s; }

.svg_prev {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white;
  transition: opacity 0.3s;
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1); }

.svg_dash {
  width: 1.6rem;
  height: 0.8rem;
  opacity: 0.25;
  fill: currentColor;
  stroke: currentColor;
  display: inline-block;
  vertical-align: middle;
  transition: opacity 0.3s; }
  @media screen and (max-width: 480px) {
    .svg_dash {
      width: 0.9rem; } }

.svg-main-top_two-color {
  width: 100.2%;
  height: 21rem;
  fill: #EFEBE0;
  stroke: #EFEBE0; }
  @media screen and (max-width: 768px) {
    .svg-main-top_two-color {
      fill: #F0EFE9;
      stroke: #F0EFE9; } }

.svg_main-top_one-color {
  width: 100.2%;
  height: 21rem;
  color: #faf8f0; }

.svg-main-icon {
  opacity: 0.07;
  position: absolute;
  top: 0;
  left: 50%;
  right: 0;
  bottom: 0;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 0; }

.svg-main-icon_about {
  width: 80%;
  -webkit-transform: translate(-50%, -30%);
          transform: translate(-50%, -30%); }
  @media screen and (max-width: 768px) {
    .svg-main-icon_about {
      width: 70%;
      -webkit-transform: translate(-50%, -40%);
              transform: translate(-50%, -40%); } }
  @media screen and (max-width: 768px) {
    .svg-main-icon_about {
      width: 50%; } }

.svg-main-icon_works {
  width: 100%;
  height: 11.875rem;
  -webkit-transform: translate(-50%, -28%);
          transform: translate(-50%, -28%); }
  @media screen and (max-width: 768px) {
    .svg-main-icon_works {
      height: 8.125rem; } }

.svg_skype, .svg_mail, .svg_phone, .svg_map-marker {
  color: #00bfa5;
  -webkit-flex-basis: 20%;
      -ms-flex-preferred-size: 20%;
          flex-basis: 20%;
  transition: opacity 0.3s; }
  .svg_skype:hover, .svg_mail:hover, .svg_phone:hover, .svg_map-marker:hover {
    opacity: 0.7; }

.svg_skype {
  width: 1.5rem;
  height: 1.5rem; }

.svg_mail {
  width: 1.5rem;
  height: 1.2rem; }

.svg_phone {
  width: 1.25rem;
  height: 1.1875rem; }

.svg_map-marker {
  width: 1.1875rem;
  height: 1.5rem; }

.svg_login {
  width: 0.9375rem;
  height: 1.0625rem;
  color: #c4cbcd; }

.svg_link {
  width: 1.25rem;
  height: 1.1875rem;
  margin-right: 0.5rem; }

.svg_slider-arrow {
  width: 2.8125rem;
  height: 1.75rem;
  box-shadow: 0px 2px 2px 0 rgba(0, 0, 0, 0.16);
  color: white;
  opacity: 0.7;
  transition: opacity 0.3s; }

.h-title-section {
  font-family: 'bernier';
  font-size: 3.9375rem;
  letter-spacing: 0.2rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 1.0625rem;
  line-height: 1.05;
  font-weight: 500;
  color: #373e42; }
  .h-title-section:first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .h-title-section {
      font-size: 3.0625rem; } }
  @media screen and (max-width: 480px) {
    .h-title-section {
      font-size: 2.1875rem; } }

.h-title-section_color {
  color: white; }

.h-title-article {
  font-family: 'bernier';
  font-size: 2.1875rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 1rem;
  line-height: 1.5;
  font-weight: 500;
  color: #455a64; }
  .h-title-article:first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 480px) {
    .h-title-article {
      font-size: 1.375rem; } }

.c-nav__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 80%;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 375px) {
    .c-nav__list {
      width: 92%; } }

.c-nav__item {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1; }

.c-nav__link {
  display: inline-block;
  font-size: 1.0625rem;
  line-height: 1.5;
  font-weight: 500;
  white-space: nowrap;
  color: white;
  transition: color 0.4s; }
  .c-nav__link::first-letter {
    text-transform: uppercase; }
  .c-nav__link:hover {
    color: #00bfa5; }

.c-copy {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .c-copy a {
    text-decoration: underline;
    cursor: pointer; }
  .c-copy a:hover {
    text-decoration: none; }
  @media screen and (max-width: 768px) {
    .c-copy {
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap;
      text-align: center; } }

.c-copy_item {
  display: inline-block;
  color: white;
  font-weight: 300;
  font-size: 1rem;
  line-height: 6.28; }
  .c-copy_item:after {
    display: inline-block;
    content: '|';
    margin: 0 0.3rem;
    font-size: 1rem;
    font-weight: 300; }
  .c-copy_item:last-child:after {
    display: none; }
  @media screen and (max-width: 480px) {
    .c-copy_item {
      line-height: 1.5; }
      .c-copy_item:first-child {
        width: 100%; }
      .c-copy_item:first-child:after {
        display: none; } }

.c-copy_footer {
  width: 50%;
  height: 50%;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }
  @media screen and (max-width: 768px) {
    .c-copy_footer {
      width: 80%;
      height: 22%;
      -webkit-order: 4;
          -ms-flex-order: 4;
              order: 4;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .c-copy_footer {
      width: 100%; } }
  .c-copy_footer .c-copy_item {
    color: rgba(255, 255, 255, 0.5); }
  .c-copy_footer a {
    opacity: 0.5; }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvYmFzZS9fZm9udHMuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvYmFzZS9fYmFzZS5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy91dGlscy9fdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL3V0aWxzL19taXhpbnMuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvYmFzZS9faGVscGVycy5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9hbmltYXRpb25zL19hbmltYXRpb25zLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC13cmFwcGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1wcmVsb2FkZXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvdXRpbHMvX2Z1bmN0aW9ucy5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtc2VjdGlvbi5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtc2Nyb2xsLXBhcmFsbGF4LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1oZXJvLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1oZXJvX19zb2NpYWwuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvbGF5b3V0L19sLWNvbnRhaW5lci5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtaGFtYnVyZ2VyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1tYWluLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1mb290ZXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvY29tcG9uZW50cy9fb3ZlcmxheS5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19jLWhhbWJ1cmdlci1uYXYuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvY29tcG9uZW50cy9fYy1kZXZlbG9wZXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvY29tcG9uZW50cy9fYy1ibG9nLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX3N2Zy5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19oLXRpdGxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2MtbmF2LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2MtY29weS5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvYmxvZy5tYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUZBQWlGO0FBRWpGO0VBQ0ksa0NBQWlDO0VBQ2pDLGlHQUNrRjtFQUNsRixvQkFBbUI7RUFDbkIsbUJBQWtCOztBQUl0QjtFQUNJLHVCQUFzQjtFQUN0QixpR0FDK0U7RUFDL0Usb0JBQW1CO0VBQ25CLG1CQUFrQjs7QUFJdEI7RUFDSSw2QkFBNEI7RUFDNUIsaUdBQzZFO0VBQzdFLG9CQUFtQjtFQUNuQixtQkFBa0I7O0FBS3RCO0VBQ0ksc0JBQXFCO0VBQ3JCLGlHQUNtRTtFQUNuRSxpQkFBZ0I7RUFDaEIsbUJBQWtCOztBQUl0QjtFQUNJLHNCQUFxQjtFQUNyQixpR0FDeUU7RUFDekUsaUJBQWdCO0VBQ2hCLG1CQUFrQjs7QUFJdEI7RUFDSSxzQkFBcUI7RUFDckIsbUdBQ3FFO0VBQ3JFLGlCQUFn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V3hCO0VyQjFCQTtJcUJPRDtNQVdFLFlBQVcsRUFRWjtFQW5CRDtJQWNFLGdDdEJyRCtCLEVzQnNEL0I7RUFmRjtJQWlCRSxhQUFZLEVBQ1o7O0FDMjVERiIsImZpbGUiOiIuL2Fzc2V0cy9jc3Mvc3R5bGVzLmJsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIEdlbmVyYXRlZCBieSBGb250IFNxdWlycmVsIChodHRwczovL3d3dy5mb250c3F1aXJyZWwuY29tKSBvbiBNYXJjaCA4LCAyMDE4ICovXHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnYmVybmllcl9kaXN0cmVzc2VkJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJkaXN0cmVzc2VkLXJlZ3VsYXItd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJkaXN0cmVzc2VkLXJlZ3VsYXItd2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG5cclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ2Jlcm5pZXInO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2Jlcm5pZXIvYmVybmllcnJlZ3VsYXItcmVndWxhci13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2Jlcm5pZXIvYmVybmllcnJlZ3VsYXItcmVndWxhci13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnYmVybmllcl9zaGFkZSc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvYmVybmllci9iZXJuaWVyc2hhZGUtcmVndWxhci13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2Jlcm5pZXIvYmVybmllcnNoYWRlLXJlZ3VsYXItd2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG5cclxufVxyXG5cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tYm9sZC13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tYm9sZC13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWJvbGRpdGFsaWMtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWJvbGRpdGFsaWMtd2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogOTAwO1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG5cclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ3JvYm90byc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1pdGFsaWMtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWl0YWxpYy13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0LXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1saWdodC13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0aXRhbGljLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1saWdodGl0YWxpYy13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLW1lZGl1bS13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbWVkaXVtLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbWVkaXVtaXRhbGljLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1tZWRpdW1pdGFsaWMtd2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG5cclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ3JvYm90byc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1yZWd1bGFyLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1yZWd1bGFyLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHJcbn1cclxuXHJcbiR0ZXh0LWZvbnQtc3RhY2s6ICgncm9ib3RvJywgJ0FyaWFsJywgc2Fucy1zZXJpZik7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2Jhc2UvX2ZvbnRzLnNjc3MiLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIHZlcnkgYmFzaWMgc3R5bGVzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLyoqXG4gKiBTZXQgdXAgYSBkZWNlbnQgYm94IG1vZGVsIG9uIHRoZSByb290IGVsZW1lbnRcbiAqL1xuKiB7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmJvZHksIGh0bWwge1xuICBcdGNvbG9yOiAkdGV4dC1jb2xvcjtcbiBcdGJhY2tncm91bmQtY29sb3I6ICRsaWdodC1ncmV5OyBcbiAgXHRmb250LWZhbWlseTogJHRleHQtZm9udC1zdGFjaztcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAxMDAlO1xuXHRmb250LXdlaWdodDogNDAwO1xuXHRmb250LXNpemU6IDE2cHg7XG5cdGxpbmUtaGVpZ2h0OiAxLjQyNXJlbTtcblx0Zm9udC1zdHlsZTogbm9ybWFsO1xuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcblx0Zm9udC1kaXNwbGF5OiBvcHRpb25hbDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRtaW4taGVpZ2h0OiAxMDB2aDtcblx0Ji5hYm91dCAubC1mb290ZXIge1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDA7XG5cdFx0bGVmdDogMDtcblx0XHRyaWdodDogMDtcblx0fVxuXHRAaW5jbHVkZSBjdXN0b21fMTgwMCB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSgkdGV4dC1jb2xvciwgMC4zKTtcblx0fSBcblx0XG5cdEBpbmNsdWRlIGxhcHRvcCB7XG5cdFx0Zm9udC1zaXplOiAxNXB4O1xuXHR9XG5cblx0QGluY2x1ZGUgdGFibGV0IHtcblx0XHRmb250LXNpemU6IDE0cHg7XG5cdH1cblxuXHRAaW5jbHVkZSBtb2JpbGUge1xuXHRcdGZvbnQtc2l6ZTogMTNweDtcblx0fVxuXG5cdEBpbmNsdWRlIHMtbW9iaWxlIHtcblx0XHRmb250LXNpemU6IDEycHg7XG5cdH1cbn1cbmJvZHkuaGVybywgaHRtbC5oZXJvIHtcblx0aGVpZ2h0OiAxMDAlO1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHRtaW4taGVpZ2h0OiA2MjhweDtcblx0JiAubC1wYXJhbGxheF9fY29udGFpbmVyIHtcblx0XHRAaW5jbHVkZSBjdXN0b21fMTgwMCB7XG5cdFx0XHQvL3dpZHRoOiAxODAwcHg7XG5cdFx0XHQvL21hcmdpbjogMCBhdXRvO1xuXHRcdFx0Ly9vdmVyZmxvdzogaGlkZGVuO1xuXHRcdH1cblx0fVxuXHRAaW5jbHVkZSB0YWJsZXQge1xuXHRcdG1pbi1oZWlnaHQ6IDEwMHZoO1xuXHR9XG59XG5cbi8qKlxuICogTWFrZSBhbGwgZWxlbWVudHMgZnJvbSB0aGUgRE9NIGluaGVyaXQgZnJvbSB0aGUgcGFyZW50IGJveC1zaXppbmdcbiAqIFNpbmNlIGAqYCBoYXMgYSBzcGVjaWZpY2l0eSBvZiAwLCBpdCBkb2VzIG5vdCBvdmVycmlkZSB0aGUgYGh0bWxgIHZhbHVlXG4gKiBtYWtpbmcgYWxsIGVsZW1lbnRzIGluaGVyaXRpbmcgZnJvbSB0aGUgcm9vdCBib3gtc2l6aW5nIHZhbHVlXG4gKiBTZWU6IGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vaW5oZXJpdGluZy1ib3gtc2l6aW5nLXByb2JhYmx5LXNsaWdodGx5LWJldHRlci1iZXN0LXByYWN0aWNlL1xuICovXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQmFzaWMgc3R5bGVzIGZvciBsaW5rc1xuICovXG5hIHtcbiAgY29sb3I6ICRwcmltYXJ5Q29sb3I7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxudWwge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG59XG5cbnVsIGxpIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cblxuaDEsIGgyLCBoMywgcCB7XG5cdG1hcmdpbjogMDtcbn1cblxuc3ZnIHtcblx0ZmlsbDogY3VycmVudENvbG9yO1xuXHRzdHJva2U6IGN1cnJlbnRDb2xvcjtcbn1cblxuYnV0dG9uLCBpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiAkdGV4dC1mb250LXN0YWNrO1xuIH1cbi8vKiBmb3IgcHJlbG9hZGluZyBpbWFnZXNcbmltZyB7XG5cdGRpc3BsYXk6IG5vbmU7XG59XG4uZ29vZ2xlLW1hcCBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9iYXNlL19iYXNlLnNjc3MiLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIGFsbCBhcHBsaWNhdGlvbi13aWRlIFNhc3MgdmFyaWFibGVzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vLyBSZWd1bGFyIGZvbnQgZmFtaWx5XG4vLy8gQHR5cGUgTGlzdFxuXG4kcHJpbWFyeUNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG5cbi8vLyBDb3B5IHRleHQgY29sb3Jcbi8vLyBAdHlwZSBDb2xvclxuJHRleHQtY29sb3I6IHJnYig2OSwgOTAsIDEwMCkgIWRlZmF1bHQ7XG4kdGl0bGUtY29sb3I6IHJnYig1NSwgNjIsIDY2KTtcbi8vL1xuJGRhcmstdGV4dC1jb2xvcjogIzM3M0U0MjtcblxuLy8vIE1haW4gYnJhbmQgY29sb3Jcbi8vLyBAdHlwZSBDb2xvclxuLy8kYnJhbmQtY29sb3I6IHJnYigzMiwxODEsMTYxKSAhZGVmYXVsdDtcbiRicmFuZC1jb2xvcjogcmdiKDAsIDE5MSwgMTY1KSAhZGVmYXVsdDtcblxuLy8vIFNlY29uZGFyeSBjb2xvclxuJHNlY29uZC1jb2xvcjogcmdiKDAsIDE1MCwgMTM2KTtcblxuJGxpZ2h0LXJlZDogcmdiKDIyMywgODcsIDEwMik7XG5cbiRsaWdodC13aGl0ZTogI0ZFRkVGRTtcbiRsaWdodC1iZWlnZTogI0YwRUZFOTtcbiRiZWlnZTogI0ZCRjhGMTtcbiRiZWlnZS1vbmU6ICNlZmVlZTk7XG4kYmVpZ2UtdHdvOiAjZWVlYmRmO1xuXG4vLy8gTGlnaHQgZ3JleVxuLy8vIEB0eXBlIENvbG9yXG4kbGlnaHQtZ3JleTogcmdiKDIzNywgMjM3LCAyMzcpICFkZWZhdWx0O1xuXG4vLy8gTWVkaXVtIGdyZXlcbi8vLyBAdHlwZSBDb2xvclxuJG1pZC1ncmV5OiByZ2IoMTUzLCAxNTMsIDE1MykgIWRlZmF1bHQ7XG5cbi8vLyBEYXJrIGdyZXlcbi8vLyBAdHlwZSBDb2xvclxuJGRhcmstZ3JleTogcmdiKDY4LCA2OCwgNjgpICFkZWZhdWx0O1xuXG4vLy8qKiogY29sb3JzICoqKipcbi8vL1xuLy9cIiMwMDc3QjVcIlxuLy9yZ2IoMSwgMTAyLCAxMTQpXG5cbi8vLyBDb250YWluZXIncyBtYXhpbXVtIHdpZHRoXG4vLy8gQHR5cGUgTGVuZ3RoXG4kbWF4LXdpZHRoOiAxMTgwcHggIWRlZmF1bHQ7XG5cbi8vLyBCcmVha3BvaW50cyBtYXBcbi8vLyBAcHJvcCB7U3RyaW5nfSBrZXlzIC0gS2V5cyBhcmUgaWRlbnRpZmllcnMgbWFwcGVkIHRvIGEgZ2l2ZW4gbGVuZ3RoXG4vLy8gQHByb3Age01hcH0gdmFsdWVzIC0gVmFsdWVzIGFyZSBhY3R1YWwgYnJlYWtwb2ludHMgZXhwcmVzc2VkIGluIHBpeGVsc1xuJGJyZWFrcG9pbnRzOiAoXG4gICdzbWFsbCc6IDMyMHB4LFxuICAnbWVkaXVtJzogNzY4cHgsXG4gICdsYXJnZSc6IDEwMjRweCxcbikgIWRlZmF1bHQ7XG5cbiRkZXNrdG9wOiAxMzAwcHg7XG4kbGFwdG9wOiAgOTkycHg7XG4kdGFibGV0OiA3NjhweDtcbiRtb2JpbGU6IDQ4MHB4O1xuJHNtYWxsLW1vYmlsZTogMzc1cHg7XG5cbi8vLyBSZWxhdGl2ZSBvciBhYnNvbHV0ZSBVUkwgd2hlcmUgYWxsIGFzc2V0cyBhcmUgc2VydmVkIGZyb21cbi8vLyBAdHlwZSBTdHJpbmdcbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2hlbiB1c2luZyBhIENETlxuLy8vICAgJGJhc2UtdXJsOiAnaHR0cDovL2Nkbi5leGFtcGxlLmNvbS9hc3NldHMvJztcbiRiYXNlLXVybDogJy9hc3NldHMvJyAhZGVmYXVsdDtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy91dGlscy9fdmFyaWFibGVzLnNjc3MiLCJcclxuQG1peGluIHNpemUoJHdpZHRoLCAkaGVpZ2h0OiAkd2lkdGgpIHtcclxuICB3aWR0aDogJHdpZHRoO1xyXG4gIGhlaWdodDogJGhlaWdodDtcclxufVxyXG5cclxuLy8vIG1peGlucyBmb3IgTWVkaWEgUXVlcmllc1xyXG5AbWl4aW4gY3VzdG9tXzE4MDAge1xyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE4MDBweCkge1xyXG4gICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBjdXN0b20ge1xyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRkZXNrdG9wICsgMSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gZGVza3RvcCB7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGxhcHRvcCArIDEpIGFuZCAobWF4LXdpZHRoOiAkZGVza3RvcCkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gbGFwdG9wIHtcclxuXHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbGFwdG9wKSBhbmQgKG1pbi13aWR0aDogJHRhYmxldCArIDEpIHtcclxuICBcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIHRhYmxldCB7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHRhYmxldCkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gbW9iaWxlIHtcclxuXHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbW9iaWxlKSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbkBtaXhpbiBzLW1vYmlsZSB7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHNtYWxsLW1vYmlsZSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gcmV0aW5hIHtcclxuICBAbWVkaWFcclxuICAgIG9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSxcclxuICAgIG9ubHkgc2NyZWVuIGFuZCAobWluLS1tb3otZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSxcclxuICAgIG9ubHkgc2NyZWVuIGFuZCAoLW8tbWluLWRldmljZS1waXhlbC1yYXRpbzogMi8xKSxcclxuICAgIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMiksXHJcbiAgICBvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpLFxyXG4gICAgb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMmRwcHgpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuXHJcbkBtaXhpbiBwcmludCB7XHJcbiAgQG1lZGlhIHByaW50IHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuLy8vIG1peGlucyBmb3IgY2hhbmdlIHZpc2libGl0eVxyXG5cclxuQG1peGluIGludmlzaWJsZSB7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XHJcbiAgaGVpZ2h0OiAxcHg7XHJcbiAgbWFyZ2luOiAtMXB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcGFkZGluZzogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDFweDtcclxufVxyXG5cclxuQG1peGluIHZpc2libGUge1xyXG4gIGhlaWdodDogaW5pdGlhbDtcclxuICB3aWR0aDogaW5pdGlhbDtcclxuICBtYXJnaW46IGluaXRpYWw7XHJcbiAgcG9zaXRpb246IGluaXRpYWw7XHJcbn1cclxuXHJcbi8vLyBwb3NpdGlvblxyXG5cclxuQG1peGluIGFic29sdXRlLXN0cmV0Y2gge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuXHJcbkBtaXhpbiBhYnNvbHV0ZS1jZW50ZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbn1cclxuXHJcbkBtaXhpbiBhYnNvbHV0ZS1jZW50ZXJYIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxufVxyXG5cclxuQG1peGluIGFic29sdXRlLWNlbnRlclkge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG59XHJcbi8vLyBUcmlhbmdsZSBoZWxwZXIgbWl4aW5cclxuLy8vIEBwYXJhbSB7RGlyZWN0aW9ufSAkZGlyZWN0aW9uIC0gVHJpYW5nbGUgZGlyZWN0aW9uLCBlaXRoZXIgYHRvcGAsIGByaWdodGAsIFxyXG4vLy9gYm90dG9tYCBvciBgbGVmdGBcclxuLy8vIEBwYXJhbSB7Q29sb3J9ICRjb2xvciBbY3VycmVudGNvbG9yXSAtIFRyaWFuZ2xlIGNvbG9yIFxyXG4vLy8gQHBhcmFtIHtMZW5ndGh9ICRzaXplIFsxZW1dIC0gVHJpYW5nbGUgc2l6ZVxyXG5cclxuQG1peGluIHRyaWFuZ2xlKCRkaXJlY3Rpb24sICRjb2xvcjogY3VycmVudGNvbG9yLCAkc2l6ZTogMWVtKSB7XHJcbiAgXHJcbiAgQGlmIG5vdCBpbmRleCh0b3AgcmlnaHQgYm90dG9tIGxlZnQsICRkaXJlY3Rpb24pIHtcclxuICAgIEBlcnJvciBcIkRpcmVjdGlvbiBtdXN0IGJlIGVpdGhlciBgdG9wYCwgYHJpZ2h0YCwgYGJvdHRvbWAgb3IgYGxlZnRgLlwiO1xyXG4gIH1cclxuXHJcbiAgd2lkdGg6IDA7XHJcbiAgaGVpZ2h0OiAwO1xyXG4gIHotaW5kZXg6IDI7XHJcbiAgYm9yZGVyLSN7b3Bwb3NpdGUtZGlyZWN0aW9uKCRkaXJlY3Rpb24pfTogKCRzaXplICogMS41KSBzb2xpZCAkY29sb3I7XHJcbiAgXHJcbiAgJHBlcnBlbmRpY3VsYXItYm9yZGVyczogJHNpemUgc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgXHJcbiAgQGlmICRkaXJlY3Rpb24gPT0gdG9wIG9yICRkaXJlY3Rpb24gPT0gYm90dG9tIHtcclxuICAgIGJvcmRlci1sZWZ0OiAgICRwZXJwZW5kaWN1bGFyLWJvcmRlcnM7XHJcbiAgICBib3JkZXItcmlnaHQ6ICAkcGVycGVuZGljdWxhci1ib3JkZXJzO1xyXG4gIH0gQGVsc2UgaWYgJGRpcmVjdGlvbiA9PSByaWdodCBvciAkZGlyZWN0aW9uID09IGxlZnQge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogJHBlcnBlbmRpY3VsYXItYm9yZGVycztcclxuICAgIGJvcmRlci10b3A6ICAgICRwZXJwZW5kaWN1bGFyLWJvcmRlcnM7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLy8vIHN0eWxpbmcgcmFkaW9idXR0b24sIGNoZWNrYm94XHJcblxyXG5AbWl4aW4gaGlkZGVuIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwcHg7XHJcbiAgbGVmdDogMHB4O1xyXG4gIHdpZHRoOiAwO1xyXG4gIGhlaWdodDogMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG9wYWNpdHk6IDA7XHJcbn1cclxuLy8vIGZvciBwbGFjZWhvbGRlciBzdHlsaW5nXHJcblxyXG5AbWl4aW4gcGxhY2Vob2xkZXIge1xyXG4gIFxyXG4gICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyBAY29udGVudDsgfVxyXG4gICY6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAgeyBAY29udGVudDsgfVxyXG4gICY6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgeyBAY29udGVudDsgfVxyXG4gICY6LW1zLWlucHV0LXBsYWNlaG9sZGVyICAgICAgeyBAY29udGVudDsgfSAgXHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvdXRpbHMvX21peGlucy5zY3NzIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFRoaXMgZmlsZSBjb250YWlucyBDU1MgaGVscGVyIGNsYXNzZXMuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAqIENsZWFyIGlubmVyIGZsb2F0c1xuICovXG4uY2xlYXJmaXg6OmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cblxuLyoqXG4gKiBNYWluIGNvbnRlbnQgY29udGFpbmVyc1xuICogMS4gTWFrZSB0aGUgY29udGFpbmVyIGZ1bGwtd2lkdGggd2l0aCBhIG1heGltdW0gd2lkdGhcbiAqIDIuIENlbnRlciBpdCBpbiB0aGUgdmlld3BvcnRcbiAqIDMuIExlYXZlIHNvbWUgc3BhY2Ugb24gdGhlIGVkZ2VzLCBlc3BlY2lhbGx5IHZhbHVhYmxlIG9uIHNtYWxsIHNjcmVlbnNcbiAqL1xuXG5cbi8qKlxuICogSGlkZSB0ZXh0IHdoaWxlIG1ha2luZyBpdCByZWFkYWJsZSBmb3Igc2NyZWVuIHJlYWRlcnNcbiAqIDEuIE5lZWRlZCBpbiBXZWJLaXQtYmFzZWQgYnJvd3NlcnMgYmVjYXVzZSBvZiBhbiBpbXBsZW1lbnRhdGlvbiBidWc7XG4gKiAgICBTZWU6IGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NTcxNDZcbiAqL1xuLmhpZGUtdGV4dCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7IC8qIDEgKi9cbiAgdGV4dC1pbmRlbnQ6IDEwMSU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEhpZGUgZWxlbWVudCB3aGlsZSBtYWtpbmcgaXQgcmVhZGFibGUgZm9yIHNjcmVlbiByZWFkZXJzXG4gKiBTaGFtZWxlc3NseSBib3Jyb3dlZCBmcm9tIEhUTUw1Qm9pbGVycGxhdGU6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vaDVicC9odG1sNS1ib2lsZXJwbGF0ZS9ibG9iL21hc3Rlci9zcmMvY3NzL21haW4uY3NzI0wxMTktTDEzM1xuICovXG4udmlzdWFsbHktaGlkZGVuIHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBoZWlnaHQ6IDFweDtcbiAvKiBtYXJnaW46IC0xcHg7Ki9cbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xufVxuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvYmFzZS9faGVscGVycy5zY3NzIiwiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vLS0tLS0tLS0tLS0tdG8gY2xvc2UtLS0tXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5Aa2V5ZnJhbWVzIHJvdGF0ZV9sZWZ0Q2xvc2Uge1xyXG5cdGZyb20ge1x0dHJhbnNmb3JtOiBub25lOyB9XHJcblx0dG8geyB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTt9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgcm90YXRlX3JpZ2h0Q2xvc2Uge1xyXG5cdGZyb20geyB0cmFuc2Zvcm06IG5vbmU7IH1cclxuXHR0byB7IHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTt9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgc2NhbGVfY2VudGVyQ2xvc2Uge1xyXG5cdGZyb20geyB0cmFuc2Zvcm06IG5vbmU7IH1cclxuXHR0byB7IHRyYW5zZm9ybTogc2NhbGVYKDAuMDAwMik7IH1cclxufVxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8tLS0tLS0tLS0tLS10byBoYW1idXJnZXItLS0tXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5Aa2V5ZnJhbWVzIHJvdGF0ZV9sZWZ0SGFtYnVyZ2VyIHtcclxuXHRmcm9tIHtcdHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpOyB9XHJcblx0dG8geyB0cmFuc2Zvcm06IG5vbmU7IH1cclxufVxyXG5cclxuQGtleWZyYW1lcyByb3RhdGVfcmlnaHRIYW1idXJnZXIge1xyXG5cdGZyb20geyB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZSgycHgsIDFweCk7IH1cclxuXHR0byB7IHRyYW5zZm9ybTogbm9uZTsgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHNjYWxlX2NlbnRlckhhbWJ1cmdlciB7XHJcblx0ZnJvbSB7IHRyYW5zZm9ybTogc2NhbGVYKDAuMDAwMik7IH1cclxuXHR0byB7IHRyYW5zZm9ybTogc2NhbGVYKDEuMSk7IH1cclxufVxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8tLS0tLS0tLS0tLWJsb2cgdGFibGV0IG5hdi0tLS1cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBrZXlmcmFtZXMgYmxvZ190YWJsZXROYXZPcGVuIHtcclxuXHRmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC03MiUpOyB9XHJcblx0dG8geyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpOyB9XHJcbn1cclxuQGtleWZyYW1lcyBibG9nX3RhYmxldE5hdkNsb3NlIHtcclxuXHRmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxyXG5cdHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAuNSUpOyB9XHJcbn1cclxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vLS0tLS0tLS0tLS1oYW1idXJnZXIgbmF2LS0tLVxyXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQGtleWZyYW1lcyBvcGVuX2hhbWJ1cmdlcl9sZWZ0IHtcclxuXHRmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsgfVxyXG5cdHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxyXG59XHJcbkBrZXlmcmFtZXMgb3Blbl9oYW1idXJnZXJfcmlnaHQge1xyXG5cdGZyb20geyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7IH1cclxuXHR0byB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7IH1cclxufVxyXG5Aa2V5ZnJhbWVzIGNsb3NlX2hhbWJ1cmdlcl9sZWZ0IHtcclxuXHRmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxyXG5cdHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsgfVxyXG59XHJcbkBrZXlmcmFtZXMgY2xvc2VfaGFtYnVyZ2VyX3JpZ2h0IHtcclxuXHRmcm9tIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxyXG5cdHRvIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOyB9XHJcbn1cclxuQGtleWZyYW1lcyB0b192aXNpYmxlIHtcclxuXHRmcm9tIHsgb3BhY2l0eTogMDsgfVxyXG5cdHRvIHsgb3BhY2l0eTogMTsgfVxyXG59XHJcbkBrZXlmcmFtZXMgdG9fdW52aXNpYmxlIHtcclxuXHRmcm9tIHsgb3BhY2l0eTogMTsgfVxyXG5cdHRvIHsgb3BhY2l0eTogMDsgfVxyXG59XHJcbkBrZXlmcmFtZXMgYmdfdG9fY29sb3Ige1xyXG5cdGZyb20geyBiYWNrZ3JvdW5kOiByZ2JhKCRicmFuZC1jb2xvciwgMCk7IH1cclxuXHR0byB7IGJhY2tncm91bmQ6IHJnYmEoJGJyYW5kLWNvbG9yLCAwLjg3KTsgfVxyXG59XHJcbkBrZXlmcmFtZXMgYmdfdG9fdHJhbnNwYXJlbnQge1xyXG5cdGZyb20geyBiYWNrZ3JvdW5kOiByZ2JhKCRicmFuZC1jb2xvciwgMC44Nyk7IH1cclxuXHR0byB7IGJhY2tncm91bmQ6IHJnYmEoJGJyYW5kLWNvbG9yLCAwKTsgfVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2FuaW1hdGlvbnMvX2FuaW1hdGlvbnMuc2NzcyIsIlxyXG4ubC13cmFwcGVyIHtcclxuXHRcclxuXHRAaW5jbHVkZSBzaXplKDEwMCUpO1xyXG5cdG1hcmdpbjogMDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRtaW4taGVpZ2h0OiAxMDB2aDtcclxuXHRAaW5jbHVkZSBjdXN0b20ge1xyXG5cdFx0bWluLWhlaWdodDogNjUwcHg7XHJcblx0fVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC13cmFwcGVyLnNjc3MiLCIjbG9hZGVyLXdyYXBwZXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2VzL2RlY29yL2JnL2JnX3ByZWxvYWRlci5qcGcpIGNlbnRlci9jb3ZlciBuby1yZXBlYXQ7XHJcbn1cclxuI2xvYWRlciB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgd2lkdGg6IHJlbSgxNDQpO1xyXG4gICAgaGVpZ2h0OiByZW0oMTQ0KTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgei1pbmRleDogMTAwMTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICYgY2lyY2xlIHtcclxuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgY2VudGVyO1xyXG4gICAgICAgIHN0cm9rZS13aWR0aDogNDtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgfVxyXG4gICAgJiBjaXJjbGUjYmlnQ2lyY2xlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTE1ZGVnKTtcclxuXHJcbiAgICB9XHJcbiAgICAmIGNpcmNsZSNtaWRkbGVDaXJjbGUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xMDVkZWcpO1xyXG4gICAgfVxyXG4gICAgY2lyY2xlI3NtYWxsQ2lyY2xlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpOyAgICAgIFxyXG4gICAgfVxyXG59XHJcbi5sb2FkZXJfX3RleHQge1xyXG4gICAgZm9udC1zaXplOiByZW0oMTYpO1xyXG4gICAgY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdG9wOjUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG59XHJcbiNsb2FkZXItd3JhcHBlciAubG9hZGVyLXNlY3Rpb24ge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgd2lkdGg6IDUxJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoJGJyYW5kLWNvbG9yLCAwKTtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7ICAgXHJcbiAgICB9XHJcblxyXG4jbG9hZGVyLXdyYXBwZXIgLmxvYWRlci1zZWN0aW9uLnNlY3Rpb24tbGVmdCB7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG5cclxuI2xvYWRlci13cmFwcGVyIC5sb2FkZXItc2VjdGlvbi5zZWN0aW9uLXJpZ2h0IHtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8qIExvYWRlZCAqL1xyXG4ubG9hZGVkICNsb2FkZXItd3JhcHBlciAubG9hZGVyLXNlY3Rpb24uc2VjdGlvbi1sZWZ0IHtcclxuXHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpOyBcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjdzIDAuM3MgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEuMDAwKSxcclxuICAgIFx0YmFja2dyb3VuZCAwcyAwcyBsaW5lYXI7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKCRicmFuZC1jb2xvciwgMC4zKTtcclxuICAgIH1cclxuXHJcbi5sb2FkZWQgI2xvYWRlci13cmFwcGVyIC5sb2FkZXItc2VjdGlvbi5zZWN0aW9uLXJpZ2h0IHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjdzIDAuM3MgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEuMDAwKSxcclxuICAgIFx0YmFja2dyb3VuZCAwcyAwcyBsaW5lYXI7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKCRicmFuZC1jb2xvciwgMC4zKTtcclxuICAgIH1cclxuICAgIFxyXG4ubG9hZGVkICNsb2FkZXIge1xyXG4gICAgb3BhY2l0eTogMDsgXHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLW91dDtcclxuICAgIH1cclxuLmxvYWRlZCAjbG9hZGVyLXdyYXBwZXIge1xyXG5cdHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7ICBcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIDFzIGVhc2Utb3V0O1xyXG4gICAgfVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtcHJlbG9hZGVyLnNjc3MiLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVGhpcyBmaWxlIGNvbnRhaW5zIGFsbCBhcHBsaWNhdGlvbi13aWRlIFNhc3MgZnVuY3Rpb25zLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRicm93c2VyLWNvbnRleHQ6IDE2O1xuXG4vLy8gcmVtXG5cbkBmdW5jdGlvbiByZW0oJHBpeGVscywgJGNvbnRleHQ6ICRicm93c2VyLWNvbnRleHQpIHtcbiAgQGlmICh1bml0bGVzcygkcGl4ZWxzKSkge1xuICAgICRwaXhlbHM6ICRwaXhlbHMgKiAxcHg7XG4gIH1cblxuICBAaWYgKHVuaXRsZXNzKCRjb250ZXh0KSkge1xuICAgICRjb250ZXh0OiAkY29udGV4dCAqIDFweDtcbiAgfVxuXG4gIEByZXR1cm4gJHBpeGVscyAvICRjb250ZXh0ICogMXJlbTtcbn1cblxuLy8vIGVtXG5cbkBmdW5jdGlvbiBlbSgkcGl4ZWxzLCAkY29udGV4dDogJGJyb3dzZXItY29udGV4dCkge1xuICBAaWYgKHVuaXRsZXNzKCRwaXhlbHMpKSB7XG4gICAgJHBpeGVsczogJHBpeGVscyAqIDFweDtcbiAgfVxuXG4gIEBpZiAodW5pdGxlc3MoJGNvbnRleHQpKSB7XG4gICAgJGNvbnRleHQ6ICRjb250ZXh0ICogMXB4O1xuICB9XG5cbiAgQHJldHVybiAkcGl4ZWxzIC8gJGNvbnRleHQgKiAxZW07XG59XG5cbi8vLyBmdW5jdGlvbiBpcyBpdCBhbGxvd3MgeW91IHRvIHBhc3MgYSBsaXN0IG9mIGRpcmVjdGlvbnMsIFxuLy8vc28gdGhhdCB5b3UgZ2V0IGJvdHRvbSBsZWZ0IGZyb20gb3Bwb3NpdGUtZGlyZWN0aW9uKHRvcCByaWdodCkuXG4vLy8gSXQgY2FuIGJlIHVzZWZ1bCB3aGVuIGRlYWxpbmcgd2l0aCBiYWNrZ3JvdW5kLXBvc2l0aW9uLCBmb3IgaW5zdGFuY2VcblxuQGZ1bmN0aW9uIG9wcG9zaXRlLWRpcmVjdGlvbigkZGlyZWN0aW9ucykge1xuXG4gICRvcHBvc2l0ZS1kaXJlY3Rpb25zOiAoKTtcbiAgJGRpcmVjdGlvbi1tYXA6IChcbiAgICAndG9wJzogJ2JvdHRvbScsXG4gICAgJ3JpZ2h0JzogJ2xlZnQnLFxuICAgICdib3R0b20nOiAndG9wJyxcbiAgICAnbGVmdCc6ICdyaWdodCcsXG4gICAgJ2x0cic6ICdydGwnLFxuICAgICdydGwnOiAnbHRyJyk7XG5cbiAgQGVhY2ggJGRpcmVjdGlvbiBpbiAkZGlyZWN0aW9ucyB7XG4gICAgJG9wcG9zaXRlLWRpcmVjdGlvbjogbWFwLWdldCgkZGlyZWN0aW9uLW1hcCwgJGRpcmVjdGlvbik7XG4gICAgICAgIEBpZiAkb3Bwb3NpdGUtZGlyZWN0aW9uICE9IG51bGwgeyBcbiAgICAgICRvcHBvc2l0ZS1kaXJlY3Rpb25zOiBhcHBlbmQoJG9wcG9zaXRlLWRpcmVjdGlvbnMsICN7JG9wcG9zaXRlLWRpcmVjdGlvbn0pO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICBAd2FybiBcIk5vIG9wcG9zaXRlIGRpcmVjdGlvbiBjYW4gYmUgZm91bmQgZm9yIGAjeyRkaXJlY3Rpb259YC5cIjtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuICRvcHBvc2l0ZS1kaXJlY3Rpb25zO1xufVxuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvdXRpbHMvX2Z1bmN0aW9ucy5zY3NzIiwiLmwtc2VjdGlvbiB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0bWluLWhlaWdodDogNjI4cHg7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0QGluY2x1ZGUgY3VzdG9tIHtcclxuXHRcdFx0bWluLWhlaWdodDogNjUwcHg7XHJcblx0XHRcdG1heC13aWR0aDogcmVtKDE4MDApO1xyXG5cdFx0XHRtYXJnaW46IGF1dG87XHJcblx0XHR9XHJcblx0XHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0XHRtaW4taGVpZ2h0OiAxMDB2aDtcclxuXHRcdH1cclxufVxyXG5cclxuLmwtbGFzdCB7XHJcblx0aGVpZ2h0OiAxMDB2aDtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5sLWxheW91dC1maXJzdCB7XHJcblx0QGluY2x1ZGUgYWJzb2x1dGUtc3RyZXRjaDtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5sLWZlZWRzIHtcclxuXHRoZWlnaHQ6IDEyODBweDtcclxuICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL2RlY29yL2JnL2ZlZWRzX2JnLnBuZycpIG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvbGF5b3V0L19sLXNlY3Rpb24uc2NzcyIsIi5sLXNjcm9sbC1wYXJhbGxheC1jb250YWluZXIge1xyXG5cdGJhY2tncm91bmQ6ICM5QUJEQkU7XHJcblx0b3ZlcmZsb3cteDogaGlkZGVuO1xyXG5cdG92ZXJmbG93LXk6IGF1dG87XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHRvcDogMDtcclxuXHRsZWZ0OiAwO1xyXG5cdHJpZ2h0OiAwcHg7XHJcblx0Ym90dG9tOiAwO1xyXG5cdHBlcnNwZWN0aXZlOiAxMDBweDtcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0YmFja2dyb3VuZDogdXJsKC4uL2ltYWdlcy9kZWNvci9iZy9tb3VudGFpbnMuanBnKTtcclxuXHRcdGJhY2tncm91bmQtc2l6ZTogMzAwJSBhdXRvO1xyXG5cdFx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuXHRcdGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XHJcblx0XHR6LWluZGV4OiAwO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0YmFja2dyb3VuZC1zaXplOiAzMzAlIGF1dG87XHJcblx0fVxyXG59XHJcblxyXG4ubC1zY3JvbGwtcGFyYWxsYXhfX2xheWVyIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0dG9wOiAwO1xyXG5cdGxlZnQ6IC0xMDBweDtcclxuXHRyaWdodDogMDtcclxuXHRib3R0b206IDA7XHJcblx0ei1pbmRleDogLTE7XHJcblx0JjpmaXJzdC1jaGlsZCAubC1zY3JvbGwtcGFyYWxsYXhfX2ltZyB7XHJcblx0XHR0b3A6IDA7XHJcblx0fVxyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRkaXNwbGF5OiBub25lO1xyXG5cdH1cclxufVxyXG5cclxuLmwtc2Nyb2xsLXBhcmFsbGF4X19pbWcge1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRsZWZ0OiA1MCU7XHJcblx0Ym90dG9tOiAwO1xyXG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0ZGlzcGxheTogbm9uZTtcclxuXHR9XHJcbn1cclxuXHJcbi5wYXJhbGxheF9fY29udGVudCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMTAwJTtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4kbGF5ZXJzOiAxMDtcclxuQGZvciAkaSBmcm9tICRsYXllcnMgdGhyb3VnaCAxIHtcclxuXHQubC1zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCgjeyRpfSkge1xyXG5cdFx0JGN1cnJlbnRMYXllcjogJGxheWVycyAtICRpO1xyXG5cdFx0JHBlcnNwZWN0aXZlOiAtJGN1cnJlbnRMYXllciAqIDUwcHg7XHJcblx0XHQkc2NhbGU6ICRjdXJyZW50TGF5ZXIgKiAuNSArIDE7XHJcblxyXG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVaKCRwZXJzcGVjdGl2ZSkgc2NhbGUoJHNjYWxlKTtcclxuXHR9XHJcbn1cclxuXHJcbkBmb3IgJGxheWVyc051bSBmcm9tICRsYXllcnMgdGhyb3VnaCAxIHtcclxuICAuc2Nyb2xsLXBhcmFsbGF4X19sYXllcjpudGgtY2hpbGQoI3skbGF5ZXJzTnVtfSkge1xyXG4gICAgJGN1cnJlbnRMYXllcjogJGxheWVycyAtICRsYXllcnNOdW07XHJcbiAgICAkcGVyc3BlY3RpdmU6IC0kY3VycmVudExheWVyICogNTBweDtcclxuICAgICRzY2FsZTogJGN1cnJlbnRMYXllciAqIC41ICsgMTtcclxuXHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooJHBlcnNwZWN0aXZlKSBzY2FsZSgkc2NhbGUpO1xyXG4gIH1cclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtc2Nyb2xsLXBhcmFsbGF4LnNjc3MiLCJcclxuLmwtaGVybyB7XHJcblx0aGVpZ2h0OiAxMDB2aDtcclxuXHRcdCY6YmVmb3JlIHtcclxuXHRcdFx0Y29udGVudDogJyc7XHJcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0XHRAaW5jbHVkZSBhYnNvbHV0ZS1zdHJldGNoO1xyXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEsIDEwMiwgMTE0LCAwLjMpO1xyXG5cdFx0XHR6LWluZGV4OiAwO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0QGluY2x1ZGUgY3VzdG9tIHtcclxuXHRcdG1pbi1oZWlnaHQ6IDY1MHB4O1xyXG5cdH1cclxuXHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xyXG5cdH1cclxufVxyXG5cclxuLmwtaGVyb19ibG9nIHtcclxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgdG9wO1xyXG5cdCYgLmwtbWFpbl9fdG9wIHtcclxuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdHRvcDogNzAlO1xyXG5cdH1cclxuXHQmIC5wYXJhbGxheF9fY29udGVudCB7XHJcblx0XHR0b3A6IDcyJTtcclxuXHR9XHJcblx0JiAubC1oZXJvX19kZXZlbG9wIHtcclxuXHRcdHRvcDogMDtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDUwJSk7XHJcblx0XHRAaW5jbHVkZSBjdXN0b21fMTgwMCB7XHJcblx0XHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDE1MCUpO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLmwtaGVyb19fZGV2ZWxvcCB7XHJcblx0QGluY2x1ZGUgYWJzb2x1dGUtY2VudGVyO1xyXG5cdHotaW5kZXg6IDE1O1xyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1oZXJvLnNjc3MiLCJcclxuLmwtaGVyb19fc29jaWFsIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0ei1pbmRleDogMTU7XHJcblx0bGVmdDogMTAlO1xyXG5cdHRvcDogMTAlO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0d2lkdGg6IDEyJTtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblx0QGluY2x1ZGUgY3VzdG9tXzE4MDAge1xyXG5cdFx0bGVmdDogNTAlO1xyXG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC04MDBweCk7XHJcblx0fVxyXG5cdEBpbmNsdWRlIGRlc2t0b3Age1xyXG5cdFx0d2lkdGg6IDE2JTtcclxuXHR9XHJcblx0QGluY2x1ZGUgbGFwdG9wIHtcclxuXHRcdHdpZHRoOiAxNiU7XHJcblx0fVxyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogMjAlO1xyXG5cdFx0dG9wOiA1JTtcclxuXHRcdGxlZnQ6IDUlO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0d2lkdGg6IDMwJTtcclxuXHRcdHRvcDogNCU7XHJcblx0XHRsZWZ0OiA0JTtcclxuXHR9XHJcbn1cclxuXHJcbi5sLWhlcm9fX3NvY2lhbC1pdGVtIHtcclxuXHJcblx0aGVpZ2h0OiByZW0oMjIpO1xyXG59XHJcblxyXG4ubC1oZXJvX19zb2NpYWwtbGluayB7XHJcblxyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRoZWlnaHQ6IDEwMCU7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblxyXG5cdCY6aG92ZXIgLnN2Zy11c2Uge1xyXG5cdFx0b3BhY2l0eTogMTtcclxuXHR9XHJcblx0Jjp2aXNpdGVkIC5zdmctdXNlIHtcclxuXHRcdG9wYWNpdHk6IDAuNTtcclxuXHR9XHJcbn1cclxuXHJcbi5zdmctdXNlIHtcclxuXHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMjgpLCByZW0oMjIpKTtcclxuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHM7XHJcblx0b3BhY2l0eTogMC41O1xyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1oZXJvX19zb2NpYWwuc2NzcyIsIi5sLWNvbnRhaW5lciB7XHJcblx0d2lkdGg6IDk1JTtcclxuXHRoZWlnaHQ6IHJlbSgxNDdweCk7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRtYXJnaW46IGF1dG87XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRmbGV4LXdyYXA6IHdyYXA7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdGhlaWdodDogcmVtKDIzNik7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0aGVpZ2h0OiByZW0oMjcwKTtcclxuXHR9XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvbGF5b3V0L19sLWNvbnRhaW5lci5zY3NzIiwiXHJcbi5sLWhhbWJ1cmdlciB7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHRvcDogMTAlO1xyXG5cdHJpZ2h0OiAxMCU7XHJcblx0ei1pbmRleDogMTU7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHJpZ2h0OiA1JTtcclxuXHRcdHRvcDogNSU7XHJcblx0fVxyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHRyaWdodDogNCU7XHJcblx0XHR0b3A6IDQlO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBjdXN0b21fMTgwMCB7XHJcblx0XHRsZWZ0OiA1MCU7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoODAwcHgpO1xyXG5cdH1cclxuXHQmX3dvcmtzIHtcclxuXHRcdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRcdHRvcDogMi41JTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtaGFtYnVyZ2VyLnNjc3MiLCIubC1tYWluIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRkU5O1xyXG5cdC8vaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ubC1tYWluX190b3Age1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDEwMCU7XHJcblx0bGVmdDogMDtcclxuXHRyaWdodDogMDtcclxuXHR6LWluZGV4OiAwO1xyXG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxufVxyXG5cclxuLmwtbWFpbl9fd3JhcHBlciB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0bWluLWhlaWdodDogMTAwJTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcclxuXHRAaW5jbHVkZSBjdXN0b20ge1xyXG5cdFx0XHRtYXgtd2lkdGg6IHJlbSgxODAwKTtcclxuXHRcdFx0bWFyZ2luOiBhdXRvO1xyXG5cdH1cclxuXHQmLmwtbWFpbl9ibG9nIHtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICNmYWY4ZjA7XHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHR9XHJcblx0Ji5sLW1haW5fd29ya3Mge1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHQvL21hcmdpbi1ib3R0b206IDIlO1xyXG5cdH1cclxuXHQmLmwtbWFpbl9hYm91dCB7XHJcblx0XHRiYWNrZ3JvdW5kOiByZ2IoMjQwLDIzOSwyMzMpOyAvKiBPbGQgYnJvd3NlcnMgKi9cclxuXHRiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudChsZWZ0LCByZ2JhKDI0MCwyMzksMjMzLDEpIDAlLCByZ2JhKDIzOSwyMzUsMjI0LDEpIDUwJSwgcmdiYSgyMzksMjM1LDIyNCwxKSAxMDAlKTtcclxuXHRiYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQobGVmdCwgcmdiYSgyNDAsMjM5LDIzMywxKSAwJSwgcmdiYSgyMzksMjM1LDIyNCwxKSA1MCUsIHJnYmEoMjM5LDIzNSwyMjQsMSkgMTAwJSk7XHJcblx0YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDI0MCwyMzksMjMzLDEpIDAlLCByZ2JhKDIzOSwyMzUsMjI0LDEpIDUwJSwgcmdiYSgyMzksMjM1LDIyNCwxKSAxMDAlKTsgLyogRkYzLjYtMTUgKi8gLyogQ2hyb21lMTAtMjUsU2FmYXJpNS4xLTYgKi8gLyogVzNDLCBJRTEwKywgRkYxNissIENocm9tZTI2KywgT3BlcmExMissIFNhZmFyaTcrICovXHJcblx0ZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoIHN0YXJ0Q29sb3JzdHI9JyNmMGVmZTknLCBlbmRDb2xvcnN0cj0nI2VmZWJlMCcsR3JhZGllbnRUeXBlPTEgKTsgLyogSUU2LTkgKi9cclxuXHRcdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4ubC1tYWluX19oZWFkZXIge1xyXG5cdEBpbmNsdWRlIHNpemUoMTAwJSwgcmVtKDE5NSkpO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsIDI0OCwgMjQwKTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdGhlaWdodDogOXJlbTtcclxuXHR9XHRcclxufVxyXG5cclxuLmwtbWFpbl9faGVhZGVyLXRpdGxlIHtcclxuXHR3aWR0aDogNDAlO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRjb2xvcjogJHRpdGxlLWNvbG9yO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHQmIC5oLXRpdGxlLXNlY3Rpb24ge1xyXG5cdFx0IHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR9XHJcblx0Jjo6Zmlyc3QtbGV0dGVyIHtcclxuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0fVxyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogNjMlO1xyXG5cdH1cclxufVxyXG5cclxuLmwtbWFpbl9fc2xpZGVyIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRoZWlnaHQ6IDc1MHB4O1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdG1hcmdpbi1ib3R0b206IDMlO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRoZWlnaHQ6IDEwMzBweDtcclxuXHR9XHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdGhlaWdodDogNTg1cHg7XHJcblx0fVxyXG59XHJcblxyXG4ubC1tYWluX19jb2x1bW4tb25lLCAubC1tYWluX19jb2x1bW4tdHdvIHtcclxuXHRmbGV4OiAxO1xyXG5cdHdpZHRoOiA1MCU7XHJcblx0bWluLWhlaWdodDogMTAwJTtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdH1cclxufVxyXG5cclxuLmwtbWFpbl9fY29sdW1uLW9uZSB7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI0YwRUZFOTtcclxufVxyXG5cclxuLmwtbWFpbl9fY29sdW1uLXR3byB7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI0VGRUJFMDtcclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtbWFpbi5zY3NzIiwiLmwtZm9vdGVyIHtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRtaW4taGVpZ2h0OiByZW0oMTQ3cHgpO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTUsIDYyLCA2NiwwLjg1KTtcclxuXHRwYWRkaW5nOiAwLjUlIDA7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0JjphZnRlciB7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdGNvbnRlbnQ6ICcnO1xyXG5cdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRoZWlnaHQ6IDFweDtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6IHJnYmEoJHByaW1hcnlDb2xvciwgMC4xKTtcclxuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRcdGxlZnQ6IDA7XHJcblx0XHR0b3A6IDUwJTtcclxuXHR9XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdG1pbi1oZWlnaHQ6IHJlbSgyMzYpO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0bWluLWhlaWdodDogcmVtKDI3MCk7XHJcblx0fVxyXG59XHJcblxyXG4ubC1mb290ZXJfX25hdiB7XHJcblx0d2lkdGg6IDUwJTtcclxuXHRoZWlnaHQ6IDUwJTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiA5MCU7XHJcblx0XHRoZWlnaHQ6IDIyJTtcclxuXHRcdG9yZGVyOiAxO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0fVxyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHR9XHJcbn1cclxuXHJcbi5sLWZvb3Rlcl9fdGV4dCB7XHJcblx0d2lkdGg6IDUwJTtcclxuXHRoZWlnaHQ6IDUwJTtcclxuXHRmb250LXNpemU6IHJlbSgxNyk7XHJcblx0Zm9udC13ZWlnaHQ6IDMwMDtcclxuXHRjb2xvcjogcmdiYSgkcHJpbWFyeUNvbG9yLCAwLjUpO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjU7XHJcblx0dGV4dC1hbGlnbjogbGVmdDtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0JiBhIHtcclxuXHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdFx0b3BhY2l0eTogMC41O1xyXG5cdH1cclxuXHQmIGE6aG92ZXIge1xyXG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdH1cclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0d2lkdGg6IDgwJTtcclxuXHRcdGhlaWdodDogMjglO1xyXG5cdFx0b3JkZXI6IDM7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR9XHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdH1cclxufVxyXG5cclxuLmwtZm9vdGVyX19zb2NpYWwge1xyXG5cdHdpZHRoOjUwJTtcclxuXHRoZWlnaHQ6IDUwJTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0d2lkdGg6IDgwJTtcclxuXHRcdGhlaWdodDogMjglO1xyXG5cdFx0b3JkZXI6IDI7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR9XHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdHdpZHRoOiA5MCU7XHJcblx0fVxyXG59XHJcblxyXG4ubC1mb290ZXJfX3NvY2lhbC1pdGVtIHtcclxuXHRAaW5jbHVkZSBzaXplKDIuMXJlbSk7XHJcblx0Ym9yZGVyOiAwLjVweCBzb2xpZCByZ2JhKCRwcmltYXJ5Q29sb3IsIDAuNSk7XHJcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xyXG5cdG1hcmdpbi1yaWdodDogMiU7XHJcblx0dHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzO1xyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHRtYXJnaW4tcmlnaHQ6IDQlO1xyXG5cdH1cclxuXHQmOmhvdmVyICB7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRwcmltYXJ5Q29sb3IsIDAuODUpO1xyXG5cdFx0LmwtZm9vdGVyX19zb2NpYWwtbGluayB7XHJcblx0XHRcdGNvbG9yOiAkdGV4dC1jb2xvcjtcclxuXHRcdH1cclxuXHRcdCYgLnN2Zy11c2Uge1xyXG5cdFx0b3BhY2l0eTogMTtcclxuXHRcdH1cdFx0XHJcblx0fVxyXG59XHJcblxyXG4ubC1mb290ZXJfX3NvY2lhbC1saW5rIHtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0QGluY2x1ZGUgc2l6ZSgxMDAlKTtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0dHJhbnNpdGlvbjogY29sb3IgMC4zcztcclxuXHQmIC5zdmctdXNlIHtcclxuXHRcdEBpbmNsdWRlIHNpemUoMS4ycmVtLCAxLjU1cmVtKTtcclxuXHRcdG9wYWNpdHk6IDAuNTtcclxuXHRcdHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxuXHR9XHRcdFxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1mb290ZXIuc2NzcyIsIi5vdmVybGF5IHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0cG9zaXRpb246IGZpeGVkO1xyXG5cdHRvcDogMDtcclxuXHRyaWdodDogMDtcclxuXHR6LWluZGV4OiA5O1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcblx0QGluY2x1ZGUgc2l6ZSgxMDAlKTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRicmFuZC1jb2xvciwgMCk7XHJcblx0QGluY2x1ZGUgY3VzdG9tXzE4MDAge1xyXG5cdFx0bGVmdDogNTAlO1xyXG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG5cdFx0d2lkdGg6IDE4MTNweDtcclxuXHR9XHJcbn1cclxuLm92ZXJsYXkgLm92ZXJsYXktc2VjdGlvbiB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB3aWR0aDogNTAuMyU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKCRicmFuZC1jb2xvciwgMC44Nyk7XHJcbiAgICB6LWluZGV4OiAtMTtcclxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07IFxyXG59XHJcbi5vdmVybGF5IC5vdmVybGF5LXNlY3Rpb24uc2VjdGlvbi1sZWZ0IHtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xyXG4gICAgfVxyXG5cclxuLm92ZXJsYXkgLm92ZXJsYXktc2VjdGlvbi5zZWN0aW9uLXJpZ2h0IHtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xyXG4gICAgfVxyXG4ub3ZlcmxheSAuYy1oYW1idXJnZXItbmF2X19saXN0IHtcclxuXHRvcGFjaXR5OiAwO1xyXG59XHJcbi8qIHRvXyBvcGVuKi9cclxuLm92ZXJsYXkudG9fb3BlbiB7XHJcblx0YW5pbWF0aW9uOiBiZ190b19jb2xvciAwLjNzIDAuNXMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEuMDAwKTtcclxuXHRhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxufVxyXG4ub3ZlcmxheS50b19vcGVuIC5vdmVybGF5LXNlY3Rpb24uc2VjdGlvbi1sZWZ0IHtcclxuXHRhbmltYXRpb246IG9wZW5faGFtYnVyZ2VyX2xlZnQgMC41cyAwcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApLFxyXG5cdHRvX3VudmlzaWJsZSAwLjJzIDAuNnMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEuMDAwKTtcclxuXHRhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuICAgIH1cclxuXHJcbi5vdmVybGF5LnRvX29wZW4gLm92ZXJsYXktc2VjdGlvbi5zZWN0aW9uLXJpZ2h0IHtcclxuICAgIGFuaW1hdGlvbjogb3Blbl9oYW1idXJnZXJfcmlnaHQgMC41cyAwcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApLFxyXG4gICAgdG9fdW52aXNpYmxlIDAuMnMgMC42cyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApO1xyXG5cdGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xyXG4gICAgfVxyXG4ub3ZlcmxheS50b19vcGVuIC5jLWhhbWJ1cmdlci1uYXZfX2xpc3Qge1xyXG4gICAgYW5pbWF0aW9uOiB0b192aXNpYmxlIDAuMXMgMC42cyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApO1xyXG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XHJcbiAgICB9ICBcclxuLyp0b19jbG9zZSovXHJcbi5vdmVybGF5LnRvX2Nsb3NlIHtcclxuXHRhbmltYXRpb246IGJnX3RvX3RyYW5zcGFyZW50IDBzIDAuMnMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEuMDAwKTtcclxuXHRhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxufVxyXG4ub3ZlcmxheS50b19jbG9zZSAuYy1oYW1idXJnZXItbmF2X19saXN0IHsgXHJcbiAgICBhbmltYXRpb246IHRvX3VudmlzaWJsZSAwLjJzIDBzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxLjAwMCk7XHJcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuICAgIH1cclxuLm92ZXJsYXkudG9fY2xvc2UgLm92ZXJsYXktc2VjdGlvbi5zZWN0aW9uLWxlZnQge1xyXG5cclxuICAgIGFuaW1hdGlvbjogY2xvc2VfaGFtYnVyZ2VyX2xlZnQgMC4zcyAwcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApLFxyXG4gICAgdG9fdmlzaWJsZSAwcyAwcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMS4wMDApO1xyXG5cdGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xyXG4gICAgfVxyXG5cclxuLm92ZXJsYXkudG9fY2xvc2UgLm92ZXJsYXktc2VjdGlvbi5zZWN0aW9uLXJpZ2h0IHtcclxuICAgIGFuaW1hdGlvbjogY2xvc2VfaGFtYnVyZ2VyX3JpZ2h0IDAuM3MgMHMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEuMDAwKSxcclxuICAgIHRvX3Zpc2libGUgMHMgMHMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEuMDAwKTtcclxuXHRhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuICAgIH1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX292ZXJsYXkuc2NzcyIsIi5jLWhhbWJ1cmdlci1uYXYge1xyXG5cdEBpbmNsdWRlIHNpemUocmVtKDQwKSwgcmVtKDMwKSk7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uYy1oYW1idXJnZXItbmF2X190YXJnZXQge1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdEBpbmNsdWRlIHNpemUoMTAwJSk7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRsZWZ0OiAwO1xyXG5cdHRvcDogMDtcclxuXHQmICNmaXJzdExpbmUge1xyXG5cdFx0dHJhbnNmb3JtLW9yaWdpbjogbGVmdCB0b3A7XHJcblx0XHR3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xyXG5cdH1cclxuXHQmICNjZW50ZXJMaW5lIHtcclxuXHRcdHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBjZW50ZXI7XHJcblx0XHR3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xyXG5cdH1cclxuXHQmICNsYXN0TGluZSB7XHJcblx0XHR0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGJvdHRvbTtcclxuXHRcdHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XHJcblx0fVxyXG5cdCYuYW5pbWF0ZSAjZmlyc3RMaW5le1xyXG5cdFx0YW5pbWF0aW9uOiByb3RhdGVfbGVmdENsb3NlIDAuM3MgbGluZWFyO1xyXG5cdFx0YW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XHJcblx0fVxyXG5cdCYuYW5pbWF0ZSAjY2VudGVyTGluZXtcclxuXHRcdGFuaW1hdGlvbjogc2NhbGVfY2VudGVyQ2xvc2UgMC4zcyBsaW5lYXI7XHJcblx0XHRhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuXHR9XHJcblx0Ji5hbmltYXRlICNsYXN0TGluZXtcclxuXHRcdGFuaW1hdGlvbjogcm90YXRlX3JpZ2h0Q2xvc2UgMC4zcyBsaW5lYXI7XHJcblx0XHRhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuXHR9XHJcbn1cclxuXHJcbi5jLWhhbWJ1cmdlci1uYXZfX2Nsb3NlIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHRAaW5jbHVkZSBzaXplKHJlbSg0MCksIHJlbSgzMCkpO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0cmlnaHQ6MTAlO1xyXG5cdHRvcDogMTAlO1xyXG5cdEBpbmNsdWRlIGN1c3RvbV8xODAwIHtcclxuXHRcdGxlZnQ6IDUwJTtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4MDBweCk7XHJcblx0fVxyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRyaWdodDogNSU7XHJcblx0XHR0b3A6IDUlO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0dG9wOiAzJTtcclxuXHRcdHJpZ2h0OiA0JTtcclxuXHR9XHJcblx0JiAjZmlyc3RMaW5lIHtcclxuXHRcdHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgdG9wO1xyXG5cdFx0d2lsbC1jaGFuZ2U6IHRyYW5zZm9ybTtcclxuXHRcdHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpO1xyXG5cdH1cclxuXHQmICNjZW50ZXJMaW5lIHtcclxuXHRcdHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBjZW50ZXI7XHJcblx0XHR3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xyXG5cdFx0dHJhbnNmb3JtOiBzY2FsZVgoMC4wMDAyKTtcclxuXHR9XHJcblx0JiAjbGFzdExpbmUge1xyXG5cdFx0dHJhbnNmb3JtLW9yaWdpbjogbGVmdCBib3R0b207XHJcblx0XHR3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xyXG5cdFx0dHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpO1xyXG5cdH1cclxuXHQmLmFuaW1hdGUgI2ZpcnN0TGluZXtcclxuXHRcdGFuaW1hdGlvbjogcm90YXRlX2xlZnRIYW1idXJnZXIgMC4zcyBsaW5lYXI7XHJcblx0XHRhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuXHR9XHJcblx0Ji5hbmltYXRlICNjZW50ZXJMaW5le1xyXG5cdFx0YW5pbWF0aW9uOiByb3RhdGVfY2VudGVySGFtYnVyZ2VyIDAuM3MgbGluZWFyO1xyXG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjI5NXM7XHJcblx0XHRhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuXHR9XHJcblx0Ji5hbmltYXRlICNsYXN0TGluZXtcclxuXHRcdGFuaW1hdGlvbjogcm90YXRlX3JpZ2h0SGFtYnVyZ2VyIDAuM3MgbGluZWFyO1xyXG5cdFx0YW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XHJcblx0fVxyXG59XHJcbi5jLWhhbWJ1cmdlci1uYXZfX2xpc3Qge1xyXG5cclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmMtaGFtYnVyZ2VyLW5hdl9faXRlbSB7XHJcblxyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHRtYXJnaW4tYm90dG9tOiA4JTtcclxuXHQmIC5zdmdfZGFzaCB7XHJcblx0XHRvcGFjaXR5OiAwLjI7XHJcblx0fVxyXG5cdCY6aG92ZXIgLnN2Z19kYXNoIHtcclxuXHRcdG9wYWNpdHk6IDAuNTtcclxuXHR9XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvY29tcG9uZW50cy9fYy1oYW1idXJnZXItbmF2LnNjc3MiLCIuYy1kZXZlbG9wZXIge1xyXG5cdHdpZHRoOiByZW0oMzgwKTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19pbWctd3JhcCB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMTQxKSk7XHJcblx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcblx0YmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdG1hcmdpbi1ib3R0b206IDQlO1xyXG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0QGluY2x1ZGUgc2l6ZShyZW0oMTQ1KSk7XHJcblx0fVxyXG59XHJcblxyXG4uYy1kZXZlbG9wZXJfX2ltZyB7XHJcblx0bWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uYy1kZXZlbG9wZXJfX2NvbnRlbnQge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmMtZGV2ZWxvcF9ibG9nLWhlYWRlciB7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uYy1kZXZlbG9wZXJfX2hlYWRlciB7XHJcblxyXG5cdGZvbnQtc2l6ZTogcmVtKDM1KTtcclxuXHRmb250LXdlaWdodDogNTAwO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjU7XHJcblx0bWFyZ2luLWJvdHRvbTogMC4zJTtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0Zm9udC1zaXplOiByZW0oMjIpO1xyXG5cdH1cclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19kZXNjIHtcclxuXHRmb250LXNpemU6IHJlbSgxNik7XHJcblx0Y29sb3I6IHJnYmEoJHByaW1hcnlDb2xvciwgMC44KTtcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdGZvbnQtd2VpZ2h0OiAzMDA7XHJcbn1cclxuXHJcbi5jLWRldmVsb3Blcl9fZGVzY19ibG9nIHtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR3aWR0aDogMTAwJTtcclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19jLWRldmVsb3Blci5zY3NzIiwiLmMtYmxvZyB7XHJcblx0ZmxleC1ncm93OiAxO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0cGFkZGluZy10b3A6IDQlO1xyXG5cdG1hcmdpbi1ib3R0b206IGF1dG87XHJcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XHJcbn1cclxuXHJcbi5jLWJsb2dfX2FzaWRlIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0dG9wOiAxLjUlO1xyXG4gIHJpZ2h0OiA1MCU7XHJcbiAgd2lkdGg6IDI1JTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XHJcbiAgQGluY2x1ZGUgY3VzdG9tXzE4MDAge1xyXG4gICAgd2lkdGg6IDQ1MHB4O1xyXG4gIH1cclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNzIlKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZC1jb2xvcjtcclxuICAgIHBhZGRpbmctcmlnaHQ6IHJlbSgxNik7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDNweCAwcHggM3B4IDBweCByZ2JhKDAsMCwwLDAuMik7XHJcbiAgICAtbW96LWJveC1zaGFkb3c6IDNweCAwcHggM3B4IDBweCByZ2JhKDAsMCwwLDAuMik7XHJcbiAgICBib3gtc2hhZG93OiAzcHggMHB4IDNweCAwcHggcmdiYSgwLDAsMCwwLjIpO1xyXG5cdH1cclxuICAmLnBvcy1maXhlZCB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6MTAlO1xyXG4gIH1cclxuICAmLm92ZXJsYXktbW9iaWxlIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHJpZ2h0OiBpbml0aWFsO1xyXG4gICAgdHJhbnNmb3JtOiBub25lO1xyXG4gICAgei1pbmRleDogMztcclxuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XHJcbiAgfVxyXG4gICYuYW5pbWF0ZU9wZW4ge1xyXG4gICAgYW5pbWF0aW9uOiBibG9nX3RhYmxldE5hdk9wZW4gMC43cyBsaW5lYXI7XHJcbiAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcclxuICAgICYgLmMtYmxvZ19fbWVudS1zd2lwZTpob3ZlciB7XHJcbiAgICAgIEBpbmNsdWRlIHRhYmxldCB7XHJcbiAgICAgICAgY3Vyc29yOiBpbml0aWFsO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gICYuYW5pbWF0ZUNsb3NlIHtcclxuICAgIGFuaW1hdGlvbjogYmxvZ190YWJsZXROYXZDbG9zZSAwLjdzIGxpbmVhcjtcclxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xyXG4gIH1cclxufVxyXG5cclxuLmMtYmxvZ19fbWVudS1zd2lwZXtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gICY6aG92ZXIge1xyXG4gICAgQGluY2x1ZGUgdGFibGV0IHtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG4gIH1cclxuICAmOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGhlaWdodDogMTEwJTtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xyXG4gICAgei1pbmRleDogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBAaW5jbHVkZSB0YWJsZXQge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuICB9IFxyXG4gIEBpbmNsdWRlIHRhYmxldCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgbGVmdDogMTAwJTtcclxuICAgIHotaW5kZXg6IC0xO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC03MCUpO1xyXG4gICAgQGluY2x1ZGUgc2l6ZShyZW0oNzApKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAgNTAlIDUwJSAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJyYW5kLWNvbG9yO1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAzcHggMHB4IDNweCAwcHggcmdiYSgwLDAsMCwwLjIpO1xyXG4gICAgLW1vei1ib3gtc2hhZG93OiAzcHggMHB4IDNweCAwcHggcmdiYSgwLDAsMCwwLjIpO1xyXG4gICAgYm94LXNoYWRvdzogM3B4IDBweCAzcHggMHB4IHJnYmEoMCwwLDAsMC4yKTtcclxuICB9XHJcbiAgQGluY2x1ZGUgbW9iaWxlIHtcclxuICAgXHJcbiAgfVxyXG59XHJcblxyXG4uYy1ibG9nX19uYXYge1xyXG4gIEBpbmNsdWRlIHRhYmxldCB7XHJcbiAgICB3aWR0aDogNTUlO1xyXG4gIH1cclxuICBAaW5jbHVkZSBtb2JpbGUge1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICB9XHJcbn1cclxuXHJcbi5jLWJsb2dfX25hdi1pdGVtIHtcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRwYWRkaW5nOiA0LjUlIDYuNSU7XHJcbiAgYm9yZGVyLXJpZ2h0OiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0Ji5pcy1hY3RpdmUgLmMtYmxvZ19fbmF2LWxpbmsge1xyXG5cdGZvbnQtd2VpZ2h0OiA5MDA7XHJcblx0Y29sb3I6IHJnYigwLCAxOTEsIDE2NSk7XHJcbiAgICBAaW5jbHVkZSB0YWJsZXQge1xyXG4gICAgICBjb2xvcjogcmdiYSgkcHJpbWFyeUNvbG9yLCAxKTtcclxuICAgIH1cclxuXHR9XHJcblx0Ji5pcy1hY3RpdmUge1xyXG5cdFx0Ym9yZGVyLXJpZ2h0OiAzcHggc29saWQgcmdiKDAsIDE5MSwgMTY1KTtcclxuICAgIEBpbmNsdWRlIHRhYmxldCB7XHJcbiAgICAgIGJvcmRlci1yaWdodDogbm9uZTtcclxuICAgIH1cclxuXHR9XHJcbiAgQGluY2x1ZGUgdGFibGV0IHtcclxuICAgIGJvcmRlci1yaWdodDogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbi5jLWJsb2dfX25hdi1saW5rIHtcclxuXHRmb250LXNpemU6IHJlbSgxNik7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRsaW5lLWhlaWdodDogMS42MztcclxuXHR0ZXh0LWFsaWduOiByaWdodDtcclxuXHRjb2xvcjogJHRleHQtY29sb3I7XHJcbiAgQGluY2x1ZGUgdGFibGV0IHtcclxuICAgIGNvbG9yOiByZ2JhKCRwcmltYXJ5Q29sb3IsIDAuNyk7XHJcbiAgfVxyXG59XHJcblxyXG4uYy1ibG9nX19tYWluIHtcclxuXHQgIHdpZHRoOiA2OCU7XHJcbiAgICBwYWRkaW5nOiAwIDElIDIlIDElO1xyXG4gICAgcGFkZGluZzogMSUgMSUgMiUgMSU7XHJcbiAgICBtYXJnaW46IDAgMS45JSAwJSBhdXRvO1xyXG4gICAgQGluY2x1ZGUgdGFibGV0IHtcclxuICAgIFx0d2lkdGg6IDk1JTtcclxuICAgIFx0bWFyZ2luLWJvdHRvbTogNSU7XHJcbiAgICBcdG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgfVxyXG59XHJcblxyXG4uYy1ibG9nX19hcnRpY2xlIHtcclxuXHRwYWRkaW5nOiA5JSAwO1xyXG5cdGJvcmRlci1ib3R0b206IDVweCBzb2xpZCByZ2JhKDU1LCA2MiwgNjYsIDAuMDcpO1xyXG5cdCY6Zmlyc3QtY2hpbGQge1xyXG5cdFx0cGFkZGluZy10b3A6IDA7XHJcblx0fVxyXG5cdCY6bGFzdC1jaGlsZCB7XHJcblx0XHRib3JkZXItYm90dG9tOiBub25lO1xyXG5cdH1cclxuXHQmIC5oLXRpdGxlLWFydGljbGUge1xyXG5cdFx0bWFyZ2luOiAwO1xyXG5cdH1cclxufVxyXG5cclxuLmFydGljbGVfX2RhdGUge1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG4gXHRmb250LXNpemU6IHJlbSgxNik7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHRsaW5lLWhlaWdodDogMi41NjtcclxuXHR0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cdGNvbG9yOiByZ2JhKDAsIDE5MSwgMTY1LCAwLjcpO1xyXG59XHJcblxyXG4uYXJ0aWNsZV9fdGV4dCB7XHJcblx0Zm9udC1zaXplOiAxNnB4O1xyXG4gXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjYzO1xyXG5cdHRleHQtYWxpZ246IGxlZnQ7XHJcblx0Y29sb3I6IHJnYig2OSwgOTAsIDEwMCk7XHJcbn1cclxuXHJcbnByZS5wcmV0dHlwcmludCwgY29kZS5wcmV0dHlwcmludCB7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI2Y0ZjJmMCAhaW1wb3J0YW50O1xyXG5cdGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHQmIGxpIHtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICNmNGYyZjAgIWltcG9ydGFudDtcclxuICAgXHRcdGNvdW50ZXItaW5jcmVtZW50OiBpdGVtO1xyXG4gIFx0XHRtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuIFx0fVxyXG4gXHQmIGxpOmJlZm9yZSB7XHJcbiAgIFx0XHRjb250ZW50OiBjb3VudGVyKGl0ZW0pO1xyXG4gICBcdFx0Y29sb3I6ICM1YTdiOGM7XHJcbiAgXHRcdHdpZHRoOiAxLjJlbTtcclxuICAgXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBcdFx0ZGlzcGxheTogYmxvY2s7XHJcbiAgXHRcdHRvcDogMDtcclxuICBcdFx0bGVmdDogLTEuM3JlbTtcclxuICBcdFx0Ym90dG9tOiAwO1xyXG4gIFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgXHRcdHotaW5kZXg6IDE7XHJcbiBcdH1cclxuXHRjb3VudGVyLXJlc2V0OiBpdGVtO1xyXG59XHJcblxyXG5wcmUucHJldHR5cHJpbnQge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdG1hcmdpbjogMWVtIDA7XHJcblx0cGFkZGluZzogMWVtO1xyXG5cdHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcclxuXHRmb250LXdlaWdodDogYm9sZDtcclxuXHRib3JkZXItcmFkaXVzOiAxcHg7XHJcblx0JjpiZWZvcmUge1xyXG5cdFx0Y29udGVudDogJyc7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICNFOEU2RTQ7XHJcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHR0b3A6IDA7XHJcblx0XHRsZWZ0OiAwO1xyXG5cdFx0Ym90dG9tOiAwO1xyXG5cdFx0d2lkdGg6IDNyZW07XHJcblx0XHR6LWluZGV4OiAxO1xyXG5cdH1cclxufVxyXG5cclxubGkuTDAsIGxpLkwxLCBsaS5MMiwgbGkuTDMsXHJcbmxpLkw1LCBsaS5MNiwgbGkuTDcsIGxpLkw4IHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWwgIWltcG9ydGFudDtcclxufVxyXG4vKiEgQ29sb3IgdGhlbWVzIGZvciBHb29nbGUgQ29kZSBQcmV0dGlmeSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9qbWJsb2cvY29sb3ItdGhlbWVzLWZvci1nb29nbGUtY29kZS1wcmV0dGlmeSAqL1xyXG4ucHJldHR5cHJpbnQge1xyXG4gIGJhY2tncm91bmQ6ICNmN2YzZjc7XHJcbiAgZm9udC1mYW1pbHk6IE1lbmxvLCBcIkJpdHN0cmVhbSBWZXJhIFNhbnMgTW9ub1wiLCBcIkRlamFWdSBTYW5zIE1vbm9cIiwgTW9uYWNvLCBDb25zb2xhcywgbW9ub3NwYWNlO1xyXG4gIGJvcmRlcjogMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ucGxuIHtcclxuICBjb2xvcjogIzFiMTgxYjtcclxufVxyXG5cclxuLyogU3BlY2lmeSBjbGFzcz1saW5lbnVtcyBvbiBhIHByZSB0byBnZXQgbGluZSBudW1iZXJpbmcgKi9cclxub2wubGluZW51bXMge1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxuICBjb2xvcjogIzVhN2I4YztcclxufVxyXG5cclxubGkuTDAsXHJcbmxpLkwxLFxyXG5saS5MMixcclxubGkuTDMsXHJcbmxpLkw0LFxyXG5saS5MNSxcclxubGkuTDYsXHJcbmxpLkw3LFxyXG5saS5MOCxcclxubGkuTDkge1xyXG4gIHBhZGRpbmctbGVmdDogMWVtO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmN2YzZjc7XHJcbiAvLyBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4ge1xyXG5cclxuICAvKiBzdHJpbmcgY29udGVudCAqL1xyXG5cclxuICAuc3RyIHtcclxuICAgIGNvbG9yOiAjOTE4YjNiO1xyXG4gIH1cclxuXHJcbiAgLyoga2V5d29yZCAqL1xyXG5cclxuICAua3dkIHtcclxuICAgIGNvbG9yOiAjN2I1OWMwO1xyXG4gIH1cclxuXHJcbiAgLyogY29tbWVudCAqL1xyXG5cclxuICAuY29tIHtcclxuICAgIGNvbG9yOiAjNWE3YjhjO1xyXG4gIH1cclxuXHJcbiAgLyogdHlwZSBuYW1lICovXHJcblxyXG4gIC50eXAge1xyXG4gICAgY29sb3I6ICM1MTZhZWM7XHJcbiAgfVxyXG5cclxuICAvKiBsaXRlcmFsIHZhbHVlICovXHJcblxyXG4gIC5saXQge1xyXG4gICAgY29sb3I6ICNhNjU5MjY7XHJcbiAgfVxyXG5cclxuICAvKiBwdW5jdHVhdGlvbiAqL1xyXG5cclxuICAucHVuIHtcclxuICAgIGNvbG9yOiAjMWIxODFiO1xyXG4gIH1cclxuXHJcbiAgLyogbGlzcCBvcGVuIGJyYWNrZXQgKi9cclxuXHJcbiAgLm9wbiB7XHJcbiAgICBjb2xvcjogIzFiMTgxYjtcclxuICB9XHJcblxyXG4gIC8qIGxpc3AgY2xvc2UgYnJhY2tldCAqL1xyXG5cclxuICAuY2xvIHtcclxuICAgIGNvbG9yOiAjMWIxODFiO1xyXG4gIH1cclxuXHJcbiAgLyogbWFya3VwIHRhZyBuYW1lICovXHJcblxyXG4gIC50YWcge1xyXG4gICAgY29sb3I6ICNjYTQwMmI7XHJcbiAgfVxyXG5cclxuICAvKiBtYXJrdXAgYXR0cmlidXRlIG5hbWUgKi9cclxuXHJcbiAgLmF0biB7XHJcbiAgICBjb2xvcjogI2E2NTkyNjtcclxuICB9XHJcblxyXG4gIC8qIG1hcmt1cCBhdHRyaWJ1dGUgdmFsdWUgKi9cclxuXHJcbiAgLmF0diB7XHJcbiAgICBjb2xvcjogIzE1OTM5MztcclxuICB9XHJcblxyXG4gIC8qIGRlY2xhcmF0aW9uICovXHJcblxyXG4gIC5kZWMge1xyXG4gICAgY29sb3I6ICNhNjU5MjY7XHJcbiAgfVxyXG5cclxuICAvKiB2YXJpYWJsZSBuYW1lICovXHJcblxyXG4gIC52YXIge1xyXG4gICAgY29sb3I6ICNjYTQwMmI7XHJcbiAgfVxyXG5cclxuICAvKiBmdW5jdGlvbiBuYW1lICovXHJcblxyXG4gIC5mdW4ge1xyXG4gICAgY29sb3I6ICM1MTZhZWM7XHJcbiAgfVxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19jLWJsb2cuc2NzcyIsIlxyXG4uc3ZnX2hlcm8ge1xyXG5cdG9wYWNpdHk6IDAuMDY7XHJcblx0QGluY2x1ZGUgc2l6ZSgxMDAlLCAzNyUpO1xyXG5cdEBpbmNsdWRlIGFic29sdXRlLWNlbnRlcjtcclxuXHRmaWxsOiAkcHJpbWFyeUNvbG9yO1xyXG5cdHotaW5kZXg6IDE7XHJcbn1cclxuXHJcbi5zdmdfaGFtYnVyZ2VyIHtcclxuXHRAaW5jbHVkZSBzaXplKHJlbSg0MCksIHJlbSgzMCkpO1xyXG5cdGNvbG9yOiAkcHJpbWFyeUNvbG9yO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRAaW5jbHVkZSBzaXplKHJlbSgzNSksIHJlbSgyNykpO1xyXG5cdH1cclxufVxyXG5cclxuLnN2Z19oZXJvLWJsb2cge1xyXG5cdG9wYWNpdHk6IDAuMDY7XHJcblx0QGluY2x1ZGUgc2l6ZSgxNTAlLCAzMDAlKTtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0dG9wOiA1MCU7XHJcblx0bGVmdDogNTAlO1xyXG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC00MCUpO1xyXG5cdGZpbGw6ICRwcmltYXJ5Q29sb3I7XHJcblx0ei1pbmRleDogMTtcclxufVxyXG5cclxuLnN2Z19uZXh0IHtcclxuXHRvcGFjaXR5OiAwLjc7XHJcblx0QGluY2x1ZGUgc2l6ZSgxMDAlKTtcclxuXHRmaWxsOiAkcHJpbWFyeUNvbG9yO1xyXG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxufVxyXG4uc3ZnX3ByZXYge1xyXG5cdG9wYWNpdHk6IDAuNztcclxuXHRAaW5jbHVkZSBzaXplKDEwMCUpO1xyXG5cdGZpbGw6ICRwcmltYXJ5Q29sb3I7XHJcblx0dHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xyXG5cdHRyYW5zZm9ybTogc2NhbGUoMSwgLTEpO1xyXG59XHJcblxyXG4uc3ZnX2Rhc2gge1xyXG5cdEBpbmNsdWRlIHNpemUoMS42cmVtLCAwLjhyZW0pO1xyXG5cdG9wYWNpdHk6IDAuMjU7XHJcblx0ZmlsbDogY3VycmVudENvbG9yO1xyXG5cdHN0cm9rZTogY3VycmVudENvbG9yO1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0d2lkdGg6IDAuOXJlbTtcclxuXHR9XHJcbn1cclxuXHJcbi5zdmctbWFpbi10b3BfdHdvLWNvbG9yIHtcclxuXHR3aWR0aDogMTAwLjIlO1xyXG5cdGhlaWdodDogMjFyZW07XHJcblx0ZmlsbDogI0VGRUJFMDtcclxuXHRzdHJva2U6ICNFRkVCRTA7XHJcblx0XHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0XHRmaWxsOiAjRjBFRkU5O1xyXG5cdFx0XHRzdHJva2U6ICNGMEVGRTk7XHJcblx0fVxyXG59XHJcblxyXG4uc3ZnX21haW4tdG9wX29uZS1jb2xvciB7XHJcblx0d2lkdGg6IDEwMC4yJTtcclxuXHRoZWlnaHQ6IDIxcmVtO1xyXG5cdGNvbG9yOiByZ2IoMjUwLCAyNDgsIDI0MCk7XHJcbn1cclxuXHJcbi5zdmctbWFpbi1pY29uIHtcclxuXHRvcGFjaXR5OiAwLjA3O1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDA7XHJcblx0bGVmdDogNTAlO1xyXG5cdHJpZ2h0OiAwO1xyXG5cdGJvdHRvbTogMDtcclxuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuXHR6LWluZGV4OiAwO1xyXG59XHJcbi5zdmctbWFpbi1pY29uX2Fib3V0IHtcclxuXHR3aWR0aDogODAlO1xyXG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0zMCUpO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogNzAlO1xyXG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTQwJSk7XHJcblx0fVxyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogNTAlO1xyXG5cdH1cclxufVxyXG5cclxuLnN2Zy1tYWluLWljb25fd29ya3Mge1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdGhlaWdodDogcmVtKDE5MCk7XHJcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTI4JSk7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdGhlaWdodDogOC4xMjVyZW07XHJcblx0fVxyXG59XHJcblxyXG4uc3ZnX3NreXBlLCAuc3ZnX21haWwsIC5zdmdfcGhvbmUsIC5zdmdfbWFwLW1hcmtlciB7XHJcblx0Y29sb3I6ICRicmFuZC1jb2xvcjtcclxuXHRmbGV4LWJhc2lzOiAyMCU7XHJcblx0dHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xyXG5cdCY6aG92ZXIge1xyXG5cdFx0b3BhY2l0eTogMC43O1xyXG5cdH1cclxufVxyXG5cclxuLnN2Z19za3lwZSB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMjQpLCByZW0oMjQpKTtcclxufVxyXG4uc3ZnX21haWwge1xyXG5cdEBpbmNsdWRlIHNpemUoMS41cmVtLCAxLjJyZW0pO1xyXG59XHJcbi5zdmdfcGhvbmUge1xyXG5cdEBpbmNsdWRlIHNpemUocmVtKDIwKSwgcmVtKDE5KSk7XHJcblxyXG59XHJcbi5zdmdfbWFwLW1hcmtlciB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMTkpLCByZW0oMjQpKTtcclxufVxyXG4uc3ZnX2xvZ2luIHtcclxuXHRAaW5jbHVkZSBzaXplKHJlbSgxNSksIHJlbSgxNykpO1xyXG5cdCBjb2xvcjogcmdiKDE5NiwgMjAzLCAyMDUpO1xyXG59XHJcbi5zdmdfbGluayB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMjApLCByZW0oMTkpKTtcclxuXHRtYXJnaW4tcmlnaHQ6IHJlbSg4KTtcclxufVxyXG4uc3ZnX3NsaWRlci1hcnJvdyB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oNDUpLCByZW0oMjgpKTtcclxuXHRib3gtc2hhZG93OiAwcHggMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNik7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0b3BhY2l0eTogMC43O1xyXG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19zdmcuc2NzcyIsIi5oLXRpdGxlLXNlY3Rpb24ge1xyXG5cdGZvbnQtZmFtaWx5OiAnYmVybmllcic7XHJcblx0Zm9udC1zaXplOiByZW0oNjMpO1xyXG5cdGxldHRlci1zcGFjaW5nOiAwLjJyZW07XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcblx0bWFyZ2luOiAwIHJlbSgxNyk7XHJcblx0bGluZS1oZWlnaHQ6IDEuMDU7XHJcblx0Zm9udC13ZWlnaHQ6IDUwMDtcclxuXHRjb2xvcjogJHRpdGxlLWNvbG9yO1xyXG5cclxuXHQmOmZpcnN0LWxldHRlciB7XHJcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdH1cclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0Zm9udC1zaXplOiByZW0oNDkpO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0Zm9udC1zaXplOiByZW0oMzUpO1xyXG5cdH1cclxufVxyXG5cclxuLmgtdGl0bGUtc2VjdGlvbl9jb2xvciB7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcbn1cclxuXHJcbi5oLXRpdGxlLWFydGljbGUge1xyXG5cdGZvbnQtZmFtaWx5OiAnYmVybmllcic7XHJcblx0Zm9udC1zaXplOiByZW0oMzUpO1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG5cdG1hcmdpbjogMCByZW0oMTYpO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjU7XHJcblx0Zm9udC13ZWlnaHQ6IDUwMDtcclxuXHRjb2xvcjogJHRleHQtY29sb3I7XHJcblxyXG5cdCY6Zmlyc3QtbGV0dGVyIHtcclxuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0fVxyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHRmb250LXNpemU6IHJlbSgyMik7XHJcblx0fVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2gtdGl0bGUuc2NzcyIsIi5jLW5hdl9fbGlzdCB7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHR3aWR0aDogODAlO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0QGluY2x1ZGUgcy1tb2JpbGUge1xyXG5cdFx0d2lkdGg6IDkyJTtcclxuXHR9XHJcbn1cclxuXHJcbi5jLW5hdl9faXRlbSB7XHJcblx0ZmxleC1ncm93OiAxO1xyXG59XHJcblxyXG4uYy1uYXZfX2xpbmsge1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRmb250LXNpemU6IChyZW0oMTcpKTtcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHR0cmFuc2l0aW9uOiBjb2xvciAwLjRzO1xyXG5cdCY6OmZpcnN0LWxldHRlciB7XHJcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdH1cclxuXHQmOmhvdmVyIHtcclxuXHRcdGNvbG9yOiAkYnJhbmQtY29sb3I7XHJcblx0fVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2MtbmF2LnNjc3MiLCIuYy1jb3B5IHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0JiBhIHtcclxuXHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdH1cclxuXHQmIGE6aG92ZXIge1xyXG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdH1cclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0ZmxleC13cmFwOiB3cmFwO1xyXG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdH1cclxufVxyXG5cclxuLmMtY29weV9pdGVtIHtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0Zm9udC13ZWlnaHQ6IDMwMDtcclxuXHRmb250LXNpemU6IHJlbSgxNik7XHJcblx0bGluZS1oZWlnaHQ6IDYuMjg7XHJcblx0XHJcblx0JjphZnRlciB7XHJcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0XHRjb250ZW50OiAnfCc7XHJcblx0XHRtYXJnaW46IDAgMC4zcmVtO1xyXG5cdFx0Zm9udC1zaXplOiByZW0oMTYpO1xyXG5cdFx0Zm9udC13ZWlnaHQ6IDMwMDtcclxuXHR9XHJcblx0JjpsYXN0LWNoaWxkOmFmdGVyIHtcclxuXHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0fVxyXG5cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHRcdCY6Zmlyc3QtY2hpbGQge1xyXG5cdFx0XHR3aWR0aDogMTAwJTtcclxuXHRcdH1cclxuXHRcdCY6Zmlyc3QtY2hpbGQ6YWZ0ZXIge1xyXG5cdFx0XHRkaXNwbGF5OiBub25lO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4uYy1jb3B5X2Zvb3RlciB7XHJcblx0d2lkdGg6IDUwJTtcclxuXHRoZWlnaHQ6IDUwJTtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogODAlO1xyXG5cdFx0aGVpZ2h0OiAyMiU7XHJcblx0XHRvcmRlcjogNDtcclxuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0d2lkdGg6IDEwMCU7XHJcblx0fVxyXG5cdCYgLmMtY29weV9pdGVtIHtcclxuXHRcdGNvbG9yOiByZ2JhKCRwcmltYXJ5Q29sb3IsIDAuNSk7XHJcblx0fVxyXG5cdCYgYSB7XHJcblx0XHRvcGFjaXR5OiAwLjU7XHJcblx0fVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2MtY29weS5zY3NzIiwiLyohIEdlbmVyYXRlZCBieSBGb250IFNxdWlycmVsIChodHRwczovL3d3dy5mb250c3F1aXJyZWwuY29tKSBvbiBNYXJjaCA4LCAyMDE4ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdiZXJuaWVyX2Rpc3RyZXNzZWQnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2Jlcm5pZXIvYmVybmllcmRpc3RyZXNzZWQtcmVndWxhci13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJkaXN0cmVzc2VkLXJlZ3VsYXItd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdiZXJuaWVyJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJyZWd1bGFyLXJlZ3VsYXItd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvYmVybmllci9iZXJuaWVycmVndWxhci1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnYmVybmllcl9zaGFkZSc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvYmVybmllci9iZXJuaWVyc2hhZGUtcmVndWxhci13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJzaGFkZS1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWJvbGQtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvcm9ib3RvL3JvYm90by1ib2xkLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogOTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWJvbGRpdGFsaWMtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvcm9ib3RvL3JvYm90by1ib2xkaXRhbGljLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogOTAwO1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWl0YWxpYy13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWl0YWxpYy13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ3JvYm90byc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvcm9ib3RvL3JvYm90by1saWdodC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0LXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0aXRhbGljLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbGlnaHRpdGFsaWMtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbWVkaXVtLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbWVkaXVtLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLW1lZGl1bWl0YWxpYy13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLW1lZGl1bWl0YWxpYy13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ3JvYm90byc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvcm9ib3RvL3JvYm90by1yZWd1bGFyLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL3JvYm90by9yb2JvdG8tcmVndWxhci13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbi8qKlxuICogU2V0IHVwIGEgZGVjZW50IGJveCBtb2RlbCBvbiB0aGUgcm9vdCBlbGVtZW50XG4gKi9cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmJvZHksIGh0bWwge1xuICBjb2xvcjogIzQ1NWE2NDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWRlZDtcbiAgZm9udC1mYW1pbHk6IFwicm9ib3RvXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjQyNXJlbTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgZm9udC1kaXNwbGF5OiBvcHRpb25hbDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4taGVpZ2h0OiAxMDB2aDsgfVxuICBib2R5LmFib3V0IC5sLWZvb3RlciwgaHRtbC5hYm91dCAubC1mb290ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxODAwcHgpIHtcbiAgICBib2R5LCBodG1sIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjksIDkwLCAxMDAsIDAuMyk7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkgYW5kIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgYm9keSwgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDE1cHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIGJvZHksIGh0bWwge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBib2R5LCBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgYm9keSwgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuXG5ib2R5Lmhlcm8sIGh0bWwuaGVybyB7XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWluLWhlaWdodDogNjI4cHg7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBib2R5Lmhlcm8sIGh0bWwuaGVybyB7XG4gICAgICBtaW4taGVpZ2h0OiAxMDB2aDsgfSB9XG5cbi8qKlxuICogTWFrZSBhbGwgZWxlbWVudHMgZnJvbSB0aGUgRE9NIGluaGVyaXQgZnJvbSB0aGUgcGFyZW50IGJveC1zaXppbmdcbiAqIFNpbmNlIGAqYCBoYXMgYSBzcGVjaWZpY2l0eSBvZiAwLCBpdCBkb2VzIG5vdCBvdmVycmlkZSB0aGUgYGh0bWxgIHZhbHVlXG4gKiBtYWtpbmcgYWxsIGVsZW1lbnRzIGluaGVyaXRpbmcgZnJvbSB0aGUgcm9vdCBib3gtc2l6aW5nIHZhbHVlXG4gKiBTZWU6IGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vaW5oZXJpdGluZy1ib3gtc2l6aW5nLXByb2JhYmx5LXNsaWdodGx5LWJldHRlci1iZXN0LXByYWN0aWNlL1xuICovXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBCYXNpYyBzdHlsZXMgZm9yIGxpbmtzXG4gKi9cbmEge1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG51bCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG51bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuaDEsIGgyLCBoMywgcCB7XG4gIG1hcmdpbjogMDsgfVxuXG5zdmcge1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG4gIHN0cm9rZTogY3VycmVudENvbG9yOyB9XG5cbmJ1dHRvbiwgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEge1xuICBmb250LWZhbWlseTogXCJyb2JvdG9cIiwgXCJBcmlhbFwiLCBzYW5zLXNlcmlmOyB9XG5cbmltZyB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLmdvb2dsZS1tYXAgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBDbGVhciBpbm5lciBmbG9hdHNcbiAqL1xuLmNsZWFyZml4OjphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogdGFibGU7IH1cblxuLyoqXG4gKiBNYWluIGNvbnRlbnQgY29udGFpbmVyc1xuICogMS4gTWFrZSB0aGUgY29udGFpbmVyIGZ1bGwtd2lkdGggd2l0aCBhIG1heGltdW0gd2lkdGhcbiAqIDIuIENlbnRlciBpdCBpbiB0aGUgdmlld3BvcnRcbiAqIDMuIExlYXZlIHNvbWUgc3BhY2Ugb24gdGhlIGVkZ2VzLCBlc3BlY2lhbGx5IHZhbHVhYmxlIG9uIHNtYWxsIHNjcmVlbnNcbiAqL1xuLyoqXG4gKiBIaWRlIHRleHQgd2hpbGUgbWFraW5nIGl0IHJlYWRhYmxlIGZvciBzY3JlZW4gcmVhZGVyc1xuICogMS4gTmVlZGVkIGluIFdlYktpdC1iYXNlZCBicm93c2VycyBiZWNhdXNlIG9mIGFuIGltcGxlbWVudGF0aW9uIGJ1ZztcbiAqICAgIFNlZTogaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ1NzE0NlxuICovXG4uaGlkZS10ZXh0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcGFkZGluZzogMDtcbiAgLyogMSAqL1xuICB0ZXh0LWluZGVudDogMTAxJTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBIaWRlIGVsZW1lbnQgd2hpbGUgbWFraW5nIGl0IHJlYWRhYmxlIGZvciBzY3JlZW4gcmVhZGVyc1xuICogU2hhbWVsZXNzbHkgYm9ycm93ZWQgZnJvbSBIVE1MNUJvaWxlcnBsYXRlOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvYmxvYi9tYXN0ZXIvc3JjL2Nzcy9tYWluLmNzcyNMMTE5LUwxMzNcbiAqL1xuLnZpc3VhbGx5LWhpZGRlbiB7XG4gIGJvcmRlcjogMDtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgaGVpZ2h0OiAxcHg7XG4gIC8qIG1hcmdpbjogLTFweDsqL1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHJvdGF0ZV9sZWZ0Q2xvc2Uge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpOyB9IH1cblxuQGtleWZyYW1lcyByb3RhdGVfbGVmdENsb3NlIHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7IH1cbiAgdG8ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSgycHgsIDFweCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyByb3RhdGVfcmlnaHRDbG9zZSB7XG4gIGZyb20ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBub25lO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBub25lOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTsgfSB9XG5cbkBrZXlmcmFtZXMgcm90YXRlX3JpZ2h0Q2xvc2Uge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZSgycHgsIDFweCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZSgycHgsIDFweCk7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgc2NhbGVfY2VudGVyQ2xvc2Uge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWCgwLjAwMDIpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMC4wMDAyKTsgfSB9XG5cbkBrZXlmcmFtZXMgc2NhbGVfY2VudGVyQ2xvc2Uge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWCgwLjAwMDIpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMC4wMDAyKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyByb3RhdGVfbGVmdEhhbWJ1cmdlciB7XG4gIGZyb20ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSgycHgsIDFweCk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7IH0gfVxuXG5Aa2V5ZnJhbWVzIHJvdGF0ZV9sZWZ0SGFtYnVyZ2VyIHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyByb3RhdGVfcmlnaHRIYW1idXJnZXIge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7IH0gfVxuXG5Aa2V5ZnJhbWVzIHJvdGF0ZV9yaWdodEhhbWJ1cmdlciB7XG4gIGZyb20ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBzY2FsZV9jZW50ZXJIYW1idXJnZXIge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVYKDAuMDAwMik7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgwLjAwMDIpOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVYKDEuMSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxLjEpOyB9IH1cblxuQGtleWZyYW1lcyBzY2FsZV9jZW50ZXJIYW1idXJnZXIge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVYKDAuMDAwMik7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgwLjAwMDIpOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGVYKDEuMSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgxLjEpOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGJsb2dfdGFibGV0TmF2T3BlbiB7XG4gIGZyb20ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC03MiUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC03MiUpOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpOyB9IH1cblxuQGtleWZyYW1lcyBibG9nX3RhYmxldE5hdk9wZW4ge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNzIlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNzIlKTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBibG9nX3RhYmxldE5hdkNsb3NlIHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMC41JSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMC41JSk7IH0gfVxuXG5Aa2V5ZnJhbWVzIGJsb2dfdGFibGV0TmF2Q2xvc2Uge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwLjUlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwLjUlKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBvcGVuX2hhbWJ1cmdlcl9sZWZ0IHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfSB9XG5cbkBrZXlmcmFtZXMgb3Blbl9oYW1idXJnZXJfbGVmdCB7XG4gIGZyb20ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7IH1cbiAgdG8ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgb3Blbl9oYW1idXJnZXJfcmlnaHQge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfSB9XG5cbkBrZXlmcmFtZXMgb3Blbl9oYW1idXJnZXJfcmlnaHQge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBjbG9zZV9oYW1idXJnZXJfbGVmdCB7XG4gIGZyb20ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7IH1cbiAgdG8ge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7IH0gfVxuXG5Aa2V5ZnJhbWVzIGNsb3NlX2hhbWJ1cmdlcl9sZWZ0IHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsgfSB9XG5cbkAtd2Via2l0LWtleWZyYW1lcyBjbG9zZV9oYW1idXJnZXJfcmlnaHQge1xuICBmcm9tIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpOyB9XG4gIHRvIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTsgfSB9XG5cbkBrZXlmcmFtZXMgY2xvc2VfaGFtYnVyZ2VyX3JpZ2h0IHtcbiAgZnJvbSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDAlKTsgfVxuICB0byB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgdG9fdmlzaWJsZSB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7IH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5Aa2V5ZnJhbWVzIHRvX3Zpc2libGUge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHRvX3VudmlzaWJsZSB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG5Aa2V5ZnJhbWVzIHRvX3VudmlzaWJsZSB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgYmdfdG9fY29sb3Ige1xuICBmcm9tIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDE5MSwgMTY1LCAwKTsgfVxuICB0byB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAxOTEsIDE2NSwgMC44Nyk7IH0gfVxuXG5Aa2V5ZnJhbWVzIGJnX3RvX2NvbG9yIHtcbiAgZnJvbSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAxOTEsIDE2NSwgMCk7IH1cbiAgdG8ge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMTkxLCAxNjUsIDAuODcpOyB9IH1cblxuQC13ZWJraXQta2V5ZnJhbWVzIGJnX3RvX3RyYW5zcGFyZW50IHtcbiAgZnJvbSB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAxOTEsIDE2NSwgMC44Nyk7IH1cbiAgdG8ge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMTkxLCAxNjUsIDApOyB9IH1cblxuQGtleWZyYW1lcyBiZ190b190cmFuc3BhcmVudCB7XG4gIGZyb20ge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMTkxLCAxNjUsIDAuODcpOyB9XG4gIHRvIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDE5MSwgMTY1LCAwKTsgfSB9XG5cbi5sLXdyYXBwZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWluLWhlaWdodDogMTAwdmg7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTMwMXB4KSB7XG4gICAgLmwtd3JhcHBlciB7XG4gICAgICBtaW4taGVpZ2h0OiA2NTBweDsgfSB9XG5cbiNsb2FkZXItd3JhcHBlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB6LWluZGV4OiAxMDAwO1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2VzL2RlY29yL2JnL2JnX3ByZWxvYWRlci5qcGcpIGNlbnRlci9jb3ZlciBuby1yZXBlYXQ7IH1cblxuI2xvYWRlciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDUwJTtcbiAgdG9wOiA1MCU7XG4gIHdpZHRoOiA5cmVtO1xuICBoZWlnaHQ6IDlyZW07XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHotaW5kZXg6IDEwMDE7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAjbG9hZGVyIGNpcmNsZSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgY2VudGVyO1xuICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGNlbnRlcjtcbiAgICBzdHJva2Utd2lkdGg6IDQ7XG4gICAgb3BhY2l0eTogMDsgfVxuICAjbG9hZGVyIGNpcmNsZSNiaWdDaXJjbGUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTExNWRlZyk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTE1ZGVnKTsgfVxuICAjbG9hZGVyIGNpcmNsZSNtaWRkbGVDaXJjbGUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTEwNWRlZyk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTA1ZGVnKTsgfVxuICAjbG9hZGVyIGNpcmNsZSNzbWFsbENpcmNsZSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTsgfVxuXG4ubG9hZGVyX190ZXh0IHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuXG4jbG9hZGVyLXdyYXBwZXIgLmxvYWRlci1zZWN0aW9uIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA1MSU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAxOTEsIDE2NSwgMCk7XG4gIHotaW5kZXg6IDEwMDA7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTsgfVxuXG4jbG9hZGVyLXdyYXBwZXIgLmxvYWRlci1zZWN0aW9uLnNlY3Rpb24tbGVmdCB7XG4gIGxlZnQ6IDA7IH1cblxuI2xvYWRlci13cmFwcGVyIC5sb2FkZXItc2VjdGlvbi5zZWN0aW9uLXJpZ2h0IHtcbiAgcmlnaHQ6IDA7IH1cblxuLyogTG9hZGVkICovXG4ubG9hZGVkICNsb2FkZXItd3JhcHBlciAubG9hZGVyLXNlY3Rpb24uc2VjdGlvbi1sZWZ0IHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gIHRyYW5zaXRpb246IGFsbCAwLjdzIDAuM3MgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpLCBiYWNrZ3JvdW5kIDBzIDBzIGxpbmVhcjtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAxOTEsIDE2NSwgMC4zKTsgfVxuXG4ubG9hZGVkICNsb2FkZXItd3JhcHBlciAubG9hZGVyLXNlY3Rpb24uc2VjdGlvbi1yaWdodCB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuN3MgMC4zcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSksIGJhY2tncm91bmQgMHMgMHMgbGluZWFyO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDE5MSwgMTY1LCAwLjMpOyB9XG5cbi5sb2FkZWQgI2xvYWRlciB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2Utb3V0OyB9XG5cbi5sb2FkZWQgI2xvYWRlci13cmFwcGVyIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgMXMgZWFzZS1vdXQ7IH1cblxuLmwtc2VjdGlvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiA2MjhweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEzMDFweCkge1xuICAgIC5sLXNlY3Rpb24ge1xuICAgICAgbWluLWhlaWdodDogNjUwcHg7XG4gICAgICBtYXgtd2lkdGg6IDExMi41cmVtO1xuICAgICAgbWFyZ2luOiBhdXRvOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubC1zZWN0aW9uIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDEwMHZoOyB9IH1cblxuLmwtbGFzdCB7XG4gIGhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cblxuLmwtbGF5b3V0LWZpcnN0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cblxuLmwtZmVlZHMge1xuICBoZWlnaHQ6IDEyODBweDtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL2RlY29yL2JnL2ZlZWRzX2JnLnBuZ1wiKSBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7IH1cblxuLmwtc2Nyb2xsLXBhcmFsbGF4LWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQ6ICM5QUJEQkU7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwcHg7XG4gIGJvdHRvbTogMDtcbiAgLXdlYmtpdC1wZXJzcGVjdGl2ZTogMTAwcHg7XG4gICAgICAgICAgcGVyc3BlY3RpdmU6IDEwMHB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmwtc2Nyb2xsLXBhcmFsbGF4LWNvbnRhaW5lciB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1hZ2VzL2RlY29yL2JnL21vdW50YWlucy5qcGcpO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAzMDAlIGF1dG87XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbiAgICAgIHotaW5kZXg6IDA7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5sLXNjcm9sbC1wYXJhbGxheC1jb250YWluZXIge1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAzMzAlIGF1dG87IH0gfVxuXG4ubC1zY3JvbGwtcGFyYWxsYXhfX2xheWVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IC0xMDBweDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgei1pbmRleDogLTE7IH1cbiAgLmwtc2Nyb2xsLXBhcmFsbGF4X19sYXllcjpmaXJzdC1jaGlsZCAubC1zY3JvbGwtcGFyYWxsYXhfX2ltZyB7XG4gICAgdG9wOiAwOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmwtc2Nyb2xsLXBhcmFsbGF4X19sYXllciB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmwtc2Nyb2xsLXBhcmFsbGF4X19pbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIGJvdHRvbTogMDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLXNjcm9sbC1wYXJhbGxheF9faW1nIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4ucGFyYWxsYXhfX2NvbnRlbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTAwJTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4ubC1zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCgxMCkge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwcHgpIHNjYWxlKDEpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwcHgpIHNjYWxlKDEpOyB9XG5cbi5sLXNjcm9sbC1wYXJhbGxheF9fbGF5ZXI6bnRoLWNoaWxkKDkpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTUwcHgpIHNjYWxlKDEuNSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC01MHB4KSBzY2FsZSgxLjUpOyB9XG5cbi5sLXNjcm9sbC1wYXJhbGxheF9fbGF5ZXI6bnRoLWNoaWxkKDgpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTEwMHB4KSBzY2FsZSgyKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTEwMHB4KSBzY2FsZSgyKTsgfVxuXG4ubC1zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCg3KSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC0xNTBweCkgc2NhbGUoMi41KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTE1MHB4KSBzY2FsZSgyLjUpOyB9XG5cbi5sLXNjcm9sbC1wYXJhbGxheF9fbGF5ZXI6bnRoLWNoaWxkKDYpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTIwMHB4KSBzY2FsZSgzKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTIwMHB4KSBzY2FsZSgzKTsgfVxuXG4ubC1zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCg1KSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC0yNTBweCkgc2NhbGUoMy41KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTI1MHB4KSBzY2FsZSgzLjUpOyB9XG5cbi5sLXNjcm9sbC1wYXJhbGxheF9fbGF5ZXI6bnRoLWNoaWxkKDQpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTMwMHB4KSBzY2FsZSg0KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTMwMHB4KSBzY2FsZSg0KTsgfVxuXG4ubC1zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCgzKSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC0zNTBweCkgc2NhbGUoNC41KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTM1MHB4KSBzY2FsZSg0LjUpOyB9XG5cbi5sLXNjcm9sbC1wYXJhbGxheF9fbGF5ZXI6bnRoLWNoaWxkKDIpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTQwMHB4KSBzY2FsZSg1KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTQwMHB4KSBzY2FsZSg1KTsgfVxuXG4ubC1zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCgxKSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC00NTBweCkgc2NhbGUoNS41KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTQ1MHB4KSBzY2FsZSg1LjUpOyB9XG5cbi5zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCgxMCkge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigwcHgpIHNjYWxlKDEpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwcHgpIHNjYWxlKDEpOyB9XG5cbi5zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCg5KSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC01MHB4KSBzY2FsZSgxLjUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigtNTBweCkgc2NhbGUoMS41KTsgfVxuXG4uc2Nyb2xsLXBhcmFsbGF4X19sYXllcjpudGgtY2hpbGQoOCkge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigtMTAwcHgpIHNjYWxlKDIpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigtMTAwcHgpIHNjYWxlKDIpOyB9XG5cbi5zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCg3KSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC0xNTBweCkgc2NhbGUoMi41KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTE1MHB4KSBzY2FsZSgyLjUpOyB9XG5cbi5zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCg2KSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC0yMDBweCkgc2NhbGUoMyk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC0yMDBweCkgc2NhbGUoMyk7IH1cblxuLnNjcm9sbC1wYXJhbGxheF9fbGF5ZXI6bnRoLWNoaWxkKDUpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTI1MHB4KSBzY2FsZSgzLjUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigtMjUwcHgpIHNjYWxlKDMuNSk7IH1cblxuLnNjcm9sbC1wYXJhbGxheF9fbGF5ZXI6bnRoLWNoaWxkKDQpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTMwMHB4KSBzY2FsZSg0KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTMwMHB4KSBzY2FsZSg0KTsgfVxuXG4uc2Nyb2xsLXBhcmFsbGF4X19sYXllcjpudGgtY2hpbGQoMykge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigtMzUwcHgpIHNjYWxlKDQuNSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC0zNTBweCkgc2NhbGUoNC41KTsgfVxuXG4uc2Nyb2xsLXBhcmFsbGF4X19sYXllcjpudGgtY2hpbGQoMikge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWigtNDAwcHgpIHNjYWxlKDUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigtNDAwcHgpIHNjYWxlKDUpOyB9XG5cbi5zY3JvbGwtcGFyYWxsYXhfX2xheWVyOm50aC1jaGlsZCgxKSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVaKC00NTBweCkgc2NhbGUoNS41KTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooLTQ1MHB4KSBzY2FsZSg1LjUpOyB9XG5cbi5sLWhlcm8ge1xuICBoZWlnaHQ6IDEwMHZoOyB9XG4gIC5sLWhlcm86YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMSwgMTAyLCAxMTQsIDAuMyk7XG4gICAgei1pbmRleDogMDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMzAxcHgpIHtcbiAgICAubC1oZXJvIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDY1MHB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAubC1oZXJvIHtcbiAgICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsOyB9IH1cblxuLmwtaGVyb19ibG9nIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDsgfVxuICAubC1oZXJvX2Jsb2cgLmwtbWFpbl9fdG9wIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiA3MCU7IH1cbiAgLmwtaGVyb19ibG9nIC5wYXJhbGxheF9fY29udGVudCB7XG4gICAgdG9wOiA3MiU7IH1cbiAgLmwtaGVyb19ibG9nIC5sLWhlcm9fX2RldmVsb3Age1xuICAgIHRvcDogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDUwJSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCA1MCUpOyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTgwMHB4KSB7XG4gICAgICAubC1oZXJvX2Jsb2cgLmwtaGVyb19fZGV2ZWxvcCB7XG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMTUwJSk7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMTUwJSk7IH0gfVxuXG4ubC1oZXJvX19kZXZlbG9wIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB6LWluZGV4OiAxNTsgfVxuXG4ubC1oZXJvX19zb2NpYWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE1O1xuICBsZWZ0OiAxMCU7XG4gIHRvcDogMTAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogMTIlO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE4MDBweCkge1xuICAgIC5sLWhlcm9fX3NvY2lhbCB7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtODAwcHgpO1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTgwMHB4KTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk5M3B4KSBhbmQgKG1heC13aWR0aDogMTMwMHB4KSB7XG4gICAgLmwtaGVyb19fc29jaWFsIHtcbiAgICAgIHdpZHRoOiAxNiU7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkgYW5kIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgLmwtaGVyb19fc29jaWFsIHtcbiAgICAgIHdpZHRoOiAxNiU7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLWhlcm9fX3NvY2lhbCB7XG4gICAgICB3aWR0aDogMjAlO1xuICAgICAgdG9wOiA1JTtcbiAgICAgIGxlZnQ6IDUlOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAubC1oZXJvX19zb2NpYWwge1xuICAgICAgd2lkdGg6IDMwJTtcbiAgICAgIHRvcDogNCU7XG4gICAgICBsZWZ0OiA0JTsgfSB9XG5cbi5sLWhlcm9fX3NvY2lhbC1pdGVtIHtcbiAgaGVpZ2h0OiAxLjM3NXJlbTsgfVxuXG4ubC1oZXJvX19zb2NpYWwtbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogd2hpdGU7IH1cbiAgLmwtaGVyb19fc29jaWFsLWxpbms6aG92ZXIgLnN2Zy11c2Uge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgLmwtaGVyb19fc29jaWFsLWxpbms6dmlzaXRlZCAuc3ZnLXVzZSB7XG4gICAgb3BhY2l0eTogMC41OyB9XG5cbi5zdmctdXNlIHtcbiAgd2lkdGg6IDEuNzVyZW07XG4gIGhlaWdodDogMS4zNzVyZW07XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cztcbiAgb3BhY2l0eTogMC41OyB9XG5cbi5sLWNvbnRhaW5lciB7XG4gIHdpZHRoOiA5NSU7XG4gIGhlaWdodDogOS4xODc1cmVtO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW46IGF1dG87XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtZmxleC13cmFwOiB3cmFwO1xuICAgICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubC1jb250YWluZXIge1xuICAgICAgaGVpZ2h0OiAxNC43NXJlbTtcbiAgICAgIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAubC1jb250YWluZXIge1xuICAgICAgaGVpZ2h0OiAxNi44NzVyZW07IH0gfVxuXG4ubC1oYW1idXJnZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTAlO1xuICByaWdodDogMTAlO1xuICB6LWluZGV4OiAxNTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLWhhbWJ1cmdlciB7XG4gICAgICByaWdodDogNSU7XG4gICAgICB0b3A6IDUlOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAubC1oYW1idXJnZXIge1xuICAgICAgcmlnaHQ6IDQlO1xuICAgICAgdG9wOiA0JTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE4MDBweCkge1xuICAgIC5sLWhhbWJ1cmdlciB7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCg4MDBweCk7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCg4MDBweCk7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLWhhbWJ1cmdlcl93b3JrcyB7XG4gICAgICB0b3A6IDIuNSU7IH0gfVxuXG4ubC1tYWluIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGMEVGRTk7IH1cblxuLmwtbWFpbl9fdG9wIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxMDAlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogMDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyB9XG5cbi5sLW1haW5fX3dyYXBwZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogYmFzZWxpbmU7XG4gICAgICAtbXMtZmxleC1hbGlnbjogYmFzZWxpbmU7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEzMDFweCkge1xuICAgIC5sLW1haW5fX3dyYXBwZXIge1xuICAgICAgbWF4LXdpZHRoOiAxMTIuNXJlbTtcbiAgICAgIG1hcmdpbjogYXV0bzsgfSB9XG4gIC5sLW1haW5fX3dyYXBwZXIubC1tYWluX2Jsb2cge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWY4ZjA7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgLmwtbWFpbl9fd3JhcHBlci5sLW1haW5fd29ya3Mge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5sLW1haW5fX3dyYXBwZXIubC1tYWluX2Fib3V0IHtcbiAgICBiYWNrZ3JvdW5kOiAjZjBlZmU5O1xuICAgIC8qIE9sZCBicm93c2VycyAqL1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2YwZWZlOSAwJSwgI2VmZWJlMCA1MCUsICNlZmViZTAgMTAwJSk7XG4gICAgLyogRkYzLjYtMTUgKi9cbiAgICAvKiBDaHJvbWUxMC0yNSxTYWZhcmk1LjEtNiAqL1xuICAgIC8qIFczQywgSUUxMCssIEZGMTYrLCBDaHJvbWUyNissIE9wZXJhMTIrLCBTYWZhcmk3KyAqL1xuICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KCBzdGFydENvbG9yc3RyPScjZjBlZmU5JywgZW5kQ29sb3JzdHI9JyNlZmViZTAnLEdyYWRpZW50VHlwZT0xICk7XG4gICAgLyogSUU2LTkgKi8gfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAubC1tYWluX193cmFwcGVyLmwtbWFpbl9hYm91dCB7XG4gICAgICAgIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfSB9XG5cbi5sLW1haW5fX2hlYWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEyLjE4NzVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWY4ZjA7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5sLW1haW5fX2hlYWRlciB7XG4gICAgICBoZWlnaHQ6IDlyZW07IH0gfVxuXG4ubC1tYWluX19oZWFkZXItdGl0bGUge1xuICB3aWR0aDogNDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvbG9yOiAjMzczZTQyO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLmwtbWFpbl9faGVhZGVyLXRpdGxlIC5oLXRpdGxlLXNlY3Rpb24ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAubC1tYWluX19oZWFkZXItdGl0bGU6OmZpcnN0LWxldHRlciB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLW1haW5fX2hlYWRlci10aXRsZSB7XG4gICAgICB3aWR0aDogNjMlOyB9IH1cblxuLmwtbWFpbl9fc2xpZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNzUwcHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAzJTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLW1haW5fX3NsaWRlciB7XG4gICAgICBoZWlnaHQ6IDEwMzBweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmwtbWFpbl9fc2xpZGVyIHtcbiAgICAgIGhlaWdodDogNTg1cHg7IH0gfVxuXG4ubC1tYWluX19jb2x1bW4tb25lLCAubC1tYWluX19jb2x1bW4tdHdvIHtcbiAgLXdlYmtpdC1mbGV4OiAxO1xuICAgICAgLW1zLWZsZXg6IDE7XG4gICAgICAgICAgZmxleDogMTtcbiAgd2lkdGg6IDUwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmwtbWFpbl9fY29sdW1uLW9uZSwgLmwtbWFpbl9fY29sdW1uLXR3byB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5sLW1haW5fX2NvbHVtbi1vbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRkU5OyB9XG5cbi5sLW1haW5fX2NvbHVtbi10d28ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUZFQkUwOyB9XG5cbi5sLWZvb3RlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgbWluLWhlaWdodDogOS4xODc1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDU1LCA2MiwgNjYsIDAuODUpO1xuICBwYWRkaW5nOiAwLjUlIDA7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5sLWZvb3RlcjphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogNTAlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmwtZm9vdGVyIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDE0Ljc1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAubC1mb290ZXIge1xuICAgICAgbWluLWhlaWdodDogMTYuODc1cmVtOyB9IH1cblxuLmwtZm9vdGVyX19uYXYge1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDUwJTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmwtZm9vdGVyX19uYXYge1xuICAgICAgd2lkdGg6IDkwJTtcbiAgICAgIGhlaWdodDogMjIlO1xuICAgICAgLXdlYmtpdC1vcmRlcjogMTtcbiAgICAgICAgICAtbXMtZmxleC1vcmRlcjogMTtcbiAgICAgICAgICAgICAgb3JkZXI6IDE7XG4gICAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5sLWZvb3Rlcl9fbmF2IHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmwtZm9vdGVyX190ZXh0IHtcbiAgd2lkdGg6IDUwJTtcbiAgaGVpZ2h0OiA1MCU7XG4gIGZvbnQtc2l6ZTogMS4wNjI1cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xuICBsaW5lLWhlaWdodDogMS41O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLmwtZm9vdGVyX190ZXh0IGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBvcGFjaXR5OiAwLjU7IH1cbiAgLmwtZm9vdGVyX190ZXh0IGE6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLWZvb3Rlcl9fdGV4dCB7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgaGVpZ2h0OiAyOCU7XG4gICAgICAtd2Via2l0LW9yZGVyOiAzO1xuICAgICAgICAgIC1tcy1mbGV4LW9yZGVyOiAzO1xuICAgICAgICAgICAgICBvcmRlcjogMztcbiAgICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmwtZm9vdGVyX190ZXh0IHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmwtZm9vdGVyX19zb2NpYWwge1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDUwJTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLWZvb3Rlcl9fc29jaWFsIHtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBoZWlnaHQ6IDI4JTtcbiAgICAgIC13ZWJraXQtb3JkZXI6IDI7XG4gICAgICAgICAgLW1zLWZsZXgtb3JkZXI6IDI7XG4gICAgICAgICAgICAgIG9yZGVyOiAyO1xuICAgICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAubC1mb290ZXJfX3NvY2lhbCB7XG4gICAgICB3aWR0aDogOTAlOyB9IH1cblxuLmwtZm9vdGVyX19zb2NpYWwtaXRlbSB7XG4gIHdpZHRoOiAyLjFyZW07XG4gIGhlaWdodDogMi4xcmVtO1xuICBib3JkZXI6IDAuNXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBtYXJnaW4tcmlnaHQ6IDIlO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAubC1mb290ZXJfX3NvY2lhbC1pdGVtIHtcbiAgICAgIG1hcmdpbi1yaWdodDogNCU7IH0gfVxuICAubC1mb290ZXJfX3NvY2lhbC1pdGVtOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuODUpOyB9XG4gICAgLmwtZm9vdGVyX19zb2NpYWwtaXRlbTpob3ZlciAubC1mb290ZXJfX3NvY2lhbC1saW5rIHtcbiAgICAgIGNvbG9yOiAjNDU1YTY0OyB9XG4gICAgLmwtZm9vdGVyX19zb2NpYWwtaXRlbTpob3ZlciAuc3ZnLXVzZSB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG5cbi5sLWZvb3Rlcl9fc29jaWFsLWxpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzOyB9XG4gIC5sLWZvb3Rlcl9fc29jaWFsLWxpbmsgLnN2Zy11c2Uge1xuICAgIHdpZHRoOiAxLjJyZW07XG4gICAgaGVpZ2h0OiAxLjU1cmVtO1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7IH1cblxuLm92ZXJsYXkge1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgei1pbmRleDogOTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAxOTEsIDE2NSwgMCk7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTgwMHB4KSB7XG4gICAgLm92ZXJsYXkge1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgIHdpZHRoOiAxODEzcHg7IH0gfVxuXG4ub3ZlcmxheSAub3ZlcmxheS1zZWN0aW9uIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA1MC4zJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDE5MSwgMTY1LCAwLjg3KTtcbiAgei1pbmRleDogLTE7XG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07IH1cblxuLm92ZXJsYXkgLm92ZXJsYXktc2VjdGlvbi5zZWN0aW9uLWxlZnQge1xuICBsZWZ0OiAwO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTsgfVxuXG4ub3ZlcmxheSAub3ZlcmxheS1zZWN0aW9uLnNlY3Rpb24tcmlnaHQge1xuICByaWdodDogMDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpOyB9XG5cbi5vdmVybGF5IC5jLWhhbWJ1cmdlci1uYXZfX2xpc3Qge1xuICBvcGFjaXR5OiAwOyB9XG5cbi8qIHRvXyBvcGVuKi9cbi5vdmVybGF5LnRvX29wZW4ge1xuICAtd2Via2l0LWFuaW1hdGlvbjogYmdfdG9fY29sb3IgMC4zcyAwLjVzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTtcbiAgICAgICAgICBhbmltYXRpb246IGJnX3RvX2NvbG9yIDAuM3MgMC41cyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSk7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7IH1cblxuLm92ZXJsYXkudG9fb3BlbiAub3ZlcmxheS1zZWN0aW9uLnNlY3Rpb24tbGVmdCB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBvcGVuX2hhbWJ1cmdlcl9sZWZ0IDAuNXMgMHMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpLCB0b191bnZpc2libGUgMC4ycyAwLjZzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTtcbiAgICAgICAgICBhbmltYXRpb246IG9wZW5faGFtYnVyZ2VyX2xlZnQgMC41cyAwcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSksIHRvX3VudmlzaWJsZSAwLjJzIDAuNnMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyB9XG5cbi5vdmVybGF5LnRvX29wZW4gLm92ZXJsYXktc2VjdGlvbi5zZWN0aW9uLXJpZ2h0IHtcbiAgLXdlYmtpdC1hbmltYXRpb246IG9wZW5faGFtYnVyZ2VyX3JpZ2h0IDAuNXMgMHMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpLCB0b191bnZpc2libGUgMC4ycyAwLjZzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTtcbiAgICAgICAgICBhbmltYXRpb246IG9wZW5faGFtYnVyZ2VyX3JpZ2h0IDAuNXMgMHMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpLCB0b191bnZpc2libGUgMC4ycyAwLjZzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTtcbiAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuXG4ub3ZlcmxheS50b19vcGVuIC5jLWhhbWJ1cmdlci1uYXZfX2xpc3Qge1xuICAtd2Via2l0LWFuaW1hdGlvbjogdG9fdmlzaWJsZSAwLjFzIDAuNnMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpO1xuICAgICAgICAgIGFuaW1hdGlvbjogdG9fdmlzaWJsZSAwLjFzIDAuNnMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyB9XG5cbi8qdG9fY2xvc2UqL1xuLm92ZXJsYXkudG9fY2xvc2Uge1xuICAtd2Via2l0LWFuaW1hdGlvbjogYmdfdG9fdHJhbnNwYXJlbnQgMHMgMC4ycyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSk7XG4gICAgICAgICAgYW5pbWF0aW9uOiBiZ190b190cmFuc3BhcmVudCAwcyAwLjJzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTtcbiAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuXG4ub3ZlcmxheS50b19jbG9zZSAuYy1oYW1idXJnZXItbmF2X19saXN0IHtcbiAgLXdlYmtpdC1hbmltYXRpb246IHRvX3VudmlzaWJsZSAwLjJzIDBzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTtcbiAgICAgICAgICBhbmltYXRpb246IHRvX3VudmlzaWJsZSAwLjJzIDBzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKTtcbiAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuXG4ub3ZlcmxheS50b19jbG9zZSAub3ZlcmxheS1zZWN0aW9uLnNlY3Rpb24tbGVmdCB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBjbG9zZV9oYW1idXJnZXJfbGVmdCAwLjNzIDBzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKSwgdG9fdmlzaWJsZSAwcyAwcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSk7XG4gICAgICAgICAgYW5pbWF0aW9uOiBjbG9zZV9oYW1idXJnZXJfbGVmdCAwLjNzIDBzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKSwgdG9fdmlzaWJsZSAwcyAwcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSk7XG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7IH1cblxuLm92ZXJsYXkudG9fY2xvc2UgLm92ZXJsYXktc2VjdGlvbi5zZWN0aW9uLXJpZ2h0IHtcbiAgLXdlYmtpdC1hbmltYXRpb246IGNsb3NlX2hhbWJ1cmdlcl9yaWdodCAwLjNzIDBzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKSwgdG9fdmlzaWJsZSAwcyAwcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSk7XG4gICAgICAgICAgYW5pbWF0aW9uOiBjbG9zZV9oYW1idXJnZXJfcmlnaHQgMC4zcyAwcyBjdWJpYy1iZXppZXIoMC42NDUsIDAuMDQ1LCAwLjM1NSwgMSksIHRvX3Zpc2libGUgMHMgMHMgY3ViaWMtYmV6aWVyKDAuNjQ1LCAwLjA0NSwgMC4zNTUsIDEpO1xuICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyB9XG5cbi5jLWhhbWJ1cmdlci1uYXYge1xuICB3aWR0aDogMi41cmVtO1xuICBoZWlnaHQ6IDEuODc1cmVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmMtaGFtYnVyZ2VyLW5hdl9fdGFyZ2V0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7IH1cbiAgLmMtaGFtYnVyZ2VyLW5hdl9fdGFyZ2V0ICNmaXJzdExpbmUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogbGVmdCB0b3A7XG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IHRvcDtcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtOyB9XG4gIC5jLWhhbWJ1cmdlci1uYXZfX3RhcmdldCAjY2VudGVyTGluZSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgY2VudGVyO1xuICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGNlbnRlcjtcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtOyB9XG4gIC5jLWhhbWJ1cmdlci1uYXZfX3RhcmdldCAjbGFzdExpbmUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBib3R0b207XG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGJvdHRvbTtcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtOyB9XG4gIC5jLWhhbWJ1cmdlci1uYXZfX3RhcmdldC5hbmltYXRlICNmaXJzdExpbmUge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiByb3RhdGVfbGVmdENsb3NlIDAuM3MgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiByb3RhdGVfbGVmdENsb3NlIDAuM3MgbGluZWFyO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuICAuYy1oYW1idXJnZXItbmF2X190YXJnZXQuYW5pbWF0ZSAjY2VudGVyTGluZSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IHNjYWxlX2NlbnRlckNsb3NlIDAuM3MgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiBzY2FsZV9jZW50ZXJDbG9zZSAwLjNzIGxpbmVhcjtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7IH1cbiAgLmMtaGFtYnVyZ2VyLW5hdl9fdGFyZ2V0LmFuaW1hdGUgI2xhc3RMaW5lIHtcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogcm90YXRlX3JpZ2h0Q2xvc2UgMC4zcyBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb246IHJvdGF0ZV9yaWdodENsb3NlIDAuM3MgbGluZWFyO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuXG4uYy1oYW1idXJnZXItbmF2X19jbG9zZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMi41cmVtO1xuICBoZWlnaHQ6IDEuODc1cmVtO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDEwJTtcbiAgdG9wOiAxMCU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTgwMHB4KSB7XG4gICAgLmMtaGFtYnVyZ2VyLW5hdl9fY2xvc2Uge1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoODAwcHgpO1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoODAwcHgpOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuYy1oYW1idXJnZXItbmF2X19jbG9zZSB7XG4gICAgICByaWdodDogNSU7XG4gICAgICB0b3A6IDUlOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuYy1oYW1idXJnZXItbmF2X19jbG9zZSB7XG4gICAgICB0b3A6IDMlO1xuICAgICAgcmlnaHQ6IDQlOyB9IH1cbiAgLmMtaGFtYnVyZ2VyLW5hdl9fY2xvc2UgI2ZpcnN0TGluZSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IHRvcDtcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgdG9wO1xuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDJweCwgMXB4KTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpOyB9XG4gIC5jLWhhbWJ1cmdlci1uYXZfX2Nsb3NlICNjZW50ZXJMaW5lIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgY2VudGVyO1xuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWCgwLjAwMDIpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVgoMC4wMDAyKTsgfVxuICAuYy1oYW1idXJnZXItbmF2X19jbG9zZSAjbGFzdExpbmUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBib3R0b207XG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGJvdHRvbTtcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoMnB4LCAxcHgpOyB9XG4gIC5jLWhhbWJ1cmdlci1uYXZfX2Nsb3NlLmFuaW1hdGUgI2ZpcnN0TGluZSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IHJvdGF0ZV9sZWZ0SGFtYnVyZ2VyIDAuM3MgbGluZWFyO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiByb3RhdGVfbGVmdEhhbWJ1cmdlciAwLjNzIGxpbmVhcjtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7IH1cbiAgLmMtaGFtYnVyZ2VyLW5hdl9fY2xvc2UuYW5pbWF0ZSAjY2VudGVyTGluZSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IHJvdGF0ZV9jZW50ZXJIYW1idXJnZXIgMC4zcyBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb246IHJvdGF0ZV9jZW50ZXJIYW1idXJnZXIgMC4zcyBsaW5lYXI7XG4gICAgLXdlYmtpdC1hbmltYXRpb24tZGVsYXk6IDAuMjk1cztcbiAgICAgICAgICAgIGFuaW1hdGlvbi1kZWxheTogMC4yOTVzO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuICAuYy1oYW1idXJnZXItbmF2X19jbG9zZS5hbmltYXRlICNsYXN0TGluZSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IHJvdGF0ZV9yaWdodEhhbWJ1cmdlciAwLjNzIGxpbmVhcjtcbiAgICAgICAgICAgIGFuaW1hdGlvbjogcm90YXRlX3JpZ2h0SGFtYnVyZ2VyIDAuM3MgbGluZWFyO1xuICAgIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkczsgfVxuXG4uYy1oYW1idXJnZXItbmF2X19saXN0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5jLWhhbWJ1cmdlci1uYXZfX2l0ZW0ge1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbWFyZ2luLWJvdHRvbTogOCU7IH1cbiAgLmMtaGFtYnVyZ2VyLW5hdl9faXRlbSAuc3ZnX2Rhc2gge1xuICAgIG9wYWNpdHk6IDAuMjsgfVxuICAuYy1oYW1idXJnZXItbmF2X19pdGVtOmhvdmVyIC5zdmdfZGFzaCB7XG4gICAgb3BhY2l0eTogMC41OyB9XG5cbi5jLWRldmVsb3BlciB7XG4gIHdpZHRoOiAyMy43NXJlbTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5jLWRldmVsb3Blcl9faW1nLXdyYXAge1xuICB3aWR0aDogOC44MTI1cmVtO1xuICBoZWlnaHQ6IDguODEyNXJlbTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW4tYm90dG9tOiA0JTtcbiAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmMtZGV2ZWxvcGVyX19pbWctd3JhcCB7XG4gICAgICB3aWR0aDogOS4wNjI1cmVtO1xuICAgICAgaGVpZ2h0OiA5LjA2MjVyZW07IH0gfVxuXG4uYy1kZXZlbG9wZXJfX2ltZyB7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG4uYy1kZXZlbG9wZXJfX2NvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5jLWRldmVsb3BfYmxvZy1oZWFkZXIge1xuICBjb2xvcjogd2hpdGU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4uYy1kZXZlbG9wZXJfX2hlYWRlciB7XG4gIGZvbnQtc2l6ZTogMi4xODc1cmVtO1xuICBmb250LXdlaWdodDogNTAwO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW4tYm90dG9tOiAwLjMlO1xuICBjb2xvcjogd2hpdGU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuYy1kZXZlbG9wZXJfX2hlYWRlciB7XG4gICAgICBmb250LXNpemU6IDEuMzc1cmVtOyB9IH1cblxuLmMtZGV2ZWxvcGVyX19kZXNjIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXdlaWdodDogMzAwOyB9XG5cbi5jLWRldmVsb3Blcl9fZGVzY19ibG9nIHtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogNDAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5jLWJsb2cge1xuICAtd2Via2l0LWZsZXgtZ3JvdzogMTtcbiAgICAgIC1tcy1mbGV4LXBvc2l0aXZlOiAxO1xuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy10b3A6IDQlO1xuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IHN0cmV0Y2g7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7IH1cblxuLmMtYmxvZ19fYXNpZGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMS41JTtcbiAgcmlnaHQ6IDUwJTtcbiAgd2lkdGg6IDI1JTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTgwMHB4KSB7XG4gICAgLmMtYmxvZ19fYXNpZGUge1xuICAgICAgd2lkdGg6IDQ1MHB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuYy1ibG9nX19hc2lkZSB7XG4gICAgICB3aWR0aDogNzAlO1xuICAgICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTcyJSk7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNzIlKTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGJmYTU7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICAgICAgYm94LXNoYWRvdzogM3B4IDBweCAzcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTsgfSB9XG4gIC5jLWJsb2dfX2FzaWRlLnBvcy1maXhlZCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMTAlOyB9XG4gIC5jLWJsb2dfX2FzaWRlLm92ZXJsYXktbW9iaWxlIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogaW5pdGlhbDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgICB6LWluZGV4OiAzO1xuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07IH1cbiAgLmMtYmxvZ19fYXNpZGUuYW5pbWF0ZU9wZW4ge1xuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBibG9nX3RhYmxldE5hdk9wZW4gMC43cyBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb246IGJsb2dfdGFibGV0TmF2T3BlbiAwLjdzIGxpbmVhcjtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmMtYmxvZ19fYXNpZGUuYW5pbWF0ZU9wZW4gLmMtYmxvZ19fbWVudS1zd2lwZTpob3ZlciB7XG4gICAgICAgIGN1cnNvcjogaW5pdGlhbDsgfSB9XG4gIC5jLWJsb2dfX2FzaWRlLmFuaW1hdGVDbG9zZSB7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IGJsb2dfdGFibGV0TmF2Q2xvc2UgMC43cyBsaW5lYXI7XG4gICAgICAgICAgICBhbmltYXRpb246IGJsb2dfdGFibGV0TmF2Q2xvc2UgMC43cyBsaW5lYXI7XG4gICAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcbiAgICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOyB9XG5cbi5jLWJsb2dfX21lbnUtc3dpcGUge1xuICBkaXNwbGF5OiBub25lOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtYmxvZ19fbWVudS1zd2lwZTpob3ZlciB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7IH0gfVxuICAuYy1ibG9nX19tZW51LXN3aXBlOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgaGVpZ2h0OiAxMTAlO1xuICAgIHdpZHRoOiA3MCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgICB6LWluZGV4OiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmMtYmxvZ19fbWVudS1zd2lwZTpiZWZvcmUge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtYmxvZ19fbWVudS1zd2lwZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogMTAwJTtcbiAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTcwJSk7XG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNzAlKTtcbiAgICAgIHdpZHRoOiA0LjM3NXJlbTtcbiAgICAgIGhlaWdodDogNC4zNzVyZW07XG4gICAgICBib3JkZXItcmFkaXVzOiAwIDUwJSA1MCUgMDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGJmYTU7XG4gICAgICBib3gtc2hhZG93OiAzcHggMHB4IDNweCAwcHggcmdiYSgwLCAwLCAwLCAwLjIpOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmMtYmxvZ19fbmF2IHtcbiAgICB3aWR0aDogNTUlOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmMtYmxvZ19fbmF2IHtcbiAgICB3aWR0aDogNzAlOyB9IH1cblxuLmMtYmxvZ19fbmF2LWl0ZW0ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgcGFkZGluZzogNC41JSA2LjUlO1xuICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCB0cmFuc3BhcmVudDsgfVxuICAuYy1ibG9nX19uYXYtaXRlbS5pcy1hY3RpdmUgLmMtYmxvZ19fbmF2LWxpbmsge1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgY29sb3I6ICMwMGJmYTU7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmMtYmxvZ19fbmF2LWl0ZW0uaXMtYWN0aXZlIC5jLWJsb2dfX25hdi1saW5rIHtcbiAgICAgICAgY29sb3I6IHdoaXRlOyB9IH1cbiAgLmMtYmxvZ19fbmF2LWl0ZW0uaXMtYWN0aXZlIHtcbiAgICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCAjMDBiZmE1OyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jLWJsb2dfX25hdi1pdGVtLmlzLWFjdGl2ZSB7XG4gICAgICAgIGJvcmRlci1yaWdodDogbm9uZTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtYmxvZ19fbmF2LWl0ZW0ge1xuICAgICAgYm9yZGVyLXJpZ2h0OiBub25lOyB9IH1cblxuLmMtYmxvZ19fbmF2LWxpbmsge1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjYzO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgY29sb3I6ICM0NTVhNjQ7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuYy1ibG9nX19uYXYtbGluayB7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOyB9IH1cblxuLmMtYmxvZ19fbWFpbiB7XG4gIHdpZHRoOiA2OCU7XG4gIHBhZGRpbmc6IDAgMSUgMiUgMSU7XG4gIHBhZGRpbmc6IDElIDElIDIlIDElO1xuICBtYXJnaW46IDAgMS45JSAwJSBhdXRvOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtYmxvZ19fbWFpbiB7XG4gICAgICB3aWR0aDogOTUlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogNSU7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfSB9XG5cbi5jLWJsb2dfX2FydGljbGUge1xuICBwYWRkaW5nOiA5JSAwO1xuICBib3JkZXItYm90dG9tOiA1cHggc29saWQgcmdiYSg1NSwgNjIsIDY2LCAwLjA3KTsgfVxuICAuYy1ibG9nX19hcnRpY2xlOmZpcnN0LWNoaWxkIHtcbiAgICBwYWRkaW5nLXRvcDogMDsgfVxuICAuYy1ibG9nX19hcnRpY2xlOmxhc3QtY2hpbGQge1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7IH1cbiAgLmMtYmxvZ19fYXJ0aWNsZSAuaC10aXRsZS1hcnRpY2xlIHtcbiAgICBtYXJnaW46IDA7IH1cblxuLmFydGljbGVfX2RhdGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMi41NjtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY29sb3I6IHJnYmEoMCwgMTkxLCAxNjUsIDAuNyk7IH1cblxuLmFydGljbGVfX3RleHQge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjYzO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBjb2xvcjogIzQ1NWE2NDsgfVxuXG5wcmUucHJldHR5cHJpbnQsIGNvZGUucHJldHR5cHJpbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmMmYwICFpbXBvcnRhbnQ7XG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGNvdW50ZXItcmVzZXQ6IGl0ZW07IH1cbiAgcHJlLnByZXR0eXByaW50IGxpLCBjb2RlLnByZXR0eXByaW50IGxpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmMmYwICFpbXBvcnRhbnQ7XG4gICAgY291bnRlci1pbmNyZW1lbnQ6IGl0ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICBwcmUucHJldHR5cHJpbnQgbGk6YmVmb3JlLCBjb2RlLnByZXR0eXByaW50IGxpOmJlZm9yZSB7XG4gICAgY29udGVudDogY291bnRlcihpdGVtKTtcbiAgICBjb2xvcjogIzVhN2I4YztcbiAgICB3aWR0aDogMS4yZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAtMS4zcmVtO1xuICAgIGJvdHRvbTogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTsgfVxuXG5wcmUucHJldHR5cHJpbnQge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAxZW0gMDtcbiAgcGFkZGluZzogMWVtO1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBib3JkZXItcmFkaXVzOiAxcHg7IH1cbiAgcHJlLnByZXR0eXByaW50OmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U4RTZFNDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIHdpZHRoOiAzcmVtO1xuICAgIHotaW5kZXg6IDE7IH1cblxubGkuTDAsIGxpLkwxLCBsaS5MMiwgbGkuTDMsXG5saS5MNSwgbGkuTDYsIGxpLkw3LCBsaS5MOCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbCAhaW1wb3J0YW50OyB9XG5cbi8qISBDb2xvciB0aGVtZXMgZm9yIEdvb2dsZSBDb2RlIFByZXR0aWZ5IHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL2ptYmxvZy9jb2xvci10aGVtZXMtZm9yLWdvb2dsZS1jb2RlLXByZXR0aWZ5ICovXG4ucHJldHR5cHJpbnQge1xuICBiYWNrZ3JvdW5kOiAjZjdmM2Y3O1xuICBmb250LWZhbWlseTogTWVubG8sIFwiQml0c3RyZWFtIFZlcmEgU2FucyBNb25vXCIsIFwiRGVqYVZ1IFNhbnMgTW9ub1wiLCBNb25hY28sIENvbnNvbGFzLCBtb25vc3BhY2U7XG4gIGJvcmRlcjogMCAhaW1wb3J0YW50OyB9XG5cbi5wbG4ge1xuICBjb2xvcjogIzFiMTgxYjsgfVxuXG4vKiBTcGVjaWZ5IGNsYXNzPWxpbmVudW1zIG9uIGEgcHJlIHRvIGdldCBsaW5lIG51bWJlcmluZyAqL1xub2wubGluZW51bXMge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBjb2xvcjogIzVhN2I4YzsgfVxuXG5saS5MMCxcbmxpLkwxLFxubGkuTDIsXG5saS5MMyxcbmxpLkw0LFxubGkuTDUsXG5saS5MNixcbmxpLkw3LFxubGkuTDgsXG5saS5MOSB7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmM2Y3OyB9XG5cbkBtZWRpYSBzY3JlZW4ge1xuICAvKiBzdHJpbmcgY29udGVudCAqL1xuICAuc3RyIHtcbiAgICBjb2xvcjogIzkxOGIzYjsgfVxuICAvKiBrZXl3b3JkICovXG4gIC5rd2Qge1xuICAgIGNvbG9yOiAjN2I1OWMwOyB9XG4gIC8qIGNvbW1lbnQgKi9cbiAgLmNvbSB7XG4gICAgY29sb3I6ICM1YTdiOGM7IH1cbiAgLyogdHlwZSBuYW1lICovXG4gIC50eXAge1xuICAgIGNvbG9yOiAjNTE2YWVjOyB9XG4gIC8qIGxpdGVyYWwgdmFsdWUgKi9cbiAgLmxpdCB7XG4gICAgY29sb3I6ICNhNjU5MjY7IH1cbiAgLyogcHVuY3R1YXRpb24gKi9cbiAgLnB1biB7XG4gICAgY29sb3I6ICMxYjE4MWI7IH1cbiAgLyogbGlzcCBvcGVuIGJyYWNrZXQgKi9cbiAgLm9wbiB7XG4gICAgY29sb3I6ICMxYjE4MWI7IH1cbiAgLyogbGlzcCBjbG9zZSBicmFja2V0ICovXG4gIC5jbG8ge1xuICAgIGNvbG9yOiAjMWIxODFiOyB9XG4gIC8qIG1hcmt1cCB0YWcgbmFtZSAqL1xuICAudGFnIHtcbiAgICBjb2xvcjogI2NhNDAyYjsgfVxuICAvKiBtYXJrdXAgYXR0cmlidXRlIG5hbWUgKi9cbiAgLmF0biB7XG4gICAgY29sb3I6ICNhNjU5MjY7IH1cbiAgLyogbWFya3VwIGF0dHJpYnV0ZSB2YWx1ZSAqL1xuICAuYXR2IHtcbiAgICBjb2xvcjogIzE1OTM5MzsgfVxuICAvKiBkZWNsYXJhdGlvbiAqL1xuICAuZGVjIHtcbiAgICBjb2xvcjogI2E2NTkyNjsgfVxuICAvKiB2YXJpYWJsZSBuYW1lICovXG4gIC52YXIge1xuICAgIGNvbG9yOiAjY2E0MDJiOyB9XG4gIC8qIGZ1bmN0aW9uIG5hbWUgKi9cbiAgLmZ1biB7XG4gICAgY29sb3I6ICM1MTZhZWM7IH0gfVxuXG4uc3ZnX2hlcm8ge1xuICBvcGFjaXR5OiAwLjA2O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAzNyU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgZmlsbDogd2hpdGU7XG4gIHotaW5kZXg6IDE7IH1cblxuLnN2Z19oYW1idXJnZXIge1xuICB3aWR0aDogMi41cmVtO1xuICBoZWlnaHQ6IDEuODc1cmVtO1xuICBjb2xvcjogd2hpdGU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuc3ZnX2hhbWJ1cmdlciB7XG4gICAgICB3aWR0aDogMi4xODc1cmVtO1xuICAgICAgaGVpZ2h0OiAxLjY4NzVyZW07IH0gfVxuXG4uc3ZnX2hlcm8tYmxvZyB7XG4gIG9wYWNpdHk6IDAuMDY7XG4gIHdpZHRoOiAxNTAlO1xuICBoZWlnaHQ6IDMwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNDAlKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNDAlKTtcbiAgZmlsbDogd2hpdGU7XG4gIHotaW5kZXg6IDE7IH1cblxuLnN2Z19uZXh0IHtcbiAgb3BhY2l0eTogMC43O1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmaWxsOiB3aGl0ZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzOyB9XG5cbi5zdmdfcHJldiB7XG4gIG9wYWNpdHk6IDAuNztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZmlsbDogd2hpdGU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEsIC0xKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEsIC0xKTsgfVxuXG4uc3ZnX2Rhc2gge1xuICB3aWR0aDogMS42cmVtO1xuICBoZWlnaHQ6IDAuOHJlbTtcbiAgb3BhY2l0eTogMC4yNTtcbiAgZmlsbDogY3VycmVudENvbG9yO1xuICBzdHJva2U6IGN1cnJlbnRDb2xvcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuc3ZnX2Rhc2gge1xuICAgICAgd2lkdGg6IDAuOXJlbTsgfSB9XG5cbi5zdmctbWFpbi10b3BfdHdvLWNvbG9yIHtcbiAgd2lkdGg6IDEwMC4yJTtcbiAgaGVpZ2h0OiAyMXJlbTtcbiAgZmlsbDogI0VGRUJFMDtcbiAgc3Ryb2tlOiAjRUZFQkUwOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLnN2Zy1tYWluLXRvcF90d28tY29sb3Ige1xuICAgICAgZmlsbDogI0YwRUZFOTtcbiAgICAgIHN0cm9rZTogI0YwRUZFOTsgfSB9XG5cbi5zdmdfbWFpbi10b3Bfb25lLWNvbG9yIHtcbiAgd2lkdGg6IDEwMC4yJTtcbiAgaGVpZ2h0OiAyMXJlbTtcbiAgY29sb3I6ICNmYWY4ZjA7IH1cblxuLnN2Zy1tYWluLWljb24ge1xuICBvcGFjaXR5OiAwLjA3O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogNTAlO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB6LWluZGV4OiAwOyB9XG5cbi5zdmctbWFpbi1pY29uX2Fib3V0IHtcbiAgd2lkdGg6IDgwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtMzAlKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtMzAlKTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5zdmctbWFpbi1pY29uX2Fib3V0IHtcbiAgICAgIHdpZHRoOiA3MCU7XG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC00MCUpO1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNDAlKTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLnN2Zy1tYWluLWljb25fYWJvdXQge1xuICAgICAgd2lkdGg6IDUwJTsgfSB9XG5cbi5zdmctbWFpbi1pY29uX3dvcmtzIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTEuODc1cmVtO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0yOCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0yOCUpOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLnN2Zy1tYWluLWljb25fd29ya3Mge1xuICAgICAgaGVpZ2h0OiA4LjEyNXJlbTsgfSB9XG5cbi5zdmdfc2t5cGUsIC5zdmdfbWFpbCwgLnN2Z19waG9uZSwgLnN2Z19tYXAtbWFya2VyIHtcbiAgY29sb3I6ICMwMGJmYTU7XG4gIC13ZWJraXQtZmxleC1iYXNpczogMjAlO1xuICAgICAgLW1zLWZsZXgtcHJlZmVycmVkLXNpemU6IDIwJTtcbiAgICAgICAgICBmbGV4LWJhc2lzOiAyMCU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zczsgfVxuICAuc3ZnX3NreXBlOmhvdmVyLCAuc3ZnX21haWw6aG92ZXIsIC5zdmdfcGhvbmU6aG92ZXIsIC5zdmdfbWFwLW1hcmtlcjpob3ZlciB7XG4gICAgb3BhY2l0eTogMC43OyB9XG5cbi5zdmdfc2t5cGUge1xuICB3aWR0aDogMS41cmVtO1xuICBoZWlnaHQ6IDEuNXJlbTsgfVxuXG4uc3ZnX21haWwge1xuICB3aWR0aDogMS41cmVtO1xuICBoZWlnaHQ6IDEuMnJlbTsgfVxuXG4uc3ZnX3Bob25lIHtcbiAgd2lkdGg6IDEuMjVyZW07XG4gIGhlaWdodDogMS4xODc1cmVtOyB9XG5cbi5zdmdfbWFwLW1hcmtlciB7XG4gIHdpZHRoOiAxLjE4NzVyZW07XG4gIGhlaWdodDogMS41cmVtOyB9XG5cbi5zdmdfbG9naW4ge1xuICB3aWR0aDogMC45Mzc1cmVtO1xuICBoZWlnaHQ6IDEuMDYyNXJlbTtcbiAgY29sb3I6ICNjNGNiY2Q7IH1cblxuLnN2Z19saW5rIHtcbiAgd2lkdGg6IDEuMjVyZW07XG4gIGhlaWdodDogMS4xODc1cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTsgfVxuXG4uc3ZnX3NsaWRlci1hcnJvdyB7XG4gIHdpZHRoOiAyLjgxMjVyZW07XG4gIGhlaWdodDogMS43NXJlbTtcbiAgYm94LXNoYWRvdzogMHB4IDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTYpO1xuICBjb2xvcjogd2hpdGU7XG4gIG9wYWNpdHk6IDAuNztcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzOyB9XG5cbi5oLXRpdGxlLXNlY3Rpb24ge1xuICBmb250LWZhbWlseTogJ2Jlcm5pZXInO1xuICBmb250LXNpemU6IDMuOTM3NXJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMnJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBtYXJnaW46IDAgMS4wNjI1cmVtO1xuICBsaW5lLWhlaWdodDogMS4wNTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgY29sb3I6ICMzNzNlNDI7IH1cbiAgLmgtdGl0bGUtc2VjdGlvbjpmaXJzdC1sZXR0ZXIge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuaC10aXRsZS1zZWN0aW9uIHtcbiAgICAgIGZvbnQtc2l6ZTogMy4wNjI1cmVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuaC10aXRsZS1zZWN0aW9uIHtcbiAgICAgIGZvbnQtc2l6ZTogMi4xODc1cmVtOyB9IH1cblxuLmgtdGl0bGUtc2VjdGlvbl9jb2xvciB7XG4gIGNvbG9yOiB3aGl0ZTsgfVxuXG4uaC10aXRsZS1hcnRpY2xlIHtcbiAgZm9udC1mYW1pbHk6ICdiZXJuaWVyJztcbiAgZm9udC1zaXplOiAyLjE4NzVyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbWFyZ2luOiAwIDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGNvbG9yOiAjNDU1YTY0OyB9XG4gIC5oLXRpdGxlLWFydGljbGU6Zmlyc3QtbGV0dGVyIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmgtdGl0bGUtYXJ0aWNsZSB7XG4gICAgICBmb250LXNpemU6IDEuMzc1cmVtOyB9IH1cblxuLmMtbmF2X19saXN0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDgwJTtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgLmMtbmF2X19saXN0IHtcbiAgICAgIHdpZHRoOiA5MiU7IH0gfVxuXG4uYy1uYXZfX2l0ZW0ge1xuICAtd2Via2l0LWZsZXgtZ3JvdzogMTtcbiAgICAgIC1tcy1mbGV4LXBvc2l0aXZlOiAxO1xuICAgICAgICAgIGZsZXgtZ3JvdzogMTsgfVxuXG4uYy1uYXZfX2xpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogMS4wNjI1cmVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXdlaWdodDogNTAwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBjb2xvcjogd2hpdGU7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuNHM7IH1cbiAgLmMtbmF2X19saW5rOjpmaXJzdC1sZXR0ZXIge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLmMtbmF2X19saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogIzAwYmZhNTsgfVxuXG4uYy1jb3B5IHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5jLWNvcHkgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5jLWNvcHkgYTpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtY29weSB7XG4gICAgICAtd2Via2l0LWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuXG4uYy1jb3B5X2l0ZW0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogNi4yODsgfVxuICAuYy1jb3B5X2l0ZW06YWZ0ZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBjb250ZW50OiAnfCc7XG4gICAgbWFyZ2luOiAwIDAuM3JlbTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDMwMDsgfVxuICAuYy1jb3B5X2l0ZW06bGFzdC1jaGlsZDphZnRlciB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5jLWNvcHlfaXRlbSB7XG4gICAgICBsaW5lLWhlaWdodDogMS41OyB9XG4gICAgICAuYy1jb3B5X2l0ZW06Zmlyc3QtY2hpbGQge1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgLmMtY29weV9pdGVtOmZpcnN0LWNoaWxkOmFmdGVyIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5jLWNvcHlfZm9vdGVyIHtcbiAgd2lkdGg6IDUwJTtcbiAgaGVpZ2h0OiA1MCU7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtY29weV9mb290ZXIge1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogMjIlO1xuICAgICAgLXdlYmtpdC1vcmRlcjogNDtcbiAgICAgICAgICAtbXMtZmxleC1vcmRlcjogNDtcbiAgICAgICAgICAgICAgb3JkZXI6IDQ7XG4gICAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5jLWNvcHlfZm9vdGVyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cbiAgLmMtY29weV9mb290ZXIgLmMtY29weV9pdGVtIHtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpOyB9XG4gIC5jLWNvcHlfZm9vdGVyIGEge1xuICAgIG9wYWNpdHk6IDAuNTsgfVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OeVl5OWhjM05sZEhNdmMzUjViR1Z6TDBNNlhGeFZjMlZ5YzF4Y1dYVnNhWGxoWEZ4M1pXSndjbTlxWldOMGMxeGNjRzl5ZEdadmJHbHZMM055WTF4Y1lYTnpaWFJ6WEZ4emRIbHNaWE5jWEdKaGMyVmNYRjltYjI1MGN5NXpZM056SWl3aWMzSmpMMkZ6YzJWMGN5OXpkSGxzWlhNdlF6cGNYRlZ6WlhKelhGeFpkV3hwZVdGY1hIZGxZbkJ5YjJwbFkzUnpYRnh3YjNKMFptOXNhVzh2YzNKalhGeGhjM05sZEhOY1hITjBlV3hsYzF4Y1ltRnpaVnhjWDJKaGMyVXVjMk56Y3lJc0luTnlZeTloYzNObGRITXZjM1I1YkdWekwwTTZYRnhWYzJWeWMxeGNXWFZzYVhsaFhGeDNaV0p3Y205cVpXTjBjMXhjY0c5eWRHWnZiR2x2TDNOeVkxeGNZWE56WlhSelhGeHpkSGxzWlhOY1hIVjBhV3h6WEZ4ZmRtRnlhV0ZpYkdWekxuTmpjM01pTENKemNtTXZZWE56WlhSekwzTjBlV3hsY3k5RE9seGNWWE5sY25OY1hGbDFiR2w1WVZ4Y2QyVmljSEp2YW1WamRITmNYSEJ2Y25SbWIyeHBieTl6Y21OY1hHRnpjMlYwYzF4Y2MzUjViR1Z6WEZ4MWRHbHNjMXhjWDIxcGVHbHVjeTV6WTNOeklpd2ljM0pqTDJGemMyVjBjeTl6ZEhsc1pYTXZRenBjWEZWelpYSnpYRnhaZFd4cGVXRmNYSGRsWW5CeWIycGxZM1J6WEZ4d2IzSjBabTlzYVc4dmMzSmpYRnhoYzNObGRITmNYSE4wZVd4bGMxeGNZbUZ6WlZ4Y1gyaGxiSEJsY25NdWMyTnpjeUlzSW5OeVl5OWhjM05sZEhNdmMzUjViR1Z6TDBNNlhGeFZjMlZ5YzF4Y1dYVnNhWGxoWEZ4M1pXSndjbTlxWldOMGMxeGNjRzl5ZEdadmJHbHZMM055WTF4Y1lYTnpaWFJ6WEZ4emRIbHNaWE5jWEdGdWFXMWhkR2x2Ym5OY1hGOWhibWx0WVhScGIyNXpMbk5qYzNNaUxDSnpjbU12WVhOelpYUnpMM04wZVd4bGN5OURPbHhjVlhObGNuTmNYRmwxYkdsNVlWeGNkMlZpY0hKdmFtVmpkSE5jWEhCdmNuUm1iMnhwYnk5emNtTmNYR0Z6YzJWMGMxeGNjM1I1YkdWelhGeHNZWGx2ZFhSY1hGOXNMWGR5WVhCd1pYSXVjMk56Y3lJc0luTnlZeTloYzNObGRITXZjM1I1YkdWekwwTTZYRnhWYzJWeWMxeGNXWFZzYVhsaFhGeDNaV0p3Y205cVpXTjBjMXhjY0c5eWRHWnZiR2x2TDNOeVkxeGNZWE56WlhSelhGeHpkSGxzWlhOY1hHeGhlVzkxZEZ4Y1gyd3RjSEpsYkc5aFpHVnlMbk5qYzNNaUxDSnpjbU12WVhOelpYUnpMM04wZVd4bGN5OURPbHhjVlhObGNuTmNYRmwxYkdsNVlWeGNkMlZpY0hKdmFtVmpkSE5jWEhCdmNuUm1iMnhwYnk5emNtTmNYR0Z6YzJWMGMxeGNjM1I1YkdWelhGeDFkR2xzYzF4Y1gyWjFibU4wYVc5dWN5NXpZM056SWl3aWMzSmpMMkZ6YzJWMGN5OXpkSGxzWlhNdlF6cGNYRlZ6WlhKelhGeFpkV3hwZVdGY1hIZGxZbkJ5YjJwbFkzUnpYRnh3YjNKMFptOXNhVzh2YzNKalhGeGhjM05sZEhOY1hITjBlV3hsYzF4Y2JHRjViM1YwWEZ4ZmJDMXpaV04wYVc5dUxuTmpjM01pTENKemNtTXZZWE56WlhSekwzTjBlV3hsY3k5RE9seGNWWE5sY25OY1hGbDFiR2w1WVZ4Y2QyVmljSEp2YW1WamRITmNYSEJ2Y25SbWIyeHBieTl6Y21OY1hHRnpjMlYwYzF4Y2MzUjViR1Z6WEZ4c1lYbHZkWFJjWEY5c0xYTmpjbTlzYkMxd1lYSmhiR3hoZUM1elkzTnpJaXdpYzNKakwyRnpjMlYwY3k5emRIbHNaWE12UXpwY1hGVnpaWEp6WEZ4WmRXeHBlV0ZjWEhkbFluQnliMnBsWTNSelhGeHdiM0owWm05c2FXOHZjM0pqWEZ4aGMzTmxkSE5jWEhOMGVXeGxjMXhjYkdGNWIzVjBYRnhmYkMxb1pYSnZMbk5qYzNNaUxDSnpjbU12WVhOelpYUnpMM04wZVd4bGN5OURPbHhjVlhObGNuTmNYRmwxYkdsNVlWeGNkMlZpY0hKdmFtVmpkSE5jWEhCdmNuUm1iMnhwYnk5emNtTmNYR0Z6YzJWMGMxeGNjM1I1YkdWelhGeHNZWGx2ZFhSY1hGOXNMV2hsY205ZlgzTnZZMmxoYkM1elkzTnpJaXdpYzNKakwyRnpjMlYwY3k5emRIbHNaWE12UXpwY1hGVnpaWEp6WEZ4WmRXeHBlV0ZjWEhkbFluQnliMnBsWTNSelhGeHdiM0owWm05c2FXOHZjM0pqWEZ4aGMzTmxkSE5jWEhOMGVXeGxjMXhjYkdGNWIzVjBYRnhmYkMxamIyNTBZV2x1WlhJdWMyTnpjeUlzSW5OeVl5OWhjM05sZEhNdmMzUjViR1Z6TDBNNlhGeFZjMlZ5YzF4Y1dYVnNhWGxoWEZ4M1pXSndjbTlxWldOMGMxeGNjRzl5ZEdadmJHbHZMM055WTF4Y1lYTnpaWFJ6WEZ4emRIbHNaWE5jWEd4aGVXOTFkRnhjWDJ3dGFHRnRZblZ5WjJWeUxuTmpjM01pTENKemNtTXZZWE56WlhSekwzTjBlV3hsY3k5RE9seGNWWE5sY25OY1hGbDFiR2w1WVZ4Y2QyVmljSEp2YW1WamRITmNYSEJ2Y25SbWIyeHBieTl6Y21OY1hHRnpjMlYwYzF4Y2MzUjViR1Z6WEZ4c1lYbHZkWFJjWEY5c0xXMWhhVzR1YzJOemN5SXNJbk55WXk5aGMzTmxkSE12YzNSNWJHVnpMME02WEZ4VmMyVnljMXhjV1hWc2FYbGhYRngzWldKd2NtOXFaV04wYzF4Y2NHOXlkR1p2YkdsdkwzTnlZMXhjWVhOelpYUnpYRnh6ZEhsc1pYTmNYR3hoZVc5MWRGeGNYMnd0Wm05dmRHVnlMbk5qYzNNaUxDSnpjbU12WVhOelpYUnpMM04wZVd4bGN5OURPbHhjVlhObGNuTmNYRmwxYkdsNVlWeGNkMlZpY0hKdmFtVmpkSE5jWEhCdmNuUm1iMnhwYnk5emNtTmNYR0Z6YzJWMGMxeGNjM1I1YkdWelhGeGpiMjF3YjI1bGJuUnpYRnhmYjNabGNteGhlUzV6WTNOeklpd2ljM0pqTDJGemMyVjBjeTl6ZEhsc1pYTXZRenBjWEZWelpYSnpYRnhaZFd4cGVXRmNYSGRsWW5CeWIycGxZM1J6WEZ4d2IzSjBabTlzYVc4dmMzSmpYRnhoYzNObGRITmNYSE4wZVd4bGMxeGNZMjl0Y0c5dVpXNTBjMXhjWDJNdGFHRnRZblZ5WjJWeUxXNWhkaTV6WTNOeklpd2ljM0pqTDJGemMyVjBjeTl6ZEhsc1pYTXZRenBjWEZWelpYSnpYRnhaZFd4cGVXRmNYSGRsWW5CeWIycGxZM1J6WEZ4d2IzSjBabTlzYVc4dmMzSmpYRnhoYzNObGRITmNYSE4wZVd4bGMxeGNZMjl0Y0c5dVpXNTBjMXhjWDJNdFpHVjJaV3h2Y0dWeUxuTmpjM01pTENKemNtTXZZWE56WlhSekwzTjBlV3hsY3k5RE9seGNWWE5sY25OY1hGbDFiR2w1WVZ4Y2QyVmljSEp2YW1WamRITmNYSEJ2Y25SbWIyeHBieTl6Y21OY1hHRnpjMlYwYzF4Y2MzUjViR1Z6WEZ4amIyMXdiMjVsYm5SelhGeGZZeTFpYkc5bkxuTmpjM01pTENKemNtTXZZWE56WlhSekwzTjBlV3hsY3k5RE9seGNWWE5sY25OY1hGbDFiR2w1WVZ4Y2QyVmljSEp2YW1WamRITmNYSEJ2Y25SbWIyeHBieTl6Y21OY1hHRnpjMlYwYzF4Y2MzUjViR1Z6WEZ4amIyMXdiMjVsYm5SelhGeGZjM1puTG5OamMzTWlMQ0p6Y21NdllYTnpaWFJ6TDNOMGVXeGxjeTlET2x4Y1ZYTmxjbk5jWEZsMWJHbDVZVnhjZDJWaWNISnZhbVZqZEhOY1hIQnZjblJtYjJ4cGJ5OXpjbU5jWEdGemMyVjBjMXhjYzNSNWJHVnpYRnhqYjIxd2IyNWxiblJ6WEZ4ZmFDMTBhWFJzWlM1elkzTnpJaXdpYzNKakwyRnpjMlYwY3k5emRIbHNaWE12UXpwY1hGVnpaWEp6WEZ4WmRXeHBlV0ZjWEhkbFluQnliMnBsWTNSelhGeHdiM0owWm05c2FXOHZjM0pqWEZ4aGMzTmxkSE5jWEhOMGVXeGxjMXhjWTI5dGNHOXVaVzUwYzF4Y1gyTXRibUYyTG5OamMzTWlMQ0p6Y21NdllYTnpaWFJ6TDNOMGVXeGxjeTlET2x4Y1ZYTmxjbk5jWEZsMWJHbDVZVnhjZDJWaWNISnZhbVZqZEhOY1hIQnZjblJtYjJ4cGJ5OXpjbU5jWEdGemMyVjBjMXhjYzNSNWJHVnpYRnhqYjIxd2IyNWxiblJ6WEZ4Zll5MWpiM0I1TG5OamMzTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzYVVaQlFXbEdPMEZCUldwR08wVkJRMGtzYTBOQlFXbERPMFZCUTJwRExHOUxRVU5yUmp0RlFVTnNSaXh2UWtGQmJVSTdSVUZEYmtJc2JVSkJRV3RDTEVWQlFVRTdPMEZCU1hSQ08wVkJRMGtzZFVKQlFYTkNPMFZCUTNSQ0xEaEtRVU1yUlR0RlFVTXZSU3h2UWtGQmJVSTdSVUZEYmtJc2JVSkJRV3RDTEVWQlFVRTdPMEZCU1hSQ08wVkJRMGtzTmtKQlFUUkNPMFZCUXpWQ0xEQktRVU0yUlR0RlFVTTNSU3h2UWtGQmJVSTdSVUZEYmtJc2JVSkJRV3RDTEVWQlFVRTdPMEZCUzNSQ08wVkJRMGtzYzBKQlFYRkNPMFZCUTNKQ0xITkpRVU50UlR0RlFVTnVSU3hwUWtGQlowSTdSVUZEYUVJc2JVSkJRV3RDTEVWQlFVRTdPMEZCU1hSQ08wVkJRMGtzYzBKQlFYRkNPMFZCUTNKQ0xHdEtRVU41UlR0RlFVTjZSU3hwUWtGQlowSTdSVUZEYUVJc2JVSkJRV3RDTEVWQlFVRTdPMEZCU1hSQ08wVkJRMGtzYzBKQlFYRkNPMFZCUTNKQ0xEQkpRVU54UlR0RlFVTnlSU3hwUWtGQlowSTdSVUZEYUVJc2JVSkJRV3RDTEVWQlFVRTdPMEZCU1hSQ08wVkJRMGtzYzBKQlFYRkNPMFZCUTNKQ0xIZEpRVU52UlR0RlFVTndSU3hwUWtGQlowSTdSVUZEYUVJc2JVSkJRV3RDTEVWQlFVRTdPMEZCU1hSQ08wVkJRMGtzYzBKQlFYRkNPMFZCUTNKQ0xHOUtRVU13UlR0RlFVTXhSU3hwUWtGQlowSTdSVUZEYUVJc2JVSkJRV3RDTEVWQlFVRTdPMEZCU1hSQ08wVkJRMGtzYzBKQlFYRkNPMFZCUTNKQ0xEQkpRVU54UlR0RlFVTnlSU3hwUWtGQlowSTdSVUZEYUVJc2JVSkJRV3RDTEVWQlFVRTdPMEZCU1hSQ08wVkJRMGtzYzBKQlFYRkNPMFZCUTNKQ0xITktRVU15UlR0RlFVTXpSU3hwUWtGQlowSTdSVUZEYUVJc2JVSkJRV3RDTEVWQlFVRTdPMEZCU1hSQ08wVkJRMGtzYzBKQlFYRkNPMFZCUTNKQ0xEUkpRVU56UlR0RlFVTjBSU3hwUWtGQlowSTdSVUZEYUVJc2JVSkJRV3RDTEVWQlFVRTdPMEZET1VaMFFqczdSMEZGUnp0QlFVTklPMFZCUTBNc2RVSkJRWE5DTEVWQlEzUkNPenRCUVVWRU8wVkJRMGNzWlVOR01FSTdSVVJITTBJc01FSkRiMEkyUWp0RlJHNUNOVUlzTWtORWQwWTJRenRGUTNaR0wwTXNWVUZCVXp0RlFVTlVMRmRCUVZVN1JVRkRWaXhaUVVGWE8wVkJRMWdzWVVGQldUdEZRVU5hTEdsQ1FVRm5RanRGUVVOb1FpeG5Ra0ZCWlR0RlFVTm1MSE5DUVVGeFFqdEZRVU55UWl4dFFrRkJhMEk3UlVGRGJFSXNiME5CUVcxRE8wVkJRMjVETEcxRFFVRnJRenRGUVVOc1F5eDFRa0ZCYzBJN1JVRkRkRUlzYlVKQlFXdENPMFZCUTJ4Q0xHdENRVUZwUWl4RlFUQkNha0k3UlVFeFEwUTdTVUZyUWtVc2JVSkJRV3RDTzBsQlEyeENMRlZCUVZNN1NVRkRWQ3hSUVVGUE8wbEJRMUFzVTBGQlVTeEZRVU5TTzBWRmVrSkJPMGxHUjBZN1RVRjNRa1VzZVVORGVrSXlRaXhGUkRKRE5VSXNSVUZCUVR0RlJUTkNRVHRKUm1aRU8wMUJORUpGTEdkQ1FVRmxMRVZCWTJoQ0xFVkJRVUU3UlVWeVFrRTdTVVp5UWtRN1RVRm5RMFVzWjBKQlFXVXNSVUZWYUVJc1JVRkJRVHRGUldaQk8wbEdNMEpFTzAxQmIwTkZMR2RDUVVGbExFVkJUV2hDTEVWQlFVRTdSVVZVUVR0SlJtcERSRHROUVhkRFJTeG5Ra0ZCWlN4RlFVVm9RaXhGUVVGQk96dEJRVU5FTzBWQlEwTXNZVUZCV1R0RlFVTmFMR2xDUVVGblFqdEZRVU5vUWl4clFrRkJhVUlzUlVGWGFrSTdSVVZ3UTBFN1NVWnpRa1E3VFVGWlJTeHJRa0ZCYVVJc1JVRkZiRUlzUlVGQlFUczdRVUZGUkRzN096czdSMEZMUnp0QlFVTklPenRGUVVWRkxHOUNRVUZ0UWl4RlFVTndRanM3UVVGRlJEczdSMEZGUnp0QlFVTklPMFZCUTBVc1lVTXZSU3RDTzBWRVowWXZRaXh6UWtGQmNVSXNSVUZEZEVJN08wRkJSVVE3UlVGRFF5eFZRVUZUTzBWQlExUXNWMEZCVlN4RlFVTldPenRCUVVWRU8wVkJRME1zYVVKQlFXZENMRVZCUTJoQ096dEJRVVZFTzBWQlEwTXNWVUZCVXl4RlFVTlVPenRCUVVWRU8wVkJRME1zYlVKQlFXdENPMFZCUTJ4Q0xIRkNRVUZ2UWl4RlFVTndRanM3UVVGRlJEdEZRVU5GTERKRFJFNDRReXhGUTA4NVF6czdRVUZGUmp0RlFVTkRMR05CUVdFc1JVRkRZanM3UVVGRFJEdEZRVU5KTEdWQlFXTXNSVUZEYWtJN08wRkhhRWhFT3p0SFFVVkhPMEZCUTBnN1JVRkRSU3haUVVGWE8wVkJRMWdzV1VGQlZ6dEZRVU5ZTEdWQlFXTXNSVUZEWmpzN1FVRkZSRHM3T3pzN1IwRkxSenRCUVVkSU96czdPMGRCU1VjN1FVRkRTRHRGUVVORkxHbENRVUZuUWp0RlFVTm9RaXhYUVVGVk8wVkJRVWNzVDBGQlR6dEZRVU53UWl4clFrRkJhVUk3UlVGRGFrSXNiMEpCUVcxQ08wVkJRMjVDTEdWQlFXTXNSVUZEWmpzN1FVRkZSRHM3T3p0SFFVbEhPMEZCUTBnN1JVRkRSU3hWUVVGVE8wVkJRMVFzYjBKQlFXMUNPMFZCUTI1Q0xGbEJRVmM3UlVGRFdpeHJRa0ZCYTBJN1JVRkRha0lzYVVKQlFXZENPMFZCUTJoQ0xGZEJRVlU3UlVGRFZpeHRRa0ZCYTBJN1JVRkRiRUlzVjBGQlZTeEZRVU5ZT3p0QlF6ZERSRHRGUVVORE8wbEJRVThzZDBKQlFXVTdXVUZCWml4blFrRkJaU3hGUVVGQk8wVkJRM1JDTzBsQlFVc3NjVVJCUVRSRE8xbEJRVFZETERaRFFVRTBReXhGUVVGQkxFVkJRVUU3TzBGQlJteEVPMFZCUTBNN1NVRkJUeXgzUWtGQlpUdFpRVUZtTEdkQ1FVRmxMRVZCUVVFN1JVRkRkRUk3U1VGQlN5eHhSRUZCTkVNN1dVRkJOVU1zTmtOQlFUUkRMRVZCUVVFc1JVRkJRVHM3UVVGSGJFUTdSVUZEUXp0SlFVRlBMSGRDUVVGbE8xbEJRV1lzWjBKQlFXVXNSVUZCUVR0RlFVTjBRanRKUVVGTExITkVRVUUyUXp0WlFVRTNReXc0UTBGQk5rTXNSVUZCUVN4RlFVRkJPenRCUVVadVJEdEZRVU5ETzBsQlFVOHNkMEpCUVdVN1dVRkJaaXhuUWtGQlpTeEZRVUZCTzBWQlEzUkNPMGxCUVVzc2MwUkJRVFpETzFsQlFUZERMRGhEUVVFMlF5eEZRVUZCTEVWQlFVRTdPMEZCUjI1RU8wVkJRME03U1VGQlR5eDNRa0ZCWlR0WlFVRm1MR2RDUVVGbExFVkJRVUU3UlVGRGRFSTdTVUZCU3l4clEwRkJlVUk3V1VGQmVrSXNNRUpCUVhsQ0xFVkJRVUVzUlVGQlFUczdRVUZHTDBJN1JVRkRRenRKUVVGUExIZENRVUZsTzFsQlFXWXNaMEpCUVdVc1JVRkJRVHRGUVVOMFFqdEpRVUZMTEd0RFFVRjVRanRaUVVGNlFpd3dRa0ZCZVVJc1JVRkJRU3hGUVVGQk96dEJRVXN2UWp0RlFVTkRPMGxCUVU4c2NVUkJRVFJETzFsQlFUVkRMRFpEUVVFMFF5eEZRVUZCTzBWQlEyNUVPMGxCUVVzc2QwSkJRV1U3V1VGQlppeG5Ra0ZCWlN4RlFVRkJMRVZCUVVFN08wRkJSbkpDTzBWQlEwTTdTVUZCVHl4eFJFRkJORU03V1VGQk5VTXNOa05CUVRSRExFVkJRVUU3UlVGRGJrUTdTVUZCU3l4M1FrRkJaVHRaUVVGbUxHZENRVUZsTEVWQlFVRXNSVUZCUVRzN1FVRkhja0k3UlVGRFF6dEpRVUZQTEhORVFVRTJRenRaUVVFM1F5dzRRMEZCTmtNc1JVRkJRVHRGUVVOd1JEdEpRVUZMTEhkQ1FVRmxPMWxCUVdZc1owSkJRV1VzUlVGQlFTeEZRVUZCT3p0QlFVWnlRanRGUVVORE8wbEJRVThzYzBSQlFUWkRPMWxCUVRkRExEaERRVUUyUXl4RlFVRkJPMFZCUTNCRU8wbEJRVXNzZDBKQlFXVTdXVUZCWml4blFrRkJaU3hGUVVGQkxFVkJRVUU3TzBGQlIzSkNPMFZCUTBNN1NVRkJUeXhyUTBGQmVVSTdXVUZCZWtJc01FSkJRWGxDTEVWQlFVRTdSVUZEYUVNN1NVRkJTeXdyUWtGQmMwSTdXVUZCZEVJc2RVSkJRWE5DTEVWQlFVRXNSVUZCUVRzN1FVRkdOVUk3UlVGRFF6dEpRVUZQTEd0RFFVRjVRanRaUVVGNlFpd3dRa0ZCZVVJc1JVRkJRVHRGUVVOb1F6dEpRVUZMTEN0Q1FVRnpRanRaUVVGMFFpeDFRa0ZCYzBJc1JVRkJRU3hGUVVGQk96dEJRVXMxUWp0RlFVTkRPMGxCUVU4c2IwTkJRVEpDTzFsQlFUTkNMRFJDUVVFeVFpeEZRVUZCTzBWQlEyeERPMGxCUVVzc2EwTkJRWGxDTzFsQlFYcENMREJDUVVGNVFpeEZRVUZCTEVWQlFVRTdPMEZCUmk5Q08wVkJRME03U1VGQlR5eHZRMEZCTWtJN1dVRkJNMElzTkVKQlFUSkNMRVZCUVVFN1JVRkRiRU03U1VGQlN5eHJRMEZCZVVJN1dVRkJla0lzTUVKQlFYbENMRVZCUVVFc1JVRkJRVHM3UVVGRkwwSTdSVUZEUXp0SlFVRlBMR3REUVVGNVFqdFpRVUY2UWl3d1FrRkJlVUlzUlVGQlFUdEZRVU5vUXp0SlFVRkxMSFZEUVVFNFFqdFpRVUU1UWl3clFrRkJPRUlzUlVGQlFTeEZRVUZCT3p0QlFVWndRenRGUVVORE8wbEJRVThzYTBOQlFYbENPMWxCUVhwQ0xEQkNRVUY1UWl4RlFVRkJPMFZCUTJoRE8wbEJRVXNzZFVOQlFUaENPMWxCUVRsQ0xDdENRVUU0UWl4RlFVRkJMRVZCUVVFN08wRkJTM0JETzBWQlEwTTdTVUZCVHl4eFEwRkJORUk3V1VGQk5VSXNOa0pCUVRSQ0xFVkJRVUU3UlVGRGJrTTdTVUZCU3l4clEwRkJlVUk3V1VGQmVrSXNNRUpCUVhsQ0xFVkJRVUVzUlVGQlFUczdRVUZHTDBJN1JVRkRRenRKUVVGUExIRkRRVUUwUWp0WlFVRTFRaXcyUWtGQk5FSXNSVUZCUVR0RlFVTnVRenRKUVVGTExHdERRVUY1UWp0WlFVRjZRaXd3UWtGQmVVSXNSVUZCUVN4RlFVRkJPenRCUVVVdlFqdEZRVU5ETzBsQlFVOHNiME5CUVRKQ08xbEJRVE5DTERSQ1FVRXlRaXhGUVVGQk8wVkJRMnhETzBsQlFVc3NhME5CUVhsQ08xbEJRWHBDTERCQ1FVRjVRaXhGUVVGQkxFVkJRVUU3TzBGQlJpOUNPMFZCUTBNN1NVRkJUeXh2UTBGQk1rSTdXVUZCTTBJc05FSkJRVEpDTEVWQlFVRTdSVUZEYkVNN1NVRkJTeXhyUTBGQmVVSTdXVUZCZWtJc01FSkJRWGxDTEVWQlFVRXNSVUZCUVRzN1FVRkZMMEk3UlVGRFF6dEpRVUZQTEd0RFFVRjVRanRaUVVGNlFpd3dRa0ZCZVVJc1JVRkJRVHRGUVVOb1F6dEpRVUZMTEhGRFFVRTBRanRaUVVFMVFpdzJRa0ZCTkVJc1JVRkJRU3hGUVVGQk96dEJRVVpzUXp0RlFVTkRPMGxCUVU4c2EwTkJRWGxDTzFsQlFYcENMREJDUVVGNVFpeEZRVUZCTzBWQlEyaERPMGxCUVVzc2NVTkJRVFJDTzFsQlFUVkNMRFpDUVVFMFFpeEZRVUZCTEVWQlFVRTdPMEZCUld4RE8wVkJRME03U1VGQlR5eHJRMEZCZVVJN1dVRkJla0lzTUVKQlFYbENMRVZCUVVFN1JVRkRhRU03U1VGQlN5eHZRMEZCTWtJN1dVRkJNMElzTkVKQlFUSkNMRVZCUVVFc1JVRkJRVHM3UVVGR2FrTTdSVUZEUXp0SlFVRlBMR3REUVVGNVFqdFpRVUY2UWl3d1FrRkJlVUlzUlVGQlFUdEZRVU5vUXp0SlFVRkxMRzlEUVVFeVFqdFpRVUV6UWl3MFFrRkJNa0lzUlVGQlFTeEZRVUZCT3p0QlFVVnFRenRGUVVORE8wbEJRVThzVjBGQlZTeEZRVUZCTzBWQlEycENPMGxCUVVzc1YwRkJWU3hGUVVGQkxFVkJRVUU3TzBGQlJtaENPMFZCUTBNN1NVRkJUeXhYUVVGVkxFVkJRVUU3UlVGRGFrSTdTVUZCU3l4WFFVRlZMRVZCUVVFc1JVRkJRVHM3UVVGRmFFSTdSVUZEUXp0SlFVRlBMRmRCUVZVc1JVRkJRVHRGUVVOcVFqdEpRVUZMTEZkQlFWVXNSVUZCUVN4RlFVRkJPenRCUVVab1FqdEZRVU5ETzBsQlFVOHNWMEZCVlN4RlFVRkJPMFZCUTJwQ08wbEJRVXNzVjBGQlZTeEZRVUZCTEVWQlFVRTdPMEZCUldoQ08wVkJRME03U1VGQlR5eHBRMGgyUkhOQ0xFVkJRVUU3UlVkM1JEZENPMGxCUVVzc2IwTkllRVIzUWl4RlFVRkJMRVZCUVVFN08wRkhjMFE1UWp0RlFVTkRPMGxCUVU4c2FVTklka1J6UWl4RlFVRkJPMFZIZDBRM1FqdEpRVUZMTEc5RFNIaEVkMElzUlVGQlFTeEZRVUZCT3p0QlJ6QkVPVUk3UlVGRFF6dEpRVUZQTEc5RFNETkVjMElzUlVGQlFUdEZSelJFTjBJN1NVRkJTeXhwUTBnMVJIZENMRVZCUVVFc1JVRkJRVHM3UVVjd1JEbENPMFZCUTBNN1NVRkJUeXh2UTBnelJITkNMRVZCUVVFN1JVYzBSRGRDTzBsQlFVc3NhVU5JTlVSM1FpeEZRVUZCTEVWQlFVRTdPMEZKYWtJNVFqdEZTRU5GTEZsSFEybENPMFZJUVdwQ0xHRkhRV2xDTzBWQlEyeENMRlZCUVZNN1JVRkRWQ3h0UWtGQmEwSTdSVUZEYkVJc2FVSkJRV2RDTzBWQlEyaENMR3RDUVVGcFFpeEZRVWxxUWp0RlNFZERPMGxIWWtZN1RVRlJSU3hyUWtGQmFVSXNSVUZGYkVJc1JVRkJRVHM3UVVOWVJEdEZRVU5KTEdkQ1FVRmxPMFZCUTJZc2FVSkJRV2RDTzBWQlEyaENMRTlCUVUwN1JVRkRUaXhSUVVGUE8wVkJRMUFzV1VGQlZ6dEZRVU5ZTEdGQlFWazdSVUZEV2l4alFVRmhPMFZCUTJJc05FVkJRVEpGTEVWQlF6bEZPenRCUVVORU8wVkJRMGtzWlVGQll6dEZRVU5rTEcxQ1FVRnJRanRGUVVOc1FpeFZRVUZUTzBWQlExUXNVMEZCVVR0RlFVTlNMRmxEUXl0Q08wVkVRUzlDTEdGRFFTdENPMFZFUXk5Q0xIbERRVUZuUXp0VlFVRm9ReXhwUTBGQlowTTdSVUZEYUVNc1kwRkJZVHRGUVVOaUxITkNRVUZoTzBWQlFXSXNjVUpCUVdFN1JVRkJZaXhqUVVGaE8wVkJRMklzWjBOQlFYVkNPMDFCUVhaQ0xITkNRVUYxUWp0VlFVRjJRaXgzUWtGQmRVSTdSVUZEZGtJc05FSkJRVzFDTzAxQlFXNUNMSFZDUVVGdFFqdFZRVUZ1UWl4dlFrRkJiVUlzUlVGblFuUkNPMFZCTTBKRU8wbEJZVkVzZDBOQlFTdENPMWxCUVM5Q0xHZERRVUVyUWp0SlFVTXZRaXhuUWtGQlpUdEpRVU5tTEZkQlFWVXNSVUZEWWp0RlFXaENURHRKUVd0Q1VTeHRRMEZCTUVJN1dVRkJNVUlzTWtKQlFUQkNMRVZCUlRkQ08wVkJjRUpNTzBsQmMwSlJMRzFEUVVFd1FqdFpRVUV4UWl3eVFrRkJNRUlzUlVGRE4wSTdSVUYyUWt3N1NVRjVRbEVzYTBOQlFYbENPMWxCUVhwQ0xEQkNRVUY1UWl4RlFVTTFRanM3UVVGRlREdEZRVU5KTEdkQ1EzWkNLMEk3UlVSM1FpOUNMR0ZNYkVNMlFqdEZTMjFETjBJc2FVSkJRV2RDTzBWQlEyaENMRzFDUVVGclFqdEZRVU5zUWl4VlFVRlRPMFZCUTFRc1UwRkJUenRGUVVOUUxIbERRVUZuUXp0VlFVRm9ReXhwUTBGQlowTXNSVUZEYmtNN08wRkJRMFE3UlVGRFNTeG5Ra0ZCWlR0RlFVTm1MRTlCUVUwN1JVRkRUaXhYUVVGVk8wVkJRMVlzWVVGQldUdEZRVU5hTEdsRFRHeERNRUk3UlV0dFF6RkNMR05CUVdFN1JVRkRZaXhwUTBGQmQwSTdWVUZCZUVJc2VVSkJRWGRDTEVWQlEzWkNPenRCUVVWTU8wVkJRMGtzVVVGQlR5eEZRVU5PT3p0QlFVVk1PMFZCUTBrc1UwRkJVU3hGUVVOUU96dEJRVVZFTEZsQlFWazdRVUZEYUVJN1JVRkZTU3h4UTBGQk5FSTdWVUZCTlVJc05rSkJRVFJDTzBWQlF6VkNMSGRHUVVOM1FqdEZRVU40UWl4dFEweHlSREJDTEVWTGMwUjZRanM3UVVGRlREdEZRVU5KTEc5RFFVRXlRanRWUVVFelFpdzBRa0ZCTWtJN1JVRkRNMElzZDBaQlEzZENPMFZCUTNoQ0xHMURURFZFTUVJc1JVczJSSHBDT3p0QlFVVk1PMFZCUTBrc1YwRkJWVHRGUVVOV0xEaENRVUUyUWl4RlFVTTFRanM3UVVGRFREdEZRVU5ETEcxQ1FVRnJRanRGUVVObUxIRkRRVUUwUWp0VlFVRTFRaXcyUWtGQk5FSTdSVUZETlVJc2FVTkJRV2RETEVWQlF5OUNPenRCUlhwR1REdEZRVU5ETEZsQlFWYzdSVUZEV0N4clFrRkJhVUk3UlVGRGFrSXNiVUpCUVd0Q0xFVkJVMnhDTzBWT1JVTTdTVTFrUmp0TlFVdEhMR3RDUVVGcFFqdE5RVU5xUWl4dlFrUlZaME03VFVOVWFFTXNZVUZCV1N4RlFVdGtMRVZCUVVFN1JVNXZRa0U3U1Uxb1EwUTdUVUZWUnl4clFrRkJhVUlzUlVGRmJrSXNSVUZCUVRzN1FVRkZSRHRGUVVORExHTkJRV0U3UlVGRFlpeHpRa0ZCWVR0RlFVRmlMSEZDUVVGaE8wVkJRV0lzWTBGQllUdEZRVU5pTEN0Q1FVRnpRanROUVVGMFFpd3lRa0ZCYzBJN1ZVRkJkRUlzZFVKQlFYTkNMRVZCUTNSQ096dEJRVVZFTzBWT2RVVkZMRzFDUVVGclFqdEZRVU5zUWl4UFFVRk5PMFZCUTA0c1VVRkJUenRGUVVOUUxGTkJRVkU3UlVGRFVpeFZRVUZUTzBWTmVrVldMSE5DUVVGaE8wVkJRV0lzY1VKQlFXRTdSVUZCWWl4alFVRmhPMFZCUTJJc0swSkJRWE5DTzAxQlFYUkNMREpDUVVGelFqdFZRVUYwUWl4MVFrRkJjMElzUlVGRGRFSTdPMEZCUlVRN1JVRkRReXhsUVVGak8wVkJRMWdzTmtSQlFUUkVPMFZCUXpWRUxHMURRVUZyUXl4RlFVTnlRenM3UVVNNVFrUTdSVUZEUXl4dlFrRkJiVUk3UlVGRGJrSXNiVUpCUVd0Q08wVkJRMnhDTEdsQ1FVRm5RanRGUVVOb1FpeHRRa0ZCYTBJN1JVRkRiRUlzVDBGQlRUdEZRVU5PTEZGQlFVODdSVUZEVUN4WFFVRlZPMFZCUTFZc1ZVRkJVenRGUVVOVUxESkNRVUZyUWp0VlFVRnNRaXh0UWtGQmEwSXNSVUZYYkVJN1JWQlpRVHRKVDJoRFJEdE5RVmRGTEd0RVFVRnBSRHROUVVOcVJDd3lRa0ZCTUVJN1RVRkRNVUlzTmtKQlFUUkNPMDFCUXpWQ0xHZERRVUVyUWp0TlFVTXZRaXhYUVVGVkxFVkJTMWdzUlVGQlFUdEZVR3RDUVR0SlQzUkRSRHROUVd0Q1JTd3lRa0ZCTUVJc1JVRkZNMElzUlVGQlFUczdRVUZGUkR0RlFVTkRMRzFDUVVGclFqdEZRVU5zUWl4UFFVRk5PMFZCUTA0c1lVRkJXVHRGUVVOYUxGTkJRVkU3UlVGRFVpeFZRVUZUTzBWQlExUXNXVUZCVnl4RlFVOVlPMFZCWWtRN1NVRlJSU3hQUVVGTkxFVkJRMDQ3UlZCRFJEdEpUMVpFTzAxQlYwVXNZMEZCWVN4RlFVVmtMRVZCUVVFN08wRkJSVVE3UlVGRFF5eGxRVUZqTzBWQlEyUXNiVUpCUVd0Q08wVkJRMnhDTEZWQlFWTTdSVUZEVkN4VlFVRlRPMFZCUTFRc2IwTkJRVEpDTzFWQlFUTkNMRFJDUVVFeVFqdEZRVU16UWl4WlFVRlhMRVZCU1ZnN1JWQm1RVHRKVDB0RU8wMUJVVVVzWTBGQllTeEZRVVZrTEVWQlFVRTdPMEZCUlVRN1JVRkRSU3h0UWtGQmEwSTdSVUZEYkVJc1ZVRkJVenRGUVVOVUxGRkJRVTg3UlVGRFVDeFRRVUZSTzBWQlExSXNhVU5CUVhkQ08xVkJRWGhDTEhsQ1FVRjNRanRGUVVONFFpeHBRa0ZCWjBJc1JVRkRha0k3TzBGQlNVRTdSVUZMUXl3MFEwRkJhVVE3VlVGQmFrUXNiME5CUVdsRUxFVkJRMnBFT3p0QlFVNUVPMFZCUzBNc1owUkJRV2xFTzFWQlFXcEVMSGREUVVGcFJDeEZRVU5xUkRzN1FVRk9SRHRGUVV0RExDdERRVUZwUkR0VlFVRnFSQ3gxUTBGQmFVUXNSVUZEYWtRN08wRkJUa1E3UlVGTFF5eHBSRUZCYVVRN1ZVRkJha1FzZVVOQlFXbEVMRVZCUTJwRU96dEJRVTVFTzBWQlMwTXNLME5CUVdsRU8xVkJRV3BFTEhWRFFVRnBSQ3hGUVVOcVJEczdRVUZPUkR0RlFVdERMR2xFUVVGcFJEdFZRVUZxUkN4NVEwRkJhVVFzUlVGRGFrUTdPMEZCVGtRN1JVRkxReXdyUTBGQmFVUTdWVUZCYWtRc2RVTkJRV2xFTEVWQlEycEVPenRCUVU1RU8wVkJTME1zYVVSQlFXbEVPMVZCUVdwRUxIbERRVUZwUkN4RlFVTnFSRHM3UVVGT1JEdEZRVXRETEN0RFFVRnBSRHRWUVVGcVJDeDFRMEZCYVVRc1JVRkRha1E3TzBGQlRrUTdSVUZMUXl4cFJFRkJhVVE3VlVGQmFrUXNlVU5CUVdsRUxFVkJRMnBFT3p0QlFVbEJPMFZCUzBVc05FTkJRV2xFTzFWQlFXcEVMRzlEUVVGcFJDeEZRVU5zUkRzN1FVRk9SRHRGUVV0RkxHZEVRVUZwUkR0VlFVRnFSQ3gzUTBGQmFVUXNSVUZEYkVRN08wRkJUa1E3UlVGTFJTd3JRMEZCYVVRN1ZVRkJha1FzZFVOQlFXbEVMRVZCUTJ4RU96dEJRVTVFTzBWQlMwVXNhVVJCUVdsRU8xVkJRV3BFTEhsRFFVRnBSQ3hGUVVOc1JEczdRVUZPUkR0RlFVdEZMQ3REUVVGcFJEdFZRVUZxUkN4MVEwRkJhVVFzUlVGRGJFUTdPMEZCVGtRN1JVRkxSU3hwUkVGQmFVUTdWVUZCYWtRc2VVTkJRV2xFTEVWQlEyeEVPenRCUVU1RU8wVkJTMFVzSzBOQlFXbEVPMVZCUVdwRUxIVkRRVUZwUkN4RlFVTnNSRHM3UVVGT1JEdEZRVXRGTEdsRVFVRnBSRHRWUVVGcVJDeDVRMEZCYVVRc1JVRkRiRVE3TzBGQlRrUTdSVUZMUlN3clEwRkJhVVE3VlVGQmFrUXNkVU5CUVdsRUxFVkJRMnhFT3p0QlFVNUVPMFZCUzBVc2FVUkJRV2xFTzFWQlFXcEVMSGxEUVVGcFJDeEZRVU5zUkRzN1FVTXpSVWc3UlVGRFF5eGpRVUZoTEVWQlowSmlPMFZCYWtKRU8wbEJSMGNzV1VGQlZ6dEpRVU5ZTEdWQlFXTTdTVkp6Um1Zc2JVSkJRV3RDTzBsQlEyeENMRTlCUVUwN1NVRkRUaXhSUVVGUE8wbEJRMUFzVTBGQlVUdEpRVU5TTEZWQlFWTTdTVkY0UmxJc2VVTkJRWGRETzBsQlEzaERMRmRCUVZVc1JVRkRWanRGVWt0RU8wbFJZa1k3VFVGWFJTeHJRa0ZCYVVJc1JVRk5iRUlzUlVGQlFUdEZVbTlDUVR0SlVYSkRSRHROUVdWRkxEaENRVUUyUWl4RlFVVTVRaXhGUVVGQk96dEJRVVZFTzBWQlEwTXNaME5CUVN0Q0xFVkJaUzlDTzBWQmFFSkVPMGxCUjBVc2JVSkJRV3RDTzBsQlEyeENMRk5CUVZFc1JVRkRVanRGUVV4R08wbEJUMFVzVTBGQlVTeEZRVU5TTzBWQlVrWTdTVUZWUlN4UFFVRk5PMGxCUTA0c2QwTkJRU3RDTzFsQlFTOUNMR2REUVVFclFpeEZRVWt2UWp0SlVqTkNRVHROVVZsR08xRkJZVWNzZVVOQlFXZERPMmRDUVVGb1F5eHBRMEZCWjBNc1JVRkZha01zUlVGQlFUczdRVUZIUmp0RlVqWkVSU3h0UWtGQmEwSTdSVUZEYkVJc1UwRkJVVHRGUVVOU0xGVkJRVk03UlVGRFZDeDVRMEZCWjBNN1ZVRkJhRU1zYVVOQlFXZERPMFZST1VScVF5eFpRVUZYTEVWQlExZzdPMEZEZUVORU8wVkJRME1zYlVKQlFXdENPMFZCUTJ4Q0xGbEJRVmM3UlVGRFdDeFZRVUZUTzBWQlExUXNVMEZCVVR0RlFVTlNMSE5DUVVGaE8wVkJRV0lzY1VKQlFXRTdSVUZCWWl4alFVRmhPMFZCUTJJc1YwRkJWVHRGUVVOV0xIVkRRVUU0UWp0TlFVRTVRaXgxUWtGQk9FSTdWVUZCT1VJc0swSkJRVGhDTEVWQmNVSTVRanRGVkhKQ1F6dEpVMUJHTzAxQlUwVXNWVUZCVXp0TlFVTlVMSE5EUVVFMlFqdGpRVUUzUWl3NFFrRkJOa0lzUlVGclFqbENMRVZCUVVFN1JWUlVRVHRKVTI1Q1JEdE5RV0ZGTEZkQlFWVXNSVUZsV0N4RlFVRkJPMFZVU0VFN1NWTjZRa1E3VFVGblFrVXNWMEZCVlN4RlFWbFlMRVZCUVVFN1JWUkhRVHRKVXk5Q1JEdE5RVzFDUlN4WFFVRlZPMDFCUTFZc1VVRkJUenROUVVOUUxGTkJRVkVzUlVGUFZDeEZRVUZCTzBWVVUwRTdTVk55UTBRN1RVRjNRa1VzVjBGQlZUdE5RVU5XTEZGQlFVODdUVUZEVUN4VFFVRlJMRVZCUlZRc1JVRkJRVHM3UVVGRlJEdEZRVVZETEdsQ1NtcENhME1zUlVsclFteERPenRCUVVWRU8wVkJSVU1zYzBKQlFYRkNPMFZCUTNKQ0xHRkJRVms3UlVGRFdpeGhWbXhEWjBNc1JWVXdRMmhETzBWQldrUTdTVUZQUlN4WFFVRlZMRVZCUTFZN1JVRlNSanRKUVZWRkxHRkJRVmtzUlVGRFdqczdRVUZIUmp0RlZHaEVSU3hsUzJOcFF6dEZUR0pxUXl4cFFrdGhhVU03UlVseFEyeERMSGxDUVVGM1FqdEZRVU40UWl4aFFVRlpMRVZCUTFvN08wRkRka1JFTzBWQlEwTXNWMEZCVlR0RlFVTldMR3RDVEdOclF6dEZTMkpzUXl4elFrRkJZVHRGUVVGaUxIRkNRVUZoTzBWQlFXSXNZMEZCWVR0RlFVTmlMR0ZCUVZrN1JVRkRXaXdyUWtGQmMwSTdUVUZCZEVJc01rSkJRWE5DTzFWQlFYUkNMSFZDUVVGelFqdEZRVU4wUWl4M1FrRkJaVHROUVVGbUxHOUNRVUZsTzFWQlFXWXNaMEpCUVdVc1JVRlJaanRGVm10Q1FUdEpWV2hEUkR0TlFWRkZMR2xDVEZGcFF6dE5TMUJxUXl3MFFrRkJiVUk3VlVGQmJrSXNkVUpCUVcxQ08yTkJRVzVDTEc5Q1FVRnRRaXhGUVV0d1FpeEZRVUZCTzBWV2QwSkJPMGxWZEVORU8wMUJXVVVzYTBKTVNXbERMRVZMUm14RExFVkJRVUU3TzBGRFlrUTdSVUZEUXl4dFFrRkJhMEk3UlVGRGJFSXNVMEZCVVR0RlFVTlNMRmRCUVZVN1JVRkRWaXhaUVVGWExFVkJhMEpZTzBWWVUwRTdTVmN2UWtRN1RVRk5SU3hWUVVGVE8wMUJRMVFzVVVGQlR5eEZRV1ZTTEVWQlFVRTdSVmhsUVR0SlYzSkRSRHROUVZWRkxGVkJRVk03VFVGRFZDeFJRVUZQTEVWQlYxSXNSVUZCUVR0RldHWkRPMGxYVUVZN1RVRmpSU3hWUVVGVE8wMUJRMVFzY1VOQlFUUkNPMk5CUVRWQ0xEWkNRVUUwUWl4RlFVODNRaXhGUVVGQk8wVllVMEU3U1Zka1FUdE5RVVZGTEZWQlFWTXNSVUZGVml4RlFVRkJPenRCUTNSQ1JqdEZRVU5ETEZsQlFWYzdSVUZEV0N3d1FrRkJlVUlzUlVGRmVrSTdPMEZCUlVRN1JVRkRReXhaUVVGWE8wVkJRMWdzYlVKQlFXdENPMFZCUTJ4Q0xGVkJRVk03UlVGRFZDeFJRVUZQTzBWQlExQXNVMEZCVVR0RlFVTlNMRmRCUVZVN1JVRkRWaXh2UTBGQk1rSTdWVUZCTTBJc05FSkJRVEpDTEVWQlF6TkNPenRCUVVWRU8wVkJRME1zV1VGQlZ6dEZRVU5ZTEdsQ1FVRm5RanRGUVVOb1FpeHpRa0ZCWVR0RlFVRmlMSEZDUVVGaE8wVkJRV0lzWTBGQllUdEZRVU5pTERoQ1FVRnhRanROUVVGeVFpeDVRa0ZCY1VJN1ZVRkJja0lzYzBKQlFYRkNMRVZCZVVKeVFqdEZXaTlDUXp0SldVVkdPMDFCVFVjc2IwSlFUbWRETzAxUFQyaERMR0ZCUVZrc1JVRnpRbVFzUlVGQlFUdEZRVGRDUkR0SlFWVkZMREJDUVVGNVFqdEpRVU42UWl4elFrRkJZVHRKUVVGaUxIRkNRVUZoTzBsQlFXSXNZMEZCWVR0SlFVTmlMQ3RDUVVGelFqdFJRVUYwUWl3eVFrRkJjMEk3V1VGQmRFSXNkVUpCUVhOQ0xFVkJRM1JDTzBWQllrWTdTVUZsUlN4bFFVRmpMRVZCUldRN1JVRnFRa1k3U1VGdFFrVXNiMEpCUVRSQ08wbEJRVVVzYTBKQlFXdENPMGxCUjJwRUxEWkZRVUZuU0R0SlFVRkZMR05CUVdNN1NVRkJReXcyUWtGQk5rSTdTVUZCUXl4elJFRkJjMFE3U1VGRGNrNHNiMGhCUVcxSU8wbEJRVVVzVjBGQlZ5eEZRVXN2U0R0SldscEVPMDFaYUVKRU8xRkJlVUpITEN0Q1FVRnpRanRaUVVGMFFpd3lRa0ZCYzBJN1owSkJRWFJDTEhWQ1FVRnpRanRSUVVOMFFpdzBRa0ZCYlVJN1dVRkJia0lzZFVKQlFXMUNPMmRDUVVGdVFpeHZRa0ZCYlVJc1JVRkZjRUlzUlVGQlFUczdRVUZIUmp0RldqZERSU3haV1RoRGFVSTdSVm8zUTJwQ0xHMUNTMkZwUXp0RlQybERiRU1zTUVKQlFXOURPMFZCUTNCRExITkNRVUZoTzBWQlFXSXNjVUpCUVdFN1JVRkJZaXhqUVVGaE8wVkJRMklzWjBOQlFYVkNPMDFCUVhaQ0xITkNRVUYxUWp0VlFVRjJRaXgzUWtGQmRVSTdSVUZEZGtJc05FSkJRVzFDTzAxQlFXNUNMSFZDUVVGdFFqdFZRVUZ1UWl4dlFrRkJiVUlzUlVGSmJrSTdSVnBzUWtFN1NWbFRSRHROUVU5RkxHRkJRVmtzUlVGRllpeEZRVUZCT3p0QlFVVkVPMFZCUTBNc1YwRkJWVHRGUVVOV0xHMUNRVUZyUWp0RlFVTnNRaXhsWW14RU5FSTdSV0Z0UkRWQ0xITkNRVUZoTzBWQlFXSXNjVUpCUVdFN1JVRkJZaXhqUVVGaE8wVkJRMklzWjBOQlFYVkNPMDFCUVhaQ0xITkNRVUYxUWp0VlFVRjJRaXgzUWtGQmRVSTdSVUZEZGtJc05FSkJRVzFDTzAxQlFXNUNMSFZDUVVGdFFqdFZRVUZ1UWl4dlFrRkJiVUlzUlVGVmJrSTdSVUZvUWtRN1NVRlJSeXh0UWtGQmEwSXNSVUZEYmtJN1JVRlVSanRKUVZkRkxEQkNRVUY1UWl4RlFVTjZRanRGV25SRFJEdEpXVEJDUkR0TlFXTkZMRmRCUVZVc1JVRkZXQ3hGUVVGQk96dEJRVVZFTzBWQlEwTXNXVUZCVnp0RlFVTllMR05CUVdFN1JVRkRZaXhsUVVGak8wVkJRMlFzYTBKQlFXbENMRVZCVDJwQ08wVmFka1JCTzBsWk5FTkVPMDFCVFVVc1pVRkJZeXhGUVV0bUxFVkJRVUU3UlZwcVJFRTdTVmx6UTBRN1RVRlRSU3hqUVVGaExFVkJSV1FzUlVGQlFUczdRVUZGUkR0RlFVTkRMR2RDUVVGUE8wMUJRVkFzV1VGQlR6dFZRVUZRTEZGQlFVODdSVUZEVUN4WFFVRlZPMFZCUTFZc2FVSkJRV2RDTzBWQlEyaENMRzFDUVVGclFpeEZRVWxzUWp0RldtcEZRVHRKV1hsRVJEdE5RVTFGTEZsQlFWY3NSVUZGV2l4RlFVRkJPenRCUVVWRU8wVkJRME1zTUVKQlFYbENMRVZCUTNwQ096dEJRVVZFTzBWQlEwTXNNRUpCUVhsQ0xFVkJRM3BDT3p0QlEzcEhSRHRGUVVORExHMUNRVUZyUWp0RlFVTnNRaXh6UWtGQllUdEZRVUZpTEhGQ1FVRmhPMFZCUVdJc1kwRkJZVHRGUVVOaUxITkNVbUZyUXp0RlVWcHNReXg1UTBGQmRVTTdSVUZEZGtNc1owSkJRV1U3UlVGRFppeFpRVUZYTEVWQmFVSllPMFZCZGtKRU8wbEJVVVVzWlVGQll6dEpRVU5rTEZsQlFWYzdTVUZEV0N4WlFVRlhPMGxCUTFnc1dVRkJWenRKUVVOWUxESkRaRTRyUWp0SlkwOHZRaXh0UWtGQmEwSTdTVUZEYkVJc1VVRkJUenRKUVVOUUxGTkJRVkVzUlVGRFVqdEZZbWRDUkR0SllXaERSRHROUVd0Q1JTeHhRbEpHYVVNc1JWRlBiRU1zUlVGQlFUdEZZbVZCTzBsaGRFTkVPMDFCY1VKRkxITkNVa3hwUXl4RlVVOXNReXhGUVVGQk96dEJRVVZFTzBWQlEwTXNWMEZCVlR0RlFVTldMRmxCUVZjN1JVRkRXQ3h6UWtGQllUdEZRVUZpTEhGQ1FVRmhPMFZCUVdJc1kwRkJZVHRGUVVOaUxEUkNRVUZ0UWp0TlFVRnVRaXgxUWtGQmJVSTdWVUZCYmtJc2IwSkJRVzFDTEVWQlZXNUNPMFZpVUVFN1NXRlFSRHROUVUxRkxGZEJRVlU3VFVGRFZpeFpRVUZYTzAxQlExZ3NhVUpCUVZFN1ZVRkJVaXhyUWtGQlVUdGpRVUZTTEZOQlFWRTdUVUZEVWl4blEwRkJkVUk3VlVGQmRrSXNjMEpCUVhWQ08yTkJRWFpDTEhkQ1FVRjFRaXhGUVV0NFFpeEZRVUZCTzBWaVJFRTdTV0ZpUkR0TlFWbEZMRmxCUVZjc1JVRkZXaXhGUVVGQk96dEJRVVZFTzBWQlEwTXNWMEZCVlR0RlFVTldMRmxCUVZjN1JVRkRXQ3h4UWxJMVFtdERPMFZSTmtKc1F5eHBRa0ZCWjBJN1JVRkRhRUlzWjBOa2VFTm5RenRGWTNsRGFFTXNhVUpCUVdkQ08wVkJRMmhDTEdsQ1FVRm5RanRGUVVOb1FpeHpRa0ZCWVR0RlFVRmlMSEZDUVVGaE8wVkJRV0lzWTBGQllUdEZRVU5pTERSQ1FVRnRRanROUVVGdVFpeDFRa0ZCYlVJN1ZVRkJia0lzYjBKQlFXMUNMRVZCYlVKdVFqdEZRVFZDUkR0SlFWZEZMREpDUVVFd1FqdEpRVU14UWl4blFrRkJaVHRKUVVObUxHRkJRVmtzUlVGRFdqdEZRV1JHTzBsQlowSkZMSE5DUVVGeFFpeEZRVU55UWp0RllqRkNSRHRKWVZORU8wMUJiVUpGTEZkQlFWVTdUVUZEVml4WlFVRlhPMDFCUTFnc2FVSkJRVkU3VlVGQlVpeHJRa0ZCVVR0alFVRlNMRk5CUVZFN1RVRkRVaXhuUTBGQmRVSTdWVUZCZGtJc2MwSkJRWFZDTzJOQlFYWkNMSGRDUVVGMVFqdE5RVU4yUWl4dFFrRkJhMElzUlVGTGJrSXNSVUZCUVR0RllpOUNRVHRKWVVkRU8wMUJNRUpGTEZsQlFWY3NSVUZGV2l4RlFVRkJPenRCUVVWRU8wVkJRME1zVjBGQlV6dEZRVU5VTEZsQlFWYzdSVUZEV0N4elFrRkJZVHRGUVVGaUxIRkNRVUZoTzBWQlFXSXNZMEZCWVR0RlFVTmlMR3REUVVGNVFqdE5RVUY2UWl4dFFrRkJlVUk3VlVGQmVrSXNNRUpCUVhsQ08wVkJRM3BDTERSQ1FVRnRRanROUVVGdVFpeDFRa0ZCYlVJN1ZVRkJia0lzYjBKQlFXMUNMRVZCVlc1Q08wVmlkRVJCTzBsaGRVTkVPMDFCVDBVc1YwRkJWVHROUVVOV0xGbEJRVmM3VFVGRFdDeHBRa0ZCVVR0VlFVRlNMR3RDUVVGUk8yTkJRVklzVTBGQlVUdE5RVU5TTEdkRFFVRjFRanRWUVVGMlFpeHpRa0ZCZFVJN1kwRkJka0lzZDBKQlFYVkNMRVZCUzNoQ0xFVkJRVUU3UldKb1JFRTdTV0ZwUTBRN1RVRmhSU3hYUVVGVkxFVkJSVmdzUlVGQlFUczdRVUZGUkR0RlluUkdSU3hqWVhWR2JVSTdSV0owUm01Q0xHVmhjMFp0UWp0RlFVTndRaXcyUTJSd1JtZERPMFZqY1Vab1F5eHRRa0ZCYTBJN1JVRkRiRUlzYVVKQlFXZENPMFZCUTJoQ0xHdERRVUZwUXl4RlFXRnFRenRGWW5CRlFUdEpZV3RFUkR0TlFVOUZMR2xDUVVGblFpeEZRVmRxUWl4RlFVRkJPMFZCYkVKRU8wbEJWVVVzTkVOa05VWXJRaXhGWTIxSEwwSTdTVUZxUWtZN1RVRlpSeXhsWkRGR01FSXNSV015UmpGQ08wbEJZa2c3VFVGbFJTeFhRVUZWTEVWQlExUTdPMEZCU1VnN1JVRkRReXh6UWtGQmNVSTdSV0l6UjNCQ0xGbGhORWRwUWp0RllqTkhha0lzWVdFeVIybENPMFZCUTJ4Q0xHRmtla2RuUXp0Rll6QkhhRU1zYzBKQlFXRTdSVUZCWWl4eFFrRkJZVHRGUVVGaUxHTkJRV0U3UlVGRFlpeG5RMEZCZFVJN1RVRkJka0lzYzBKQlFYVkNPMVZCUVhaQ0xIZENRVUYxUWp0RlFVTjJRaXcwUWtGQmJVSTdUVUZCYmtJc2RVSkJRVzFDTzFWQlFXNUNMRzlDUVVGdFFqdEZRVU51UWl4MVFrRkJjMElzUlVGTmRFSTdSVUZpUkR0SllqRkhSU3hqWVcxSWIwSTdTV0pzU0hCQ0xHZENZV3RJTmtJN1NVRkROMElzWVVGQldUdEpRVU5hTEhsQ1FVRjNRaXhGUVVONFFqczdRVU40U0VZN1JVRkRReXh6UWtGQllUdEZRVUZpTEhGQ1FVRmhPMFZCUVdJc1kwRkJZVHRGUVVOaUxHZERRVUYxUWp0TlFVRjJRaXh6UWtGQmRVSTdWVUZCZGtJc2QwSkJRWFZDTzBWQlEzWkNMRFJDUVVGdFFqdE5RVUZ1UWl4MVFrRkJiVUk3VlVGQmJrSXNiMEpCUVcxQ08wVkJRMjVDTEdkQ1FVRmxPMFZCUTJZc1QwRkJUVHRGUVVOT0xGTkJRVkU3UlVGRFVpeFhRVUZWTzBWQlExWXNhVUpCUVdkQ08wVmtUbVlzV1dOUGFVSTdSV1JPYWtJc1lXTk5hVUk3UlVGRGJFSXNkVU5tVVRaQ0xFVmxSamRDTzBWa1VrTTdTV05TUmp0TlFWbEZMRlZCUVZNN1RVRkRWQ3h2UTBGQk1rSTdZMEZCTTBJc05FSkJRVEpDTzAxQlF6TkNMR05CUVdFc1JVRkZaQ3hGUVVGQk96dEJRVU5FTzBWQlEwa3NaMEpCUVdVN1JVRkRaaXhQUVVGTk8wVkJRMDRzWVVGQldUdEZRVU5hTEdGQlFWazdSVUZEV2l4dlEyWktNRUk3UldWTE1VSXNXVUZCVnp0RlFVTllMSFZDUVVGelFpeEZRVU42UWpzN1FVRkRSRHRGUVVOSkxGRkJRVTg3UlVGRFVDeHhRMEZCTkVJN1ZVRkJOVUlzTmtKQlFUUkNMRVZCUXpOQ096dEJRVVZNTzBWQlEwa3NVMEZCVVR0RlFVTlNMRzlEUVVFeVFqdFZRVUV6UWl3MFFrRkJNa0lzUlVGRE1VSTdPMEZCUTB3N1JVRkRReXhYUVVGVkxFVkJRMVk3TzBGQlEwUXNZVUZCWVR0QlFVTmlPMFZCUTBNc09FVkJRWGxGTzFWQlFYcEZMSE5GUVVGNVJUdEZRVU42UlN4elEwRkJOa0k3VlVGQk4wSXNPRUpCUVRaQ0xFVkJRemRDT3p0QlFVTkVPMFZCUTBNc2FVcEJReXRFTzFWQlJDOUVMSGxKUVVNclJEdEZRVU12UkN4elEwRkJOa0k3VlVGQk4wSXNPRUpCUVRaQ0xFVkJRM3BDT3p0QlFVVk1PMFZCUTBrc2EwcEJReXRFTzFWQlJDOUVMREJKUVVNclJEdEZRVU5zUlN4elEwRkJOa0k3VlVGQk4wSXNPRUpCUVRaQ0xFVkJRM3BDT3p0QlFVTk1PMFZCUTBrc05rVkJRWGRGTzFWQlFYaEZMSEZGUVVGM1JUdEZRVU40UlN4elEwRkJOa0k3VlVGQk4wSXNPRUpCUVRaQ0xFVkJRelZDT3p0QlFVTk1MRmxCUVZrN1FVRkRXanRGUVVORExHdEdRVUUyUlR0VlFVRTNSU3d3UlVGQk5rVTdSVUZETjBVc2MwTkJRVFpDTzFWQlFUZENMRGhDUVVFMlFpeEZRVU0zUWpzN1FVRkRSRHRGUVVOSkxEWkZRVUYzUlR0VlFVRjRSU3h4UlVGQmQwVTdSVUZEZUVVc2MwTkJRVFpDTzFWQlFUZENMRGhDUVVFMlFpeEZRVU0xUWpzN1FVRkRURHRGUVVWSkxEUkpRVU41UkR0VlFVUjZSQ3h2U1VGRGVVUTdSVUZETlVRc2MwTkJRVFpDTzFWQlFUZENMRGhDUVVFMlFpeEZRVU42UWpzN1FVRkZURHRGUVVOSkxEWkpRVU41UkR0VlFVUjZSQ3h4U1VGRGVVUTdSVUZETlVRc2MwTkJRVFpDTzFWQlFUZENMRGhDUVVFMlFpeEZRVU42UWpzN1FVTTVSVXc3UldaRlJTeGpTMk5wUXp0RlRHSnFReXhwUWt0aGFVTTdSVlZrYkVNc2JVSkJRV3RDTEVWQlEyeENPenRCUVVWRU8wVkJRME1zWlVGQll6dEZaa3BpTEZsbFMybENPMFZtU21wQ0xHRmxTV2xDTzBWQlEyeENMSE5DUVVGaE8wVkJRV0lzY1VKQlFXRTdSVUZCWWl4alFVRmhPMFZCUTJJc1owTkJRWFZDTzAxQlFYWkNMSE5DUVVGMVFqdFZRVUYyUWl4M1FrRkJkVUk3UlVGRGRrSXNORUpCUVcxQ08wMUJRVzVDTEhWQ1FVRnRRanRWUVVGdVFpeHZRa0ZCYlVJN1JVRkRia0lzYlVKQlFXdENPMFZCUTJ4Q0xGRkJRVTg3UlVGRFVDeFBRVUZOTEVWQmVVSk9PMFZCYWtORU8wbEJWVVVzYlVOQlFUQkNPMWxCUVRGQ0xESkNRVUV3UWp0SlFVTXhRaXgxUWtGQmMwSXNSVUZEZEVJN1JVRmFSanRKUVdORkxIZERRVUVyUWp0WlFVRXZRaXhuUTBGQkswSTdTVUZETDBJc2RVSkJRWE5DTEVWQlEzUkNPMFZCYUVKR08wbEJhMEpGTEhORFFVRTJRanRaUVVFM1FpdzRRa0ZCTmtJN1NVRkROMElzZFVKQlFYTkNMRVZCUTNSQ08wVkJjRUpHTzBsQmMwSkZMR2RFUVVGMVF6dFpRVUYyUXl4M1EwRkJkVU03U1VGRGRrTXNjME5CUVRaQ08xbEJRVGRDTERoQ1FVRTJRaXhGUVVNM1FqdEZRWGhDUmp0SlFUQkNSU3hwUkVGQmQwTTdXVUZCZUVNc2VVTkJRWGRETzBsQlEzaERMSE5EUVVFMlFqdFpRVUUzUWl3NFFrRkJOa0lzUlVGRE4wSTdSVUUxUWtZN1NVRTRRa1VzYVVSQlFYZERPMWxCUVhoRExIbERRVUYzUXp0SlFVTjRReXh6UTBGQk5rSTdXVUZCTjBJc09FSkJRVFpDTEVWQlF6ZENPenRCUVVkR08wVkJRME1zWlVGQll6dEZablpEWWl4alMyTnBRenRGVEdKcVF5eHBRa3RoYVVNN1JWVXlRbXhETEhOQ1FVRmhPMFZCUVdJc2NVSkJRV0U3UlVGQllpeGpRVUZoTzBWQlEySXNaME5CUVhWQ08wMUJRWFpDTEhOQ1FVRjFRanRWUVVGMlFpeDNRa0ZCZFVJN1JVRkRka0lzTkVKQlFXMUNPMDFCUVc1Q0xIVkNRVUZ0UWp0VlFVRnVRaXh2UWtGQmJVSTdSVUZEYmtJc2JVSkJRV3RDTzBWQlEyeENMRmRCUVZNN1JVRkRWQ3hUUVVGUkxFVkJlVU5TTzBWbWFrWkRPMGxsWjBOR08wMUJWVVVzVlVGQlV6dE5RVU5VTEhGRFFVRTBRanRqUVVFMVFpdzJRa0ZCTkVJc1JVRnpRemRDTEVWQlFVRTdSV1o2UkVFN1NXVlJSRHROUVdORkxGVkJRVk03VFVGRFZDeFJRVUZQTEVWQmEwTlNMRVZCUVVFN1JXWnVSRUU3U1dWRlJEdE5RV3RDUlN4UlFVRlBPMDFCUTFBc1ZVRkJVeXhGUVRoQ1ZpeEZRVUZCTzBWQmFrUkVPMGxCYzBKRkxHMURRVUV3UWp0WlFVRXhRaXd5UWtGQk1FSTdTVUZETVVJc2RVSkJRWE5DTzBsQlEzUkNMSEZFUVVFMFF6dFpRVUUxUXl3MlEwRkJORU1zUlVGRE5VTTdSVUY2UWtZN1NVRXlRa1VzZDBOQlFTdENPMWxCUVM5Q0xHZERRVUVyUWp0SlFVTXZRaXgxUWtGQmMwSTdTVUZEZEVJc2EwTkJRWGxDTzFsQlFYcENMREJDUVVGNVFpeEZRVU42UWp0RlFUbENSanRKUVdkRFJTeHpRMEZCTmtJN1dVRkJOMElzT0VKQlFUWkNPMGxCUXpkQ0xIVkNRVUZ6UWp0SlFVTjBRaXh6UkVGQk5rTTdXVUZCTjBNc09FTkJRVFpETEVWQlF6ZERPMFZCYmtOR08wbEJjVU5GTEc5RVFVRXlRenRaUVVFelF5dzBRMEZCTWtNN1NVRkRNME1zYzBOQlFUWkNPMWxCUVRkQ0xEaENRVUUyUWl4RlFVTTNRanRGUVhaRFJqdEpRWGxEUlN4elJFRkJOa003V1VGQk4wTXNPRU5CUVRaRE8wbEJRemRETEdkRFFVRjFRanRaUVVGMlFpeDNRa0ZCZFVJN1NVRkRka0lzYzBOQlFUWkNPMWxCUVRkQ0xEaENRVUUyUWl4RlFVTTNRanRGUVRWRFJqdEpRVGhEUlN4eFJFRkJORU03V1VGQk5VTXNOa05CUVRSRE8wbEJRelZETEhORFFVRTJRanRaUVVFM1FpdzRRa0ZCTmtJc1JVRkROMEk3TzBGQlJVWTdSVUZGUXl4elFrRkJZVHRGUVVGaUxIRkNRVUZoTzBWQlFXSXNZMEZCWVR0RlFVTmlMQ3RDUVVGelFqdE5RVUYwUWl3eVFrRkJjMEk3VlVGQmRFSXNkVUpCUVhOQ08wVkJRM1JDTEdkRFFVRjFRanROUVVGMlFpeHpRa0ZCZFVJN1ZVRkJka0lzZDBKQlFYVkNPMFZCUTNaQ0xEUkNRVUZ0UWp0TlFVRnVRaXgxUWtGQmJVSTdWVUZCYmtJc2IwSkJRVzFDTEVWQlEyNUNPenRCUVVWRU8wVkJSVU1zYzBKQlFXRTdSVUZCWWl4eFFrRkJZVHRGUVVGaUxHTkJRV0U3UlVGRFlpdzBRa0ZCYlVJN1RVRkJia0lzZFVKQlFXMUNPMVZCUVc1Q0xHOUNRVUZ0UWp0RlFVTnVRaXhoYUVKb1IyZERPMFZuUW1sSGFFTXNhMEpCUVdsQ0xFVkJUMnBDTzBWQldrUTdTVUZQUlN4aFFVRlpMRVZCUTFvN1JVRlNSanRKUVZWRkxHRkJRVmtzUlVGRFdqczdRVU0zUjBZN1JVRkRReXhuUWxobGEwTTdSVmRrYkVNc2MwSkJRV0U3UlVGQllpeHhRa0ZCWVR0RlFVRmlMR05CUVdFN1JVRkRZaXdyUWtGQmMwSTdUVUZCZEVJc01rSkJRWE5DTzFWQlFYUkNMSFZDUVVGelFqdEZRVU4wUWl3MFFrRkJiVUk3VFVGQmJrSXNkVUpCUVcxQ08xVkJRVzVDTEc5Q1FVRnRRaXhGUVVOdVFqczdRVUZGUkR0RmFFSk1SU3hwUWt0amFVTTdSVXhpYWtNc2EwSkxZV2xETzBWWFVHeERMRFpDUVVFMFFqdEZRVU0xUWl3MFFrRkJNa0k3UlVGRE0wSXNkVUpCUVhOQ08wVkJRM1JDTEdsQ1FVRm5RanRGUVVOb1FpeHJRa0ZCYVVJN1JVRkRha0lzYlVKQlFXdENMRVZCU1d4Q08wVm9RbTlDUVR0SlowSXZRa1E3VFdoQ1RFVXNhVUpMWTJsRE8wMU1ZbXBETEd0Q1MyRnBReXhGVjBWc1F5eEZRVUZCT3p0QlFVVkVPMFZCUTBNc1owSkJRV1VzUlVGRFpqczdRVUZGUkR0RlFVTkRMRmxCUVZjN1JVRkRXQ3h0UWtGQmEwSXNSVUZEYkVJN08wRkJSVVE3UlVGRFF5eGhha0o0UW1kRE8wVnBRbmxDYUVNc2JVSkJRV3RDTEVWQlEyeENPenRCUVVWRU8wVkJSVU1zY1VKWWNFSnJRenRGVjNGQ2JFTXNhVUpCUVdkQ08wVkJRMmhDTEdsQ1FVRm5RanRGUVVOb1FpeHZRa0ZCYlVJN1JVRkRia0lzWVdwQ2JFTm5ReXhGYVVKelEyaERPMFZvUWs1Qk8wbG5Ra3BFTzAxQlVVVXNiMEpZTVVKcFF5eEZWelJDYkVNc1JVRkJRVHM3UVVGRlJEdEZRVU5ETEdkQ1dDOUNhME03UlZkblEyeERMR2REYWtJeFEyZERPMFZwUWpKRGFFTXNhVUpCUVdkQ08wVkJRMmhDTEdsQ1FVRm5RaXhGUVVOb1FqczdRVUZGUkR0RlFVTkRMR0ZxUW1oRVowTTdSV2xDYVVSb1F5eHBRa0ZCWjBJN1JVRkRhRUlzYzBKQlFYRkNPMFZCUTNKQ0xGbEJRVmNzUlVGRFdEczdRVU14UkVRN1JVRkRReXh4UWtGQldUdE5RVUZhTEhGQ1FVRlpPMVZCUVZvc1lVRkJXVHRGUVVOYUxITkNRVUZoTzBWQlFXSXNjVUpCUVdFN1JVRkJZaXhqUVVGaE8wVkJRMklzYTBOQlFYbENPMDFCUVhwQ0xHMUNRVUY1UWp0VlFVRjZRaXd3UWtGQmVVSTdSVUZEZWtJc2JVSkJRV3RDTzBWQlEyeENMR2RDUVVGbE8wVkJRMllzYjBKQlFXMUNPMFZCUTJ4Q0xEWkNRVUZ2UWp0TlFVRndRaXgzUWtGQmIwSTdWVUZCY0VJc2NVSkJRVzlDTEVWQlEzSkNPenRCUVVWRU8wVkJRME1zYlVKQlFXdENPMFZCUTJ4Q0xGVkJRVk03UlVGRFVpeFhRVUZWTzBWQlExWXNWMEZCVlR0RlFVTlNMSEZEUVVFMFFqdFZRVUUxUWl3MlFrRkJORUlzUlVFd1F5OUNPMFZxUW1wRVF6dEphVUpGUmp0TlFVOUpMR0ZCUVZrc1JVRjNRMllzUlVGQlFUdEZha0o2UWtFN1NXbENkRUpFTzAxQlZVa3NWMEZCVlR0TlFVTldMSE5DUVVGaE8wMUJRV0lzY1VKQlFXRTdUVUZCWWl4alFVRmhPMDFCUTJJc2EwTkJRWGxDTzFWQlFYcENMRzFDUVVGNVFqdGpRVUY2UWl3d1FrRkJlVUk3VFVGRGVrSXNORUpCUVcxQ08xVkJRVzVDTEhWQ1FVRnRRanRqUVVGdVFpeHZRa0ZCYlVJN1RVRkRja0lzYjBOQlFUSkNPMk5CUVROQ0xEUkNRVUV5UWp0TlFVTjZRaXd3UW14Q1VEQkNPMDFyUWxFeFFpeHZRbHBXSzBJN1RWbGhMMElzSzBOQlFUSkRMRVZCTkVJNVF5eEZRVUZCTzBWQkwwTkVPMGxCYzBKSkxHZENRVUZsTzBsQlEyWXNVMEZCVHl4RlFVTlNPMFZCZUVKSU8wbEJNRUpKTEdkQ1FVRmxPMGxCUTJZc1QwRkJUVHRKUVVOT0xGVkJRVk03U1VGRFZDeGxRVUZqTzBsQlEyUXNkMEpCUVdVN1dVRkJaaXhuUWtGQlpUdEpRVU5tTEZkQlFWVTdTVUZEVml4MVFrRkJjMElzUlVGRGRrSTdSVUZxUTBnN1NVRnRRMGtzYTBSQlFYbERPMWxCUVhwRExEQkRRVUY1UXp0SlFVTjZReXh6UTBGQk5rSTdXVUZCTjBJc09FSkJRVFpDTEVWQlRUbENPMGxxUW5CQ1JqdE5hVUowUWtRN1VVRjFRMUVzWjBKQlFXVXNSVUZGYkVJc1JVRkJRVHRGUVhwRFREdEpRVFJEU1N4dFJFRkJNRU03V1VGQk1VTXNNa05CUVRCRE8wbEJRekZETEhORFFVRTJRanRaUVVFM1FpdzRRa0ZCTmtJc1JVRkRPVUk3TzBGQlIwZzdSVUZEUlN4alFVRmhMRVZCYzBOa08wVnFRbXhGUVR0SmFVSXlRa1E3VFVGSlRTeG5Ra0ZCWlN4RlFVVnNRaXhGUVVGQk8wVkJUa2c3U1VGUlNTeFpRVUZYTzBsQlExZ3NZVUZCV1R0SlFVTmFMRmRCUVZVN1NVRkRWaXd3UWtGQmVVSTdTVUZEZWtJc1YwRkJWVHRKUVVOV0xHMUNRVUZyUWp0SlFVTnNRaXhUUVVGUk8wbEJRMUlzVVVGQlR6dEpRVU5RTEc5RFFVRXlRanRaUVVFelFpdzBRa0ZCTWtJN1NVRkRNMElzWTBGQllTeEZRVWxrTzBscVFtaEVSanROYVVJeVFrUTdVVUZ0UWswc1pVRkJZeXhGUVVWcVFpeEZRVUZCTzBWcVFtaEVSanRKYVVJeVFrUTdUVUYxUWtrc1pVRkJZenROUVVOa0xHMUNRVUZyUWp0TlFVTnNRaXhUUVVGUk8wMUJRMUlzVjBGQlZUdE5RVU5XTEZsQlFWYzdUVUZEV0N4dlEwRkJNa0k3WTBGQk0wSXNORUpCUVRKQ08wMXFRbkpHTjBJc1owSkxZMmxETzAxTVltcERMR2xDUzJGcFF6dE5XWGxGTDBJc01rSkJRVEJDTzAxQlF6RkNMREJDYkVKNFJUQkNPMDFyUWpKRk1VSXNLME5CUVRKRExFVkJTemxETEVWQlFVRTdPMEZxUW14RlFUdEZhVUp2UlVRN1NVRkZTU3hYUVVGVkxFVkJTMklzUlVGQlFUczdRV3BDY2tWQk8wVnBRamhFUkR0SlFVdEpMRmRCUVZVc1JVRkZZaXhGUVVGQk96dEJRVVZFTzBWQlEwTXNhMEpCUVdsQ08wVkJRMnBDTEcxQ1FVRnJRanRGUVVOcVFpeHZRMEZCYlVNc1JVRnBRbkJETzBWQmNFSkVPMGxCUzBNc2FVSkJRV2RDTzBsQlEyaENMR1ZCUVhWQ0xFVkJTWFJDTzBscVFuWkdSRHROYVVJMlJVUTdVVUZSVFN4aGJFSXZSekpDTEVWclFtbElMMElzUlVGQlFUdEZRVlpHTzBsQldVVXNaME5CUVhkRExFVkJTWGhETzBscVFqZEdSRHROYVVJMlJVUTdVVUZqVFN4dFFrRkJhMElzUlVGRmRFSXNSVUZCUVR0RmFrSTNSa1E3U1dsQ05rVkVPMDFCYTBKSkxHMUNRVUZyUWl4RlFVVnlRaXhGUVVGQk96dEJRVVZFTzBWQlEwTXNaMEphY0VoclF6dEZXWEZJYkVNc2FVSkJRV2RDTzBWQlEyaENMR3RDUVVGcFFqdEZRVU5xUWl4clFrRkJhVUk3UlVGRGFrSXNaV3hDT1VnMFFpeEZhMEpyU1RWQ08wVnFRalZIUVR0SmFVSnRSMFE3VFVGUFNTeG5RMnhDY0VrMlFpeEZhMEp6U1doRExFVkJRVUU3TzBGQlJVUTdSVUZEUnl4WFFVRlZPMFZCUTFRc2IwSkJRVzFDTzBWQlEyNUNMSEZDUVVGdlFqdEZRVU53UWl4MVFrRkJjMElzUlVGTmVrSTdSV3BDZUVoQk8wbHBRamhIUkR0TlFVMUxMRmRCUVZVN1RVRkRWaXhyUWtGQmFVSTdUVUZEYWtJc1pVRkJZeXhGUVVWc1FpeEZRVUZCT3p0QlFVVkVPMFZCUTBNc1kwRkJZVHRGUVVOaUxHZEVRVUVyUXl4RlFWVXZRenRGUVZwRU8wbEJTVVVzWlVGQll5eEZRVU5rTzBWQlRFWTdTVUZQUlN4dlFrRkJiVUlzUlVGRGJrSTdSVUZTUmp0SlFWVkZMRlZCUVZNc1JVRkRWRHM3UVVGSFJqdEZRVU5ETEdWQlFXTTdSVUZEWWl4blFsb3hTbWxETzBWWk1rcHNReXhwUWtGQlowSTdSVUZEYUVJc2EwSkJRV2xDTzBWQlEycENMR2xDUVVGblFqdEZRVU5vUWl3NFFrRkJOa0lzUlVGRE4wSTdPMEZCUlVRN1JVRkRReXhuUWtGQlpUdEZRVU5rTEdsQ1FVRm5RanRGUVVOcVFpeHJRa0ZCYVVJN1JVRkRha0lzYVVKQlFXZENPMFZCUTJoQ0xHVkJRWFZDTEVWQlEzWkNPenRCUVVWRU8wVkJRME1zY1VOQlFXOURPMFZCUTNCRExIZENRVUYxUWp0RlFVTjJRaXh0UWtGQmEwSTdSVUZ0UW14Q0xHOUNRVUZ0UWl4RlFVTnVRanRGUVhaQ1JEdEpRVXRGTEhGRFFVRnZRenRKUVVOcVF5eDNRa0ZCZFVJN1NVRkRlRUlzYlVKQlFXdENPMGxCUTJ4Q0xHMUNRVUZyUWl4RlFVTnVRanRGUVZSSU8wbEJWMHNzZFVKQlFYTkNPMGxCUTNSQ0xHVkJRV003U1VGRFppeGhRVUZaTzBsQlExZ3NiVUpCUVd0Q08wbEJRMjVDTEdWQlFXTTdTVUZEWkN4UFFVRk5PMGxCUTA0c1kwRkJZVHRKUVVOaUxGVkJRVk03U1VGRFZDeHRRa0ZCYTBJN1NVRkRiRUlzVjBGQlZTeEZRVU5ZT3p0QlFVbElPMFZCUTBNc1dVRkJWenRGUVVOWUxHTkJRV0U3UlVGRFlpeGhRVUZaTzBWQlExb3NjMEpCUVhGQ08wVkJRM0pDTEd0Q1FVRnBRanRGUVVOcVFpeHRRa0ZCYTBJc1JVRlpiRUk3UlVGc1FrUTdTVUZSUlN4WlFVRlhPMGxCUTFnc1pVRkJZenRKUVVOa0xEQkNRVUY1UWp0SlFVTjZRaXh0UWtGQmEwSTdTVUZEYkVJc1QwRkJUVHRKUVVOT0xGRkJRVTg3U1VGRFVDeFZRVUZUTzBsQlExUXNXVUZCVnp0SlFVTllMRmRCUVZVc1JVRkRWanM3UVVGSFJqczdSVUZGUlN4dlEwRkJiVU1zUlVGRGNFTTdPMEZCUTBRc2IwaEJRVzlJTzBGQlEzQklPMFZCUTBVc2IwSkJRVzFDTzBWQlEyNUNMR2RIUVVFclJqdEZRVU12Uml4eFFrRkJiMElzUlVGRGNrSTdPMEZCUlVRN1JVRkRSU3hsUVVGakxFVkJRMlk3TzBGQlJVUXNNa1JCUVRKRU8wRkJRek5FTzBWQlEwVXNZMEZCWVR0RlFVTmlMR2xDUVVGblFqdEZRVU5vUWl4bFFVRmpMRVZCUTJZN08wRkJSVVE3T3pzN096czdPenM3UlVGVlJTeHJRa0ZCYVVJN1JVRkRha0lzTUVKQlFYbENMRVZCUlRGQ096dEJRVVZFTzBWQlJVVXNiMEpCUVc5Q08wVkJSWEJDTzBsQlEwVXNaVUZCWXl4RlFVTm1PMFZCUlVRc1lVRkJZVHRGUVVWaU8wbEJRMFVzWlVGQll5eEZRVU5tTzBWQlJVUXNZVUZCWVR0RlFVVmlPMGxCUTBVc1pVRkJZeXhGUVVObU8wVkJSVVFzWlVGQlpUdEZRVVZtTzBsQlEwVXNaVUZCWXl4RlFVTm1PMFZCUlVRc2JVSkJRVzFDTzBWQlJXNUNPMGxCUTBVc1pVRkJZeXhGUVVObU8wVkJSVVFzYVVKQlFXbENPMFZCUldwQ08wbEJRMFVzWlVGQll5eEZRVU5tTzBWQlJVUXNkVUpCUVhWQ08wVkJSWFpDTzBsQlEwVXNaVUZCWXl4RlFVTm1PMFZCUlVRc2QwSkJRWGRDTzBWQlJYaENPMGxCUTBVc1pVRkJZeXhGUVVObU8wVkJSVVFzY1VKQlFYRkNPMFZCUlhKQ08wbEJRMFVzWlVGQll5eEZRVU5tTzBWQlJVUXNNa0pCUVRKQ08wVkJSVE5DTzBsQlEwVXNaVUZCWXl4RlFVTm1PMFZCUlVRc05FSkJRVFJDTzBWQlJUVkNPMGxCUTBVc1pVRkJZeXhGUVVObU8wVkJSVVFzYVVKQlFXbENPMFZCUldwQ08wbEJRMFVzWlVGQll5eEZRVU5tTzBWQlJVUXNiVUpCUVcxQ08wVkJSVzVDTzBsQlEwVXNaVUZCWXl4RlFVTm1PMFZCUlVRc2JVSkJRVzFDTzBWQlJXNUNPMGxCUTBVc1pVRkJZeXhGUVVObUxFVkJRVUU3TzBGRE9WWklPMFZCUTBNc1kwRkJZVHRGYkVKQldpeFphMEpEYVVJN1JXeENRV3BDTEZsclFrRnpRanRGYkVKblIzUkNMRzFDUVVGclFqdEZRVU5zUWl4VFFVRlJPMFZCUTFJc1ZVRkJVenRGUVVOVUxIbERRVUZuUXp0VlFVRm9ReXhwUTBGQlowTTdSV3RDYWtkcVF5eFpia0pEWjBNN1JXMUNRV2hETEZkQlFWVXNSVUZEVmpzN1FVRkZSRHRGYkVKUVJTeGpTMk5wUXp0RlRHSnFReXhwUWt0aGFVTTdSV0ZNYkVNc1lXNUNUR2RETEVWdFFsTm9RenRGYkVKcFFrRTdTV3RDZGtKRU8wMXNRbEJGTEdsQ1MyTnBRenROVEdKcVF5eHJRa3RoYVVNc1JXRkViRU1zUlVGQlFUczdRVUZGUkR0RlFVTkRMR05CUVdFN1JXeENhRUphTEZsclFtbENhVUk3Uld4Q2FFSnFRaXhoYTBKblFuVkNPMFZCUTNoQ0xHMUNRVUZyUWp0RlFVTnNRaXhUUVVGUk8wVkJRMUlzVlVGQlV6dEZRVU5VTEhsRFFVRm5RenRWUVVGb1F5eHBRMEZCWjBNN1JVRkRhRU1zV1c1Q2JFSm5RenRGYlVKdFFtaERMRmRCUVZVc1JVRkRWanM3UVVGRlJEdEZRVU5ETEdGQlFWazdSV3hDTTBKWUxGbHJRalJDYVVJN1JXeENNMEpxUWl4aGEwSXlRbWxDTzBWQlEyeENMRmx1UW5wQ1owTTdSVzFDTUVKb1F5eDVRa0ZCZDBJc1JVRkRlRUk3TzBGQlEwUTdSVUZEUXl4aFFVRlpPMFZzUW1wRFdDeFphMEpyUTJsQ08wVnNRbXBEYWtJc1lXdENhVU5wUWp0RlFVTnNRaXhaYmtJdlFtZERPMFZ0UW1kRGFFTXNlVUpCUVhkQ08wVkJRM2hDTEdkRFFVRjFRanRWUVVGMlFpeDNRa0ZCZFVJc1JVRkRka0k3TzBGQlJVUTdSV3hDZUVORkxHTnJRbmxEYlVJN1JXeENlRU51UWl4bGEwSjNRekpDTzBWQlF6VkNMR05CUVdFN1JVRkRZaXh0UWtGQmEwSTdSVUZEYkVJc2NVSkJRVzlDTzBWQlEzQkNMSE5DUVVGeFFqdEZRVU55UWl4MVFrRkJjMEk3UlVGRGRFSXNlVUpCUVhkQ0xFVkJTWGhDTzBWc1FtWkJPMGxyUWtsRU8wMUJVMFVzWTBGQllTeEZRVVZrTEVWQlFVRTdPMEZCUlVRN1JVRkRReXhqUVVGaE8wVkJRMklzWTBGQllUdEZRVU5pTEdOQlFXRTdSVUZEWWl4blFrRkJaU3hGUVV0bU8wVnNRbWhEUVR0SmEwSjFRa1E3VFVGTlJ5eGpRVUZoTzAxQlEySXNaMEpCUVdVc1JVRkZha0lzUlVGQlFUczdRVUZGUkR0RlFVTkRMR05CUVdFN1JVRkRZaXhqUVVGaE8wVkJRMklzWlVGQmVVSXNSVUZEZWtJN08wRkJSVVE3UlVGRFF5eGpRVUZoTzBWQlEySXNiVUpCUVd0Q08wVkJRMnhDTEU5QlFVMDdSVUZEVGl4VlFVRlRPMFZCUTFRc1UwRkJVVHRGUVVOU0xGVkJRVk03UlVGRFZDeDVRMEZCWjBNN1ZVRkJhRU1zYVVOQlFXZERPMFZCUTJoRExGZEJRVlVzUlVGRFZqczdRVUZEUkR0RlFVTkRMRmRCUVZVN1JVRkRWaXg1UTBGQlowTTdWVUZCYUVNc2FVTkJRV2RETEVWQlVXaERPMFZzUWpWRVFUdEphMEpyUkVRN1RVRkpSU3hYUVVGVk8wMUJRMVlzZVVOQlFXZERPMk5CUVdoRExHbERRVUZuUXl4RlFVdHFReXhGUVVGQk8wVnNRalZFUVR0SmEwSnJSRVE3VFVGUlJTeFhRVUZWTEVWQlJWZ3NSVUZCUVRzN1FVRkZSRHRGUVVORExGbEJRVmM3UlVGRFdDeHJRbUpvUm10RE8wVmhhVVpzUXl4NVEwRkJaME03VlVGQmFFTXNhVU5CUVdkRExFVkJTV2hETzBWc1FuSkZRVHRKYTBJNFJFUTdUVUZMUlN4cFFrRkJaMElzUlVGRmFrSXNSVUZCUVRzN1FVRkZSRHRGUVVORExHVnVRblJHTmtJN1JXMUNkVVkzUWl4M1FrRkJaVHROUVVGbUxEWkNRVUZsTzFWQlFXWXNaMEpCUVdVN1JVRkRaaXg1UWtGQmQwSXNSVUZKZUVJN1JVRlFSRHRKUVV0RkxHRkJRVmtzUlVGRFdqczdRVUZIUmp0RmJFSTVSMFVzWTB0amFVTTdSVXhpYWtNc1pVdGhhVU1zUldGclIyeERPenRCUVVORU8wVnNRbXBJUlN4amEwSnJTRzFDTzBWc1FtcElia0lzWld0Q2FVZ3lRaXhGUVVNMVFqczdRVUZEUkR0RmJFSndTRVVzWlV0amFVTTdSVXhpYWtNc2EwSkxZV2xETEVWaGVVZHNRenM3UVVGRFJEdEZiRUo0U0VVc2FVSkxZMmxETzBWTVltcERMR1ZMWVdsRExFVmhORWRzUXpzN1FVRkRSRHRGYkVJelNFVXNhVUpMWTJsRE8wVk1ZbXBETEd0Q1MyRnBRenRGWVN0SGFrTXNaVUZCZVVJc1JVRkRNVUk3TzBGQlEwUTdSV3hDTDBoRkxHVkxZMmxETzBWTVltcERMR3RDUzJGcFF6dEZZVzFJYkVNc2NVSmlia2hyUXl4RllXOUliRU03TzBGQlEwUTdSV3hDYmtsRkxHbENTMk5wUXp0RlRHSnFReXhuUWt0aGFVTTdSV0YxU0d4RExEaERRVUUyUXp0RlFVTTNReXhoYmtKc1NXZERPMFZ0UW0xSmFFTXNZVUZCV1R0RlFVTmFMSGxDUVVGM1FpeEZRVU40UWpzN1FVTXpTVVE3UlVGRFF5eDFRa0ZCYzBJN1JVRkRkRUlzY1VKa1kydERPMFZqWW14RExIVkNRVUZ6UWp0RlFVTjBRaXh6UWtGQmNVSTdSVUZEY2tJc2RVSkJRWE5DTzBWQlEzUkNMRzlDWkZWclF6dEZZMVJzUXl4clFrRkJhVUk3UlVGRGFrSXNhVUpCUVdkQ08wVkJRMmhDTEdWd1FrVTBRaXhGYjBKVE5VSTdSVUZ3UWtRN1NVRlpSU3d3UWtGQmVVSXNSVUZEZWtJN1JXNUNiVUpFTzBsdFFtaERSRHROUVdWRkxIRkNaRU5wUXl4RlkwbHNReXhGUVVGQk8wVnVRbXRDUVR0SmJVSjBRMFE3VFVGclFrVXNjVUprUm1sRExFVmpTV3hETEVWQlFVRTdPMEZCUlVRN1JVRkRReXhoY0VKcVFtZERMRVZ2UW10Q2FFTTdPMEZCUlVRN1JVRkRReXgxUWtGQmMwSTdSVUZEZEVJc2NVSmtXbXRETzBWallXeERMSE5DUVVGeFFqdEZRVU55UWl4MVFrRkJjMEk3UlVGRGRFSXNaV1JtYTBNN1JXTm5RbXhETEdsQ1FVRm5RanRGUVVOb1FpeHBRa0ZCWjBJN1JVRkRhRUlzWlhCQ2VFSTBRaXhGYjBKblF6VkNPMFZCYUVKRU8wbEJWMFVzTUVKQlFYbENMRVZCUTNwQ08wVnVRa0ZFTzBsdFFscEVPMDFCWTBVc2IwSmtlRUpwUXl4Rll6QkNiRU1zUlVGQlFUczdRVU14UTBRN1JVRkRReXh6UWtGQllUdEZRVUZpTEhGQ1FVRmhPMFZCUVdJc1kwRkJZVHRGUVVOaUxGZEJRVlU3UlVGRFZpdzBRa0ZCYlVJN1RVRkJia0lzZFVKQlFXMUNPMVZCUVc1Q0xHOUNRVUZ0UWl4RlFVbHVRanRGY0VKeFEwRTdTVzlDTlVORU8wMUJTMFVzVjBGQlZTeEZRVVZZTEVWQlFVRTdPMEZCUlVRN1JVRkRReXh4UWtGQldUdE5RVUZhTEhGQ1FVRlpPMVZCUVZvc1lVRkJXU3hGUVVOYU96dEJRVVZFTzBWQlEwTXNjMEpCUVhGQ08wVkJRM0pDTEhGQ1prTnJRenRGWlVGc1F5eHBRa0ZCWjBJN1JVRkRhRUlzYVVKQlFXZENPMFZCUTJoQ0xHOUNRVUZ0UWp0RlFVTnVRaXhoY2tKaVowTTdSWEZDWTJoRExIVkNRVUZ6UWl4RlFVOTBRanRGUVdSRU8wbEJVMFVzTUVKQlFYbENMRVZCUTNwQ08wVkJWa1k3U1VGWlJTeGxja0pRTkVJc1JYRkNVVFZDT3p0QlF6RkNSanRGUVVORExITkNRVUZoTzBWQlFXSXNjVUpCUVdFN1JVRkJZaXhqUVVGaE8wVkJRMklzTkVKQlFXMUNPMDFCUVc1Q0xIVkNRVUZ0UWp0VlFVRnVRaXh2UWtGQmJVSTdSVUZEYmtJc1owTkJRWFZDTzAxQlFYWkNMSE5DUVVGMVFqdFZRVUYyUWl4M1FrRkJkVUlzUlVGWmRrSTdSVUZtUkR0SlFVdEZMREpDUVVFd1FqdEpRVU14UWl4blFrRkJaU3hGUVVObU8wVkJVRVk3U1VGVFJTeHpRa0ZCY1VJc1JVRkRja0k3UlhKQ2MwSkVPMGx4UW1oRFJEdE5RVmxGTEhkQ1FVRmxPMVZCUVdZc2IwSkJRV1U3WTBGQlppeG5Ra0ZCWlR0TlFVTm1MRzFDUVVGclFpeEZRVVZ1UWl4RlFVRkJPenRCUVVWRU8wVkJRME1zYzBKQlFYRkNPMFZCUTNKQ0xHRjBRbUpuUXp0RmMwSmphRU1zYVVKQlFXZENPMFZCUTJoQ0xHZENhRUpNYTBNN1JXZENUV3hETEd0Q1FVRnBRaXhGUVhOQ2FrSTdSVUV6UWtRN1NVRlJSU3h6UWtGQmNVSTdTVUZEY2tJc1lVRkJXVHRKUVVOYUxHbENRVUZuUWp0SlFVTm9RaXhuUW1oQ1dtbERPMGxuUW1GcVF5eHBRa0ZCWjBJc1JVRkRhRUk3UlVGaVJqdEpRV1ZGTEdOQlFXRXNSVUZEWWp0RmNrSkxSRHRKY1VKeVFrUTdUVUZ0UWtVc2FVSkJRV2RDTEVWQlVXcENPMDFCTTBKRU8xRkJjVUpITEZsQlFWY3NSVUZEV0R0TlFYUkNTRHRSUVhkQ1J5eGpRVUZoTEVWQlEySXNSVUZCUVRzN1FVRkhTRHRGUVVORExGZEJRVlU3UlVGRFZpeFpRVUZYTzBWQlExZ3NhME5CUVhsQ08wMUJRWHBDTEcxQ1FVRjVRanRWUVVGNlFpd3dRa0ZCZVVJc1JVRm5RbnBDTzBWeVFtaERRVHRKY1VKaFJEdE5RVXRGTEZkQlFWVTdUVUZEVml4WlFVRlhPMDFCUTFnc2FVSkJRVkU3VlVGQlVpeHJRa0ZCVVR0alFVRlNMRk5CUVZFN1RVRkRVaXhuUTBGQmRVSTdWVUZCZGtJc2MwSkJRWFZDTzJOQlFYWkNMSGRDUVVGMVFpeEZRVmQ0UWl4RlFVRkJPMFZ5UWpGQ1FUdEpjVUpQUkR0TlFWZEZMRmxCUVZjc1JVRlJXaXhGUVVGQk8wVkJia0pFTzBsQlkwVXNaME4wUW5KRUswSXNSWE5DYzBRdlFqdEZRV1pHTzBsQmFVSkZMR0ZCUVZrc1JVRkRXaUlzSW1acGJHVWlPaUp6Y21NdllYTnpaWFJ6TDNOMGVXeGxjeTlpYkc5bkxtMWhhVzR1YzJOemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaThxSVNCSFpXNWxjbUYwWldRZ1lua2dSbTl1ZENCVGNYVnBjbkpsYkNBb2FIUjBjSE02THk5M2QzY3VabTl1ZEhOeGRXbHljbVZzTG1OdmJTa2diMjRnVFdGeVkyZ2dPQ3dnTWpBeE9DQXFMMXh5WEc1Y2NseHVRR1p2Ym5RdFptRmpaU0I3WEhKY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0oySmxjbTVwWlhKZlpHbHpkSEpsYzNObFpDYzdYSEpjYmlBZ0lDQnpjbU02SUhWeWJDZ25MaTR2Wm05dWRITXZZbVZ5Ym1sbGNpOWlaWEp1YVdWeVpHbHpkSEpsYzNObFpDMXlaV2QxYkdGeUxYZGxZbVp2Ym5RdWQyOW1aakluS1NCbWIzSnRZWFFvSjNkdlptWXlKeWtzWEhKY2JpQWdJQ0FnSUNBZ0lIVnliQ2duTGk0dlptOXVkSE12WW1WeWJtbGxjaTlpWlhKdWFXVnlaR2x6ZEhKbGMzTmxaQzF5WldkMWJHRnlMWGRsWW1admJuUXVkMjltWmljcElHWnZjbTFoZENnbmQyOW1aaWNwTzF4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklHNXZjbTFoYkR0Y2NseHVJQ0FnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2NseHVYSEpjYm4xY2NseHVYSEpjYmtCbWIyNTBMV1poWTJVZ2UxeHlYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2RpWlhKdWFXVnlKenRjY2x4dUlDQWdJSE55WXpvZ2RYSnNLQ2N1TGk5bWIyNTBjeTlpWlhKdWFXVnlMMkpsY201cFpYSnlaV2QxYkdGeUxYSmxaM1ZzWVhJdGQyVmlabTl1ZEM1M2IyWm1NaWNwSUdadmNtMWhkQ2duZDI5bVpqSW5LU3hjY2x4dUlDQWdJQ0FnSUNBZ2RYSnNLQ2N1TGk5bWIyNTBjeTlpWlhKdWFXVnlMMkpsY201cFpYSnlaV2QxYkdGeUxYSmxaM1ZzWVhJdGQyVmlabTl1ZEM1M2IyWm1KeWtnWm05eWJXRjBLQ2QzYjJabUp5azdYSEpjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nYm05eWJXRnNPMXh5WEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh5WEc1Y2NseHVmVnh5WEc1Y2NseHVRR1p2Ym5RdFptRmpaU0I3WEhKY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0oySmxjbTVwWlhKZmMyaGhaR1VuTzF4eVhHNGdJQ0FnYzNKak9pQjFjbXdvSnk0dUwyWnZiblJ6TDJKbGNtNXBaWEl2WW1WeWJtbGxjbk5vWVdSbExYSmxaM1ZzWVhJdGQyVmlabTl1ZEM1M2IyWm1NaWNwSUdadmNtMWhkQ2duZDI5bVpqSW5LU3hjY2x4dUlDQWdJQ0FnSUNBZ2RYSnNLQ2N1TGk5bWIyNTBjeTlpWlhKdWFXVnlMMkpsY201cFpYSnphR0ZrWlMxeVpXZDFiR0Z5TFhkbFltWnZiblF1ZDI5bVppY3BJR1p2Y20xaGRDZ25kMjltWmljcE8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRzV2Y20xaGJEdGNjbHh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNjbHh1WEhKY2JuMWNjbHh1WEhKY2JseHlYRzVBWm05dWRDMW1ZV05sSUh0Y2NseHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5jbTlpYjNSdkp6dGNjbHh1SUNBZ0lITnlZem9nZFhKc0tDY3VMaTltYjI1MGN5OXliMkp2ZEc4dmNtOWliM1J2TFdKdmJHUXRkMlZpWm05dWRDNTNiMlptTWljcElHWnZjbTFoZENnbmQyOW1aakluS1N4Y2NseHVJQ0FnSUNBZ0lDQWdkWEpzS0NjdUxpOW1iMjUwY3k5eWIySnZkRzh2Y205aWIzUnZMV0p2YkdRdGQyVmlabTl1ZEM1M2IyWm1KeWtnWm05eWJXRjBLQ2QzYjJabUp5azdYSEpjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nT1RBd08xeHlYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHlYRzVjY2x4dWZWeHlYRzVjY2x4dVFHWnZiblF0Wm1GalpTQjdYSEpjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjNKdlltOTBieWM3WEhKY2JpQWdJQ0J6Y21NNklIVnliQ2duTGk0dlptOXVkSE12Y205aWIzUnZMM0p2WW05MGJ5MWliMnhrYVhSaGJHbGpMWGRsWW1admJuUXVkMjltWmpJbktTQm1iM0p0WVhRb0ozZHZabVl5Snlrc1hISmNiaUFnSUNBZ0lDQWdJSFZ5YkNnbkxpNHZabTl1ZEhNdmNtOWliM1J2TDNKdlltOTBieTFpYjJ4a2FYUmhiR2xqTFhkbFltWnZiblF1ZDI5bVppY3BJR1p2Y20xaGRDZ25kMjltWmljcE8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGt3TUR0Y2NseHVJQ0FnSUdadmJuUXRjM1I1YkdVNklHbDBZV3hwWXp0Y2NseHVYSEpjYm4xY2NseHVYSEpjYmtCbWIyNTBMV1poWTJVZ2UxeHlYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2R5YjJKdmRHOG5PMXh5WEc0Z0lDQWdjM0pqT2lCMWNtd29KeTR1TDJadmJuUnpMM0p2WW05MGJ5OXliMkp2ZEc4dGFYUmhiR2xqTFhkbFltWnZiblF1ZDI5bVpqSW5LU0JtYjNKdFlYUW9KM2R2Wm1ZeUp5a3NYSEpjYmlBZ0lDQWdJQ0FnSUhWeWJDZ25MaTR2Wm05dWRITXZjbTlpYjNSdkwzSnZZbTkwYnkxcGRHRnNhV010ZDJWaVptOXVkQzUzYjJabUp5a2dabTl5YldGMEtDZDNiMlptSnlrN1hISmNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4eVhHNGdJQ0FnWm05dWRDMXpkSGxzWlRvZ2FYUmhiR2xqTzF4eVhHNWNjbHh1ZlZ4eVhHNWNjbHh1UUdadmJuUXRabUZqWlNCN1hISmNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dKM0p2WW05MGJ5YzdYSEpjYmlBZ0lDQnpjbU02SUhWeWJDZ25MaTR2Wm05dWRITXZjbTlpYjNSdkwzSnZZbTkwYnkxc2FXZG9kQzEzWldKbWIyNTBMbmR2Wm1ZeUp5a2dabTl5YldGMEtDZDNiMlptTWljcExGeHlYRzRnSUNBZ0lDQWdJQ0IxY213b0p5NHVMMlp2Ym5SekwzSnZZbTkwYnk5eWIySnZkRzh0YkdsbmFIUXRkMlZpWm05dWRDNTNiMlptSnlrZ1ptOXliV0YwS0NkM2IyWm1KeWs3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ016QXdPMXh5WEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh5WEc1Y2NseHVmVnh5WEc1Y2NseHVRR1p2Ym5RdFptRmpaU0I3WEhKY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0ozSnZZbTkwYnljN1hISmNiaUFnSUNCemNtTTZJSFZ5YkNnbkxpNHZabTl1ZEhNdmNtOWliM1J2TDNKdlltOTBieTFzYVdkb2RHbDBZV3hwWXkxM1pXSm1iMjUwTG5kdlptWXlKeWtnWm05eWJXRjBLQ2QzYjJabU1pY3BMRnh5WEc0Z0lDQWdJQ0FnSUNCMWNtd29KeTR1TDJadmJuUnpMM0p2WW05MGJ5OXliMkp2ZEc4dGJHbG5hSFJwZEdGc2FXTXRkMlZpWm05dWRDNTNiMlptSnlrZ1ptOXliV0YwS0NkM2IyWm1KeWs3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ016QXdPMXh5WEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nYVhSaGJHbGpPMXh5WEc1Y2NseHVmVnh5WEc1Y2NseHVRR1p2Ym5RdFptRmpaU0I3WEhKY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0ozSnZZbTkwYnljN1hISmNiaUFnSUNCemNtTTZJSFZ5YkNnbkxpNHZabTl1ZEhNdmNtOWliM1J2TDNKdlltOTBieTF0WldScGRXMHRkMlZpWm05dWRDNTNiMlptTWljcElHWnZjbTFoZENnbmQyOW1aakluS1N4Y2NseHVJQ0FnSUNBZ0lDQWdkWEpzS0NjdUxpOW1iMjUwY3k5eWIySnZkRzh2Y205aWIzUnZMVzFsWkdsMWJTMTNaV0ptYjI1MExuZHZabVluS1NCbWIzSnRZWFFvSjNkdlptWW5LVHRjY2x4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBMU1EQTdYSEpjYmlBZ0lDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYSEpjYmx4eVhHNTlYSEpjYmx4eVhHNUFabTl1ZEMxbVlXTmxJSHRjY2x4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBbmNtOWliM1J2Snp0Y2NseHVJQ0FnSUhOeVl6b2dkWEpzS0NjdUxpOW1iMjUwY3k5eWIySnZkRzh2Y205aWIzUnZMVzFsWkdsMWJXbDBZV3hwWXkxM1pXSm1iMjUwTG5kdlptWXlKeWtnWm05eWJXRjBLQ2QzYjJabU1pY3BMRnh5WEc0Z0lDQWdJQ0FnSUNCMWNtd29KeTR1TDJadmJuUnpMM0p2WW05MGJ5OXliMkp2ZEc4dGJXVmthWFZ0YVhSaGJHbGpMWGRsWW1admJuUXVkMjltWmljcElHWnZjbTFoZENnbmQyOW1aaWNwTzF4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjY2x4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUdsMFlXeHBZenRjY2x4dVhISmNibjFjY2x4dVhISmNia0JtYjI1MExXWmhZMlVnZTF4eVhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZHliMkp2ZEc4bk8xeHlYRzRnSUNBZ2MzSmpPaUIxY213b0p5NHVMMlp2Ym5SekwzSnZZbTkwYnk5eWIySnZkRzh0Y21WbmRXeGhjaTEzWldKbWIyNTBMbmR2Wm1ZeUp5a2dabTl5YldGMEtDZDNiMlptTWljcExGeHlYRzRnSUNBZ0lDQWdJQ0IxY213b0p5NHVMMlp2Ym5SekwzSnZZbTkwYnk5eWIySnZkRzh0Y21WbmRXeGhjaTEzWldKbWIyNTBMbmR2Wm1ZbktTQm1iM0p0WVhRb0ozZHZabVluS1R0Y2NseHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEhKY2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEhKY2JseHlYRzU5WEhKY2JseHlYRzRrZEdWNGRDMW1iMjUwTFhOMFlXTnJPaUFvSjNKdlltOTBieWNzSUNkQmNtbGhiQ2NzSUhOaGJuTXRjMlZ5YVdZcE95SXNJaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzR2THlCVWFHbHpJR1pwYkdVZ1kyOXVkR0ZwYm5NZ2RtVnllU0JpWVhOcFl5QnpkSGxzWlhNdVhHNHZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVYRzR2S2lwY2JpQXFJRk5sZENCMWNDQmhJR1JsWTJWdWRDQmliM2dnYlc5a1pXd2diMjRnZEdobElISnZiM1FnWld4bGJXVnVkRnh1SUNvdlhHNHFJSHRjYmx4MFltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYm4xY2JseHVZbTlrZVN3Z2FIUnRiQ0I3WEc0Z0lGeDBZMjlzYjNJNklDUjBaWGgwTFdOdmJHOXlPMXh1SUZ4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pHeHBaMmgwTFdkeVpYazdJRnh1SUNCY2RHWnZiblF0Wm1GdGFXeDVPaUFrZEdWNGRDMW1iMjUwTFhOMFlXTnJPMXh1WEhSdFlYSm5hVzQ2SURBN1hHNWNkSEJoWkdScGJtYzZJREE3WEc1Y2RIZHBaSFJvT2lBeE1EQWxPMXh1WEhSb1pXbG5hSFE2SURFd01DVTdYRzVjZEdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc1Y2RHWnZiblF0YzJsNlpUb2dNVFp3ZUR0Y2JseDBiR2x1WlMxb1pXbG5hSFE2SURFdU5ESTFjbVZ0TzF4dVhIUm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzVjZEMxM1pXSnJhWFF0Wm05dWRDMXpiVzl2ZEdocGJtYzZJR0Z1ZEdsaGJHbGhjMlZrTzF4dVhIUXRiVzk2TFc5emVDMW1iMjUwTFhOdGIyOTBhR2x1WnpvZ1ozSmhlWE5qWVd4bE8xeHVYSFJtYjI1MExXUnBjM0JzWVhrNklHOXdkR2x2Ym1Gc08xeHVYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEc1Y2RHMXBiaTFvWldsbmFIUTZJREV3TUhab08xeHVYSFFtTG1GaWIzVjBJQzVzTFdadmIzUmxjaUI3WEc1Y2RGeDBjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1WEhSY2RHSnZkSFJ2YlRvZ01EdGNibHgwWEhSc1pXWjBPaUF3TzF4dVhIUmNkSEpwWjJoME9pQXdPMXh1WEhSOVhHNWNkRUJwYm1Oc2RXUmxJR04xYzNSdmJWOHhPREF3SUh0Y2JseDBYSFJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJKaEtDUjBaWGgwTFdOdmJHOXlMQ0F3TGpNcE8xeHVYSFI5SUZ4dVhIUmNibHgwUUdsdVkyeDFaR1VnYkdGd2RHOXdJSHRjYmx4MFhIUm1iMjUwTFhOcGVtVTZJREUxY0hnN1hHNWNkSDFjYmx4dVhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHVYSFJjZEdadmJuUXRjMmw2WlRvZ01UUndlRHRjYmx4MGZWeHVYRzVjZEVCcGJtTnNkV1JsSUcxdlltbHNaU0I3WEc1Y2RGeDBabTl1ZEMxemFYcGxPaUF4TTNCNE8xeHVYSFI5WEc1Y2JseDBRR2x1WTJ4MVpHVWdjeTF0YjJKcGJHVWdlMXh1WEhSY2RHWnZiblF0YzJsNlpUb2dNVEp3ZUR0Y2JseDBmVnh1ZlZ4dVltOWtlUzVvWlhKdkxDQm9kRzFzTG1obGNtOGdlMXh1WEhSb1pXbG5hSFE2SURFd01DVTdYRzVjZEc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc1Y2RHMXBiaTFvWldsbmFIUTZJRFl5T0hCNE8xeHVYSFFtSUM1c0xYQmhjbUZzYkdGNFgxOWpiMjUwWVdsdVpYSWdlMXh1WEhSY2RFQnBibU5zZFdSbElHTjFjM1J2YlY4eE9EQXdJSHRjYmx4MFhIUmNkQzh2ZDJsa2RHZzZJREU0TURCd2VEdGNibHgwWEhSY2RDOHZiV0Z5WjJsdU9pQXdJR0YxZEc4N1hHNWNkRngwWEhRdkwyOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNWNkRngwZlZ4dVhIUjlYRzVjZEVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEc1Y2RGeDBiV2x1TFdobGFXZG9kRG9nTVRBd2RtZzdYRzVjZEgxY2JuMWNibHh1THlvcVhHNGdLaUJOWVd0bElHRnNiQ0JsYkdWdFpXNTBjeUJtY205dElIUm9aU0JFVDAwZ2FXNW9aWEpwZENCbWNtOXRJSFJvWlNCd1lYSmxiblFnWW05NExYTnBlbWx1WjF4dUlDb2dVMmx1WTJVZ1lDcGdJR2hoY3lCaElITndaV05wWm1samFYUjVJRzltSURBc0lHbDBJR1J2WlhNZ2JtOTBJRzkyWlhKeWFXUmxJSFJvWlNCZ2FIUnRiR0FnZG1Gc2RXVmNiaUFxSUcxaGEybHVaeUJoYkd3Z1pXeGxiV1Z1ZEhNZ2FXNW9aWEpwZEdsdVp5Qm1jbTl0SUhSb1pTQnliMjkwSUdKdmVDMXphWHBwYm1jZ2RtRnNkV1ZjYmlBcUlGTmxaVG9nYUhSMGNITTZMeTlqYzNNdGRISnBZMnR6TG1OdmJTOXBibWhsY21sMGFXNW5MV0p2ZUMxemFYcHBibWN0Y0hKdlltRmliSGt0YzJ4cFoyaDBiSGt0WW1WMGRHVnlMV0psYzNRdGNISmhZM1JwWTJVdlhHNGdLaTljYmlvNk9tSmxabTl5WlN4Y2JpbzZPbUZtZEdWeUlIdGNiaUFnWW05NExYTnBlbWx1WnpvZ2FXNW9aWEpwZER0Y2JuMWNibHh1THlvcVhHNGdLaUJDWVhOcFl5QnpkSGxzWlhNZ1ptOXlJR3hwYm10elhHNGdLaTljYm1FZ2UxeHVJQ0JqYjJ4dmNqb2dKSEJ5YVcxaGNubERiMnh2Y2p0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dWZWeHVYRzUxYkNCN1hHNWNkRzFoY21kcGJqb2dNRHRjYmx4MGNHRmtaR2x1WnpvZ01EdGNibjFjYmx4dWRXd2diR2tnZTF4dVhIUnNhWE4wTFhOMGVXeGxPaUJ1YjI1bE8xeHVmVnh1WEc1b01Td2dhRElzSUdnekxDQndJSHRjYmx4MGJXRnlaMmx1T2lBd08xeHVmVnh1WEc1emRtY2dlMXh1WEhSbWFXeHNPaUJqZFhKeVpXNTBRMjlzYjNJN1hHNWNkSE4wY205clpUb2dZM1Z5Y21WdWRFTnZiRzl5TzF4dWZWeHVYRzVpZFhSMGIyNHNJR2x1Y0hWMExDQnpaV3hsWTNRc0lIUmxlSFJoY21WaElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDUjBaWGgwTFdadmJuUXRjM1JoWTJzN1hHNGdmVnh1THk4cUlHWnZjaUJ3Y21Wc2IyRmthVzVuSUdsdFlXZGxjMXh1YVcxbklIdGNibHgwWkdsemNHeGhlVG9nYm05dVpUdGNibjFjYmk1bmIyOW5iR1V0YldGd0lHbHRaeUI3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNTlYRzVjYmx4dUlpd2lMeThnTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaTh2SUZSb2FYTWdabWxzWlNCamIyNTBZV2x1Y3lCaGJHd2dZWEJ3YkdsallYUnBiMjR0ZDJsa1pTQlRZWE56SUhaaGNtbGhZbXhsY3k1Y2JpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNHZMeThnVW1WbmRXeGhjaUJtYjI1MElHWmhiV2xzZVZ4dUx5OHZJRUIwZVhCbElFeHBjM1JjYmx4dUpIQnlhVzFoY25sRGIyeHZjam9nY21kaUtESTFOU3dnTWpVMUxDQXlOVFVwTzF4dVhHNHZMeThnUTI5d2VTQjBaWGgwSUdOdmJHOXlYRzR2THk4Z1FIUjVjR1VnUTI5c2IzSmNiaVIwWlhoMExXTnZiRzl5T2lCeVoySW9OamtzSURrd0xDQXhNREFwSUNGa1pXWmhkV3gwTzF4dUpIUnBkR3hsTFdOdmJHOXlPaUJ5WjJJb05UVXNJRFl5TENBMk5pazdYRzR2THk5Y2JpUmtZWEpyTFhSbGVIUXRZMjlzYjNJNklDTXpOek5GTkRJN1hHNWNiaTh2THlCTllXbHVJR0p5WVc1a0lHTnZiRzl5WEc0dkx5OGdRSFI1Y0dVZ1EyOXNiM0pjYmk4dkpHSnlZVzVrTFdOdmJHOXlPaUJ5WjJJb016SXNNVGd4TERFMk1Ta2dJV1JsWm1GMWJIUTdYRzRrWW5KaGJtUXRZMjlzYjNJNklISm5ZaWd3TENBeE9URXNJREUyTlNrZ0lXUmxabUYxYkhRN1hHNWNiaTh2THlCVFpXTnZibVJoY25rZ1kyOXNiM0pjYmlSelpXTnZibVF0WTI5c2IzSTZJSEpuWWlnd0xDQXhOVEFzSURFek5pazdYRzVjYmlSc2FXZG9kQzF5WldRNklISm5ZaWd5TWpNc0lEZzNMQ0F4TURJcE8xeHVYRzRrYkdsbmFIUXRkMmhwZEdVNklDTkdSVVpGUmtVN1hHNGtiR2xuYUhRdFltVnBaMlU2SUNOR01FVkdSVGs3WEc0a1ltVnBaMlU2SUNOR1FrWTRSakU3WEc0a1ltVnBaMlV0YjI1bE9pQWpaV1psWldVNU8xeHVKR0psYVdkbExYUjNiem9nSTJWbFpXSmtaanRjYmx4dUx5OHZJRXhwWjJoMElHZHlaWGxjYmk4dkx5QkFkSGx3WlNCRGIyeHZjbHh1Skd4cFoyaDBMV2R5WlhrNklISm5ZaWd5TXpjc0lESXpOeXdnTWpNM0tTQWhaR1ZtWVhWc2REdGNibHh1THk4dklFMWxaR2wxYlNCbmNtVjVYRzR2THk4Z1FIUjVjR1VnUTI5c2IzSmNiaVJ0YVdRdFozSmxlVG9nY21kaUtERTFNeXdnTVRVekxDQXhOVE1wSUNGa1pXWmhkV3gwTzF4dVhHNHZMeThnUkdGeWF5Qm5jbVY1WEc0dkx5OGdRSFI1Y0dVZ1EyOXNiM0pjYmlSa1lYSnJMV2R5WlhrNklISm5ZaWcyT0N3Z05qZ3NJRFk0S1NBaFpHVm1ZWFZzZER0Y2JseHVMeTh2S2lvcUlHTnZiRzl5Y3lBcUtpb3FYRzR2THk5Y2JpOHZYQ0lqTURBM04wSTFYQ0pjYmk4dmNtZGlLREVzSURFd01pd2dNVEUwS1Z4dVhHNHZMeThnUTI5dWRHRnBibVZ5SjNNZ2JXRjRhVzExYlNCM2FXUjBhRnh1THk4dklFQjBlWEJsSUV4bGJtZDBhRnh1SkcxaGVDMTNhV1IwYURvZ01URTRNSEI0SUNGa1pXWmhkV3gwTzF4dVhHNHZMeThnUW5KbFlXdHdiMmx1ZEhNZ2JXRndYRzR2THk4Z1FIQnliM0FnZTFOMGNtbHVaMzBnYTJWNWN5QXRJRXRsZVhNZ1lYSmxJR2xrWlc1MGFXWnBaWEp6SUcxaGNIQmxaQ0IwYnlCaElHZHBkbVZ1SUd4bGJtZDBhRnh1THk4dklFQndjbTl3SUh0TllYQjlJSFpoYkhWbGN5QXRJRlpoYkhWbGN5QmhjbVVnWVdOMGRXRnNJR0p5WldGcmNHOXBiblJ6SUdWNGNISmxjM05sWkNCcGJpQndhWGhsYkhOY2JpUmljbVZoYTNCdmFXNTBjem9nS0Z4dUlDQW5jMjFoYkd3bk9pQXpNakJ3ZUN4Y2JpQWdKMjFsWkdsMWJTYzZJRGMyT0hCNExGeHVJQ0FuYkdGeVoyVW5PaUF4TURJMGNIZ3NYRzRwSUNGa1pXWmhkV3gwTzF4dVhHNGtaR1Z6YTNSdmNEb2dNVE13TUhCNE8xeHVKR3hoY0hSdmNEb2dJRGs1TW5CNE8xeHVKSFJoWW14bGREb2dOelk0Y0hnN1hHNGtiVzlpYVd4bE9pQTBPREJ3ZUR0Y2JpUnpiV0ZzYkMxdGIySnBiR1U2SURNM05YQjRPMXh1WEc0dkx5OGdVbVZzWVhScGRtVWdiM0lnWVdKemIyeDFkR1VnVlZKTUlIZG9aWEpsSUdGc2JDQmhjM05sZEhNZ1lYSmxJSE5sY25abFpDQm1jbTl0WEc0dkx5OGdRSFI1Y0dVZ1UzUnlhVzVuWEc0dkx5OGdRR1Y0WVcxd2JHVWdjMk56Y3lBdElGZG9aVzRnZFhOcGJtY2dZU0JEUkU1Y2JpOHZMeUFnSUNSaVlYTmxMWFZ5YkRvZ0oyaDBkSEE2THk5alpHNHVaWGhoYlhCc1pTNWpiMjB2WVhOelpYUnpMeWM3WEc0a1ltRnpaUzExY213NklDY3ZZWE56WlhSekx5Y2dJV1JsWm1GMWJIUTdYRzRpTENKY2NseHVRRzFwZUdsdUlITnBlbVVvSkhkcFpIUm9MQ0FrYUdWcFoyaDBPaUFrZDJsa2RHZ3BJSHRjY2x4dUlDQjNhV1IwYURvZ0pIZHBaSFJvTzF4eVhHNGdJR2hsYVdkb2REb2dKR2hsYVdkb2REdGNjbHh1ZlZ4eVhHNWNjbHh1THk4dklHMXBlR2x1Y3lCbWIzSWdUV1ZrYVdFZ1VYVmxjbWxsYzF4eVhHNUFiV2w0YVc0Z1kzVnpkRzl0WHpFNE1EQWdlMXh5WEc0Z0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJREU0TURCd2VDa2dlMXh5WEc0Z0lDQkFZMjl1ZEdWdWREdGNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNia0J0YVhocGJpQmpkWE4wYjIwZ2UxeHlYRzRnSUVCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklDUmtaWE5yZEc5d0lDc2dNU2tnZTF4eVhHNGdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnWkdWemEzUnZjQ0I3WEhKY2JseDBRRzFsWkdsaElITmpjbVZsYmlCaGJtUWdLRzFwYmkxM2FXUjBhRG9nSkd4aGNIUnZjQ0FySURFcElHRnVaQ0FvYldGNExYZHBaSFJvT2lBa1pHVnphM1J2Y0NrZ2UxeHlYRzVjZEZ4MFFHTnZiblJsYm5RN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV2w0YVc0Z2JHRndkRzl3SUh0Y2NseHVYSFJBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBa2JHRndkRzl3S1NCaGJtUWdLRzFwYmkxM2FXUjBhRG9nSkhSaFlteGxkQ0FySURFcElIdGNjbHh1SUNCY2RFQmpiMjUwWlc1ME8xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVRRzFwZUdsdUlIUmhZbXhsZENCN1hISmNibHgwUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ0pIUmhZbXhsZENrZ2UxeHlYRzVjZEZ4MFFHTnZiblJsYm5RN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV2w0YVc0Z2JXOWlhV3hsSUh0Y2NseHVYSFJBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBa2JXOWlhV3hsS1NCN1hISmNibHgwWEhSQVkyOXVkR1Z1ZER0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JrQnRhWGhwYmlCekxXMXZZbWxzWlNCN1hISmNibHgwUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxaGVDMTNhV1IwYURvZ0pITnRZV3hzTFcxdlltbHNaU2tnZTF4eVhHNWNkRngwUUdOdmJuUmxiblE3WEhKY2JseDBmVnh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnY21WMGFXNWhJSHRjY2x4dUlDQkFiV1ZrYVdGY2NseHVJQ0FnSUc5dWJIa2djMk55WldWdUlHRnVaQ0FvTFhkbFltdHBkQzF0YVc0dFpHVjJhV05sTFhCcGVHVnNMWEpoZEdsdk9pQXlLU3hjY2x4dUlDQWdJRzl1YkhrZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFMxdGIzb3RaR1YyYVdObExYQnBlR1ZzTFhKaGRHbHZPaUF5S1N4Y2NseHVJQ0FnSUc5dWJIa2djMk55WldWdUlHRnVaQ0FvTFc4dGJXbHVMV1JsZG1salpTMXdhWGhsYkMxeVlYUnBiem9nTWk4eEtTeGNjbHh1SUNBZ0lHOXViSGtnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMV1JsZG1salpTMXdhWGhsYkMxeVlYUnBiem9nTWlrc1hISmNiaUFnSUNCdmJteDVJSE5qY21WbGJpQmhibVFnS0cxcGJpMXlaWE52YkhWMGFXOXVPaUF4T1RKa2NHa3BMRnh5WEc0Z0lDQWdiMjVzZVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0Y21WemIyeDFkR2x2YmpvZ01tUndjSGdwSUh0Y2NseHVJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dVhISmNia0J0YVhocGJpQndjbWx1ZENCN1hISmNiaUFnUUcxbFpHbGhJSEJ5YVc1MElIdGNjbHh1SUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVMeTh2SUcxcGVHbHVjeUJtYjNJZ1kyaGhibWRsSUhacGMybGliR2wwZVZ4eVhHNWNjbHh1UUcxcGVHbHVJR2x1ZG1semFXSnNaU0I3WEhKY2JpQWdZbTl5WkdWeU9pQXdPMXh5WEc0Z0lHTnNhWEE2SUhKbFkzUW9NQ0F3SURBZ01DazdYSEpjYmlBZ2FHVnBaMmgwT2lBeGNIZzdYSEpjYmlBZ2JXRnlaMmx1T2lBdE1YQjRPMXh5WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hISmNiaUFnY0dGa1pHbHVaem9nTUR0Y2NseHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdkMmxrZEdnNklERndlRHRjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUhacGMybGliR1VnZTF4eVhHNGdJR2hsYVdkb2REb2dhVzVwZEdsaGJEdGNjbHh1SUNCM2FXUjBhRG9nYVc1cGRHbGhiRHRjY2x4dUlDQnRZWEpuYVc0NklHbHVhWFJwWVd3N1hISmNiaUFnY0c5emFYUnBiMjQ2SUdsdWFYUnBZV3c3WEhKY2JuMWNjbHh1WEhKY2JpOHZMeUJ3YjNOcGRHbHZibHh5WEc1Y2NseHVRRzFwZUdsdUlHRmljMjlzZFhSbExYTjBjbVYwWTJnZ2UxeHlYRzRnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0IwYjNBNklEQTdYSEpjYmlBZ2JHVm1kRG9nTUR0Y2NseHVJQ0J5YVdkb2REb2dNRHRjY2x4dUlDQmliM1IwYjIwNklEQTdYSEpjYm4xY2NseHVYSEpjYmtCdGFYaHBiaUJoWW5OdmJIVjBaUzFqWlc1MFpYSWdlMXh5WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNCMGIzQTZJRFV3SlR0Y2NseHVJQ0JzWldaME9pQTFNQ1U3WEhKY2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTFRVd0pTd2dMVFV3SlNrN1hISmNibjFjY2x4dVhISmNia0J0YVhocGJpQmhZbk52YkhWMFpTMWpaVzUwWlhKWUlIdGNjbHh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnZEc5d09pQTFNQ1U3WEhKY2JpQWdiR1ZtZERvZ05UQWxPMXh5WEc0Z0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TlRBbEtUdGNjbHh1ZlZ4eVhHNWNjbHh1UUcxcGVHbHVJR0ZpYzI5c2RYUmxMV05sYm5SbGNsa2dlMXh5WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNCMGIzQTZJRFV3SlR0Y2NseHVJQ0JzWldaME9pQTFNQ1U3WEhKY2JpQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwMU1DVXBPMXh5WEc1OVhISmNiaTh2THlCVWNtbGhibWRzWlNCb1pXeHdaWElnYldsNGFXNWNjbHh1THk4dklFQndZWEpoYlNCN1JHbHlaV04wYVc5dWZTQWtaR2x5WldOMGFXOXVJQzBnVkhKcFlXNW5iR1VnWkdseVpXTjBhVzl1TENCbGFYUm9aWElnWUhSdmNHQXNJR0J5YVdkb2RHQXNJRnh5WEc0dkx5OWdZbTkwZEc5dFlDQnZjaUJnYkdWbWRHQmNjbHh1THk4dklFQndZWEpoYlNCN1EyOXNiM0o5SUNSamIyeHZjaUJiWTNWeWNtVnVkR052Ykc5eVhTQXRJRlJ5YVdGdVoyeGxJR052Ykc5eUlGeHlYRzR2THk4Z1FIQmhjbUZ0SUh0TVpXNW5kR2g5SUNSemFYcGxJRnN4WlcxZElDMGdWSEpwWVc1bmJHVWdjMmw2WlZ4eVhHNWNjbHh1UUcxcGVHbHVJSFJ5YVdGdVoyeGxLQ1JrYVhKbFkzUnBiMjRzSUNSamIyeHZjam9nWTNWeWNtVnVkR052Ykc5eUxDQWtjMmw2WlRvZ01XVnRLU0I3WEhKY2JpQWdYSEpjYmlBZ1FHbG1JRzV2ZENCcGJtUmxlQ2gwYjNBZ2NtbG5hSFFnWW05MGRHOXRJR3hsWm5Rc0lDUmthWEpsWTNScGIyNHBJSHRjY2x4dUlDQWdJRUJsY25KdmNpQmNJa1JwY21WamRHbHZiaUJ0ZFhOMElHSmxJR1ZwZEdobGNpQmdkRzl3WUN3Z1lISnBaMmgwWUN3Z1lHSnZkSFJ2YldBZ2IzSWdZR3hsWm5SZ0xsd2lPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdkMmxrZEdnNklEQTdYSEpjYmlBZ2FHVnBaMmgwT2lBd08xeHlYRzRnSUhvdGFXNWtaWGc2SURJN1hISmNiaUFnWW05eVpHVnlMU043YjNCd2IzTnBkR1V0WkdseVpXTjBhVzl1S0NSa2FYSmxZM1JwYjI0cGZUb2dLQ1J6YVhwbElDb2dNUzQxS1NCemIyeHBaQ0FrWTI5c2IzSTdYSEpjYmlBZ1hISmNiaUFnSkhCbGNuQmxibVJwWTNWc1lYSXRZbTl5WkdWeWN6b2dKSE5wZW1VZ2MyOXNhV1FnZEhKaGJuTndZWEpsYm5RN1hISmNiaUFnWEhKY2JpQWdRR2xtSUNSa2FYSmxZM1JwYjI0Z1BUMGdkRzl3SUc5eUlDUmthWEpsWTNScGIyNGdQVDBnWW05MGRHOXRJSHRjY2x4dUlDQWdJR0p2Y21SbGNpMXNaV1owT2lBZ0lDUndaWEp3Wlc1a2FXTjFiR0Z5TFdKdmNtUmxjbk03WEhKY2JpQWdJQ0JpYjNKa1pYSXRjbWxuYUhRNklDQWtjR1Z5Y0dWdVpHbGpkV3hoY2kxaWIzSmtaWEp6TzF4eVhHNGdJSDBnUUdWc2MyVWdhV1lnSkdScGNtVmpkR2x2YmlBOVBTQnlhV2RvZENCdmNpQWtaR2x5WldOMGFXOXVJRDA5SUd4bFpuUWdlMXh5WEc0Z0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlRvZ0pIQmxjbkJsYm1ScFkzVnNZWEl0WW05eVpHVnljenRjY2x4dUlDQWdJR0p2Y21SbGNpMTBiM0E2SUNBZ0lDUndaWEp3Wlc1a2FXTjFiR0Z5TFdKdmNtUmxjbk03WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc1Y2NseHVMeTh2SUhOMGVXeHBibWNnY21Ga2FXOWlkWFIwYjI0c0lHTm9aV05yWW05NFhISmNibHh5WEc1QWJXbDRhVzRnYUdsa1pHVnVJSHRjY2x4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYSEpjYmlBZ2RHOXdPaUF3Y0hnN1hISmNiaUFnYkdWbWREb2dNSEI0TzF4eVhHNGdJSGRwWkhSb09pQXdPMXh5WEc0Z0lHaGxhV2RvZERvZ01EdGNjbHh1SUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4eVhHNGdJRzl3WVdOcGRIazZJREE3WEhKY2JuMWNjbHh1THk4dklHWnZjaUJ3YkdGalpXaHZiR1JsY2lCemRIbHNhVzVuWEhKY2JseHlYRzVBYldsNGFXNGdjR3hoWTJWb2IyeGtaWElnZTF4eVhHNGdJRnh5WEc0Z0lDWTZPaTEzWldKcmFYUXRhVzV3ZFhRdGNHeGhZMlZvYjJ4a1pYSWdleUJBWTI5dWRHVnVkRHNnZlZ4eVhHNGdJQ1k2TFcxdmVpMXdiR0ZqWldodmJHUmxjaUFnSUNBZ0lDQWdJQ0FnZXlCQVkyOXVkR1Z1ZERzZ2ZWeHlYRzRnSUNZNk9pMXRiM290Y0d4aFkyVm9iMnhrWlhJZ0lDQWdJQ0FnSUNBZ2V5QkFZMjl1ZEdWdWREc2dmVnh5WEc0Z0lDWTZMVzF6TFdsdWNIVjBMWEJzWVdObGFHOXNaR1Z5SUNBZ0lDQWdleUJBWTI5dWRHVnVkRHNnZlNBZ1hISmNibjBpTENJdkx5QXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUx5OGdWR2hwY3lCbWFXeGxJR052Ym5SaGFXNXpJRU5UVXlCb1pXeHdaWElnWTJ4aGMzTmxjeTVjYmk4dklDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc1Y2JpOHFLbHh1SUNvZ1EyeGxZWElnYVc1dVpYSWdabXh2WVhSelhHNGdLaTljYmk1amJHVmhjbVpwZURvNllXWjBaWElnZTF4dUlDQmpiR1ZoY2pvZ1ltOTBhRHRjYmlBZ1kyOXVkR1Z1ZERvZ0p5YzdYRzRnSUdScGMzQnNZWGs2SUhSaFlteGxPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFMWhhVzRnWTI5dWRHVnVkQ0JqYjI1MFlXbHVaWEp6WEc0Z0tpQXhMaUJOWVd0bElIUm9aU0JqYjI1MFlXbHVaWElnWm5Wc2JDMTNhV1IwYUNCM2FYUm9JR0VnYldGNGFXMTFiU0IzYVdSMGFGeHVJQ29nTWk0Z1EyVnVkR1Z5SUdsMElHbHVJSFJvWlNCMmFXVjNjRzl5ZEZ4dUlDb2dNeTRnVEdWaGRtVWdjMjl0WlNCemNHRmpaU0J2YmlCMGFHVWdaV1JuWlhNc0lHVnpjR1ZqYVdGc2JIa2dkbUZzZFdGaWJHVWdiMjRnYzIxaGJHd2djMk55WldWdWMxeHVJQ292WEc1Y2JseHVMeW9xWEc0Z0tpQklhV1JsSUhSbGVIUWdkMmhwYkdVZ2JXRnJhVzVuSUdsMElISmxZV1JoWW14bElHWnZjaUJ6WTNKbFpXNGdjbVZoWkdWeWMxeHVJQ29nTVM0Z1RtVmxaR1ZrSUdsdUlGZGxZa3RwZEMxaVlYTmxaQ0JpY205M2MyVnljeUJpWldOaGRYTmxJRzltSUdGdUlHbHRjR3hsYldWdWRHRjBhVzl1SUdKMVp6dGNiaUFxSUNBZ0lGTmxaVG9nYUhSMGNITTZMeTlqYjJSbExtZHZiMmRzWlM1amIyMHZjQzlqYUhKdmJXbDFiUzlwYzNOMVpYTXZaR1YwWVdsc1AybGtQVFExTnpFME5seHVJQ292WEc0dWFHbGtaUzEwWlhoMElIdGNiaUFnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmlBZ2NHRmtaR2x1WnpvZ01Ec2dMeW9nTVNBcUwxeHVJQ0IwWlhoMExXbHVaR1Z1ZERvZ01UQXhKVHRjYmlBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1NHbGtaU0JsYkdWdFpXNTBJSGRvYVd4bElHMWhhMmx1WnlCcGRDQnlaV0ZrWVdKc1pTQm1iM0lnYzJOeVpXVnVJSEpsWVdSbGNuTmNiaUFxSUZOb1lXMWxiR1Z6YzJ4NUlHSnZjbkp2ZDJWa0lHWnliMjBnU0ZSTlREVkNiMmxzWlhKd2JHRjBaVHBjYmlBcUlHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOW9OV0p3TDJoMGJXdzFMV0p2YVd4bGNuQnNZWFJsTDJKc2IySXZiV0Z6ZEdWeUwzTnlZeTlqYzNNdmJXRnBiaTVqYzNNalRERXhPUzFNTVRNelhHNGdLaTljYmk1MmFYTjFZV3hzZVMxb2FXUmtaVzRnZTF4dUlDQmliM0prWlhJNklEQTdYRzRnSUdOc2FYQTZJSEpsWTNRb01DQXdJREFnTUNrN1hHNGdJR2hsYVdkb2REb2dNWEI0TzF4dUlDOHFJRzFoY21kcGJqb2dMVEZ3ZURzcUwxeHVJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lIZHBaSFJvT2lBeGNIZzdYRzU5WEc1Y2JpSXNJaTh2TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4eVhHNHZMeTB0TFMwdExTMHRMUzB0TFhSdklHTnNiM05sTFMwdExWeHlYRzR2THkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2NseHVRR3RsZVdaeVlXMWxjeUJ5YjNSaGRHVmZiR1ZtZEVOc2IzTmxJSHRjY2x4dVhIUm1jbTl0SUh0Y2RIUnlZVzV6Wm05eWJUb2dibTl1WlRzZ2ZWeHlYRzVjZEhSdklIc2dkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9ORFZrWldjcElIUnlZVzV6YkdGMFpTZ3ljSGdzSURGd2VDazdmVnh5WEc1OVhISmNibHh5WEc1QWEyVjVabkpoYldWeklISnZkR0YwWlY5eWFXZG9kRU5zYjNObElIdGNjbHh1WEhSbWNtOXRJSHNnZEhKaGJuTm1iM0p0T2lCdWIyNWxPeUI5WEhKY2JseDBkRzhnZXlCMGNtRnVjMlp2Y20wNklISnZkR0YwWlNndE5EVmtaV2NwSUhSeVlXNXpiR0YwWlNneWNIZ3NJREZ3ZUNrN2ZWeHlYRzU5WEhKY2JseHlYRzVBYTJWNVpuSmhiV1Z6SUhOallXeGxYMk5sYm5SbGNrTnNiM05sSUh0Y2NseHVYSFJtY205dElIc2dkSEpoYm5ObWIzSnRPaUJ1YjI1bE95QjlYSEpjYmx4MGRHOGdleUIwY21GdWMyWnZjbTA2SUhOallXeGxXQ2d3TGpBd01ESXBPeUI5WEhKY2JuMWNjbHh1THk4dExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhISmNiaTh2TFMwdExTMHRMUzB0TFMwdGRHOGdhR0Z0WW5WeVoyVnlMUzB0TFZ4eVhHNHZMeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjY2x4dVFHdGxlV1p5WVcxbGN5QnliM1JoZEdWZmJHVm1kRWhoYldKMWNtZGxjaUI3WEhKY2JseDBabkp2YlNCN1hIUjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZzBOV1JsWnlrZ2RISmhibk5zWVhSbEtESndlQ3dnTVhCNEtUc2dmVnh5WEc1Y2RIUnZJSHNnZEhKaGJuTm1iM0p0T2lCdWIyNWxPeUI5WEhKY2JuMWNjbHh1WEhKY2JrQnJaWGxtY21GdFpYTWdjbTkwWVhSbFgzSnBaMmgwU0dGdFluVnlaMlZ5SUh0Y2NseHVYSFJtY205dElIc2dkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9MVFExWkdWbktTQjBjbUZ1YzJ4aGRHVW9NbkI0TENBeGNIZ3BPeUI5WEhKY2JseDBkRzhnZXlCMGNtRnVjMlp2Y20wNklHNXZibVU3SUgxY2NseHVmVnh5WEc1Y2NseHVRR3RsZVdaeVlXMWxjeUJ6WTJGc1pWOWpaVzUwWlhKSVlXMWlkWEpuWlhJZ2UxeHlYRzVjZEdaeWIyMGdleUIwY21GdWMyWnZjbTA2SUhOallXeGxXQ2d3TGpBd01ESXBPeUI5WEhKY2JseDBkRzhnZXlCMGNtRnVjMlp2Y20wNklITmpZV3hsV0NneExqRXBPeUI5WEhKY2JuMWNjbHh1THk4dExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhISmNiaTh2TFMwdExTMHRMUzB0TFMxaWJHOW5JSFJoWW14bGRDQnVZWFl0TFMwdFhISmNiaTh2TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4eVhHNUFhMlY1Wm5KaGJXVnpJR0pzYjJkZmRHRmliR1YwVG1GMlQzQmxiaUI3WEhKY2JseDBabkp2YlNCN0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TnpJbEtUc2dmVnh5WEc1Y2RIUnZJSHNnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEQWxLVHNnZlZ4eVhHNTlYSEpjYmtCclpYbG1jbUZ0WlhNZ1lteHZaMTkwWVdKc1pYUk9ZWFpEYkc5elpTQjdYSEpjYmx4MFpuSnZiU0I3SUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3dKU2s3SUgxY2NseHVYSFIwYnlCN0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TVRBd0xqVWxLVHNnZlZ4eVhHNTlYSEpjYmk4dkxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHlYRzR2THkwdExTMHRMUzB0TFMwdGFHRnRZblZ5WjJWeUlHNWhkaTB0TFMxY2NseHVMeTh0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEhKY2JrQnJaWGxtY21GdFpYTWdiM0JsYmw5b1lXMWlkWEpuWlhKZmJHVm1kQ0I3WEhKY2JseDBabkp2YlNCN0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TVRBd0pTazdJSDFjY2x4dVhIUjBieUI3SUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3dKU2s3SUgxY2NseHVmVnh5WEc1QWEyVjVabkpoYldWeklHOXdaVzVmYUdGdFluVnlaMlZ5WDNKcFoyaDBJSHRjY2x4dVhIUm1jbTl0SUhzZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLREV3TUNVcE95QjlYSEpjYmx4MGRHOGdleUIwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01DVXBPeUI5WEhKY2JuMWNjbHh1UUd0bGVXWnlZVzFsY3lCamJHOXpaVjlvWVcxaWRYSm5aWEpmYkdWbWRDQjdYSEpjYmx4MFpuSnZiU0I3SUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3dKU2s3SUgxY2NseHVYSFIwYnlCN0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TVRBd0pTazdJSDFjY2x4dWZWeHlYRzVBYTJWNVpuSmhiV1Z6SUdOc2IzTmxYMmhoYldKMWNtZGxjbDl5YVdkb2RDQjdYSEpjYmx4MFpuSnZiU0I3SUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ3dKU2s3SUgxY2NseHVYSFIwYnlCN0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d4TURBbEtUc2dmVnh5WEc1OVhISmNia0JyWlhsbWNtRnRaWE1nZEc5ZmRtbHphV0pzWlNCN1hISmNibHgwWm5KdmJTQjdJRzl3WVdOcGRIazZJREE3SUgxY2NseHVYSFIwYnlCN0lHOXdZV05wZEhrNklERTdJSDFjY2x4dWZWeHlYRzVBYTJWNVpuSmhiV1Z6SUhSdlgzVnVkbWx6YVdKc1pTQjdYSEpjYmx4MFpuSnZiU0I3SUc5d1lXTnBkSGs2SURFN0lIMWNjbHh1WEhSMGJ5QjdJRzl3WVdOcGRIazZJREE3SUgxY2NseHVmVnh5WEc1QWEyVjVabkpoYldWeklHSm5YM1J2WDJOdmJHOXlJSHRjY2x4dVhIUm1jbTl0SUhzZ1ltRmphMmR5YjNWdVpEb2djbWRpWVNna1luSmhibVF0WTI5c2IzSXNJREFwT3lCOVhISmNibHgwZEc4Z2V5QmlZV05yWjNKdmRXNWtPaUJ5WjJKaEtDUmljbUZ1WkMxamIyeHZjaXdnTUM0NE55azdJSDFjY2x4dWZWeHlYRzVBYTJWNVpuSmhiV1Z6SUdKblgzUnZYM1J5WVc1emNHRnlaVzUwSUh0Y2NseHVYSFJtY205dElIc2dZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ2tZbkpoYm1RdFkyOXNiM0lzSURBdU9EY3BPeUI5WEhKY2JseDBkRzhnZXlCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0NSaWNtRnVaQzFqYjJ4dmNpd2dNQ2s3SUgxY2NseHVmU0lzSWx4eVhHNHViQzEzY21Gd2NHVnlJSHRjY2x4dVhIUmNjbHh1WEhSQWFXNWpiSFZrWlNCemFYcGxLREV3TUNVcE8xeHlYRzVjZEcxaGNtZHBiam9nTUR0Y2NseHVYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JseDBiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNjbHh1WEhSdGFXNHRhR1ZwWjJoME9pQXhNREIyYUR0Y2NseHVYSFJBYVc1amJIVmtaU0JqZFhOMGIyMGdlMXh5WEc1Y2RGeDBiV2x1TFdobGFXZG9kRG9nTmpVd2NIZzdYSEpjYmx4MGZWeHlYRzU5SWl3aUkyeHZZV1JsY2kxM2NtRndjR1Z5SUh0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjY2x4dUlDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYSEpjYmlBZ0lDQjBiM0E2SURBN1hISmNiaUFnSUNCc1pXWjBPaUF3TzF4eVhHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYSEpjYmlBZ0lDQjZMV2x1WkdWNE9pQXhNREF3TzF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RYSnNLQzR1TDJsdFlXZGxjeTlrWldOdmNpOWlaeTlpWjE5d2NtVnNiMkZrWlhJdWFuQm5LU0JqWlc1MFpYSXZZMjkyWlhJZ2JtOHRjbVZ3WldGME8xeHlYRzU5WEhKY2JpTnNiMkZrWlhJZ2UxeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JpQWdJQ0J3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JpQWdJQ0JzWldaME9pQTFNQ1U3WEhKY2JpQWdJQ0IwYjNBNklEVXdKVHRjY2x4dUlDQWdJSGRwWkhSb09pQnlaVzBvTVRRMEtUdGNjbHh1SUNBZ0lHaGxhV2RvZERvZ2NtVnRLREUwTkNrN1hISmNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpTZ3ROVEFsTENBdE5UQWxLVHRjY2x4dUlDQWdJSG90YVc1a1pYZzZJREV3TURFN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hISmNiaUFnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzRnSUNBbUlHTnBjbU5zWlNCN1hISmNiaUFnSUNBZ0lDQWdkSEpoYm5ObWIzSnRMVzl5YVdkcGJqb2dZMlZ1ZEdWeUlHTmxiblJsY2p0Y2NseHVJQ0FnSUNBZ0lDQnpkSEp2YTJVdGQybGtkR2c2SURRN1hISmNiaUFnSUNBZ0lDQWdiM0JoWTJsMGVUb2dNRHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQ1lnWTJseVkyeGxJMkpwWjBOcGNtTnNaU0I3WEhKY2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb0xURXhOV1JsWnlrN1hISmNibHh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKaUJqYVhKamJHVWpiV2xrWkd4bFEybHlZMnhsSUh0Y2NseHVJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3RNVEExWkdWbktUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHTnBjbU5zWlNOemJXRnNiRU5wY21Oc1pTQjdYSEpjYmlBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCeWIzUmhkR1VvTFRrd1pHVm5LVHNnSUNBZ0lDQmNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNHViRzloWkdWeVgxOTBaWGgwSUh0Y2NseHVJQ0FnSUdadmJuUXRjMmw2WlRvZ2NtVnRLREUyS1R0Y2NseHVJQ0FnSUdOdmJHOXlPaUFrY0hKcGJXRnllVU52Ykc5eU8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0FnSUd4bFpuUTZJRFV3SlR0Y2NseHVJQ0FnSUhSdmNEbzFNQ1U3WEhKY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlNndE5UQWxMQ0F0TlRBbEtUdGNjbHh1ZlZ4eVhHNGpiRzloWkdWeUxYZHlZWEJ3WlhJZ0xteHZZV1JsY2kxelpXTjBhVzl1SUh0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjY2x4dUlDQWdJSFJ2Y0RvZ01EdGNjbHh1SUNBZ0lIZHBaSFJvT2lBMU1TVTdYSEpjYmlBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEhKY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCeVoySmhLQ1JpY21GdVpDMWpiMnh2Y2l3Z01DazdYSEpjYmlBZ0lDQjZMV2x1WkdWNE9pQXhNREF3TzF4eVhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEQXBPeUFnSUZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1STJ4dllXUmxjaTEzY21Gd2NHVnlJQzVzYjJGa1pYSXRjMlZqZEdsdmJpNXpaV04wYVc5dUxXeGxablFnZTF4eVhHNGdJQ0FnYkdWbWREb2dNRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaU5zYjJGa1pYSXRkM0poY0hCbGNpQXViRzloWkdWeUxYTmxZM1JwYjI0dWMyVmpkR2x2YmkxeWFXZG9kQ0I3WEhKY2JpQWdJQ0J5YVdkb2REb2dNRHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdktpQk1iMkZrWldRZ0tpOWNjbHh1TG14dllXUmxaQ0FqYkc5aFpHVnlMWGR5WVhCd1pYSWdMbXh2WVdSbGNpMXpaV04wYVc5dUxuTmxZM1JwYjI0dGJHVm1kQ0I3WEhKY2JseHlYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLQzB4TURBbEtUc2dYSEpjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z01DNDNjeUF3TGpOeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpZME5Td2dNQzR3TkRVc0lEQXVNelUxTENBeExqQXdNQ2tzWEhKY2JpQWdJQ0JjZEdKaFkydG5jbTkxYm1RZ01ITWdNSE1nYkdsdVpXRnlPMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ2tZbkpoYm1RdFkyOXNiM0lzSURBdU15azdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNHViRzloWkdWa0lDTnNiMkZrWlhJdGQzSmhjSEJsY2lBdWJHOWhaR1Z5TFhObFkzUnBiMjR1YzJWamRHbHZiaTF5YVdkb2RDQjdYSEpjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTVRBd0pTazdYSEpjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z01DNDNjeUF3TGpOeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpZME5Td2dNQzR3TkRVc0lEQXVNelUxTENBeExqQXdNQ2tzWEhKY2JpQWdJQ0JjZEdKaFkydG5jbTkxYm1RZ01ITWdNSE1nYkdsdVpXRnlPMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nY21kaVlTZ2tZbkpoYm1RdFkyOXNiM0lzSURBdU15azdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQmNjbHh1TG14dllXUmxaQ0FqYkc5aFpHVnlJSHRjY2x4dUlDQWdJRzl3WVdOcGRIazZJREE3SUZ4eVhHNGdJQ0FnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TTNNZ1pXRnpaUzF2ZFhRN1hISmNiaUFnSUNCOVhISmNiaTVzYjJGa1pXUWdJMnh2WVdSbGNpMTNjbUZ3Y0dWeUlIdGNjbHh1WEhSMmFYTnBZbWxzYVhSNU9pQm9hV1JrWlc0N1hISmNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29MVEV3TUNVcE95QWdYSEpjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z01DNHpjeUF4Y3lCbFlYTmxMVzkxZER0Y2NseHVJQ0FnSUgwaUxDSXZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVMeThnVkdocGN5Qm1hV3hsSUdOdmJuUmhhVzV6SUdGc2JDQmhjSEJzYVdOaGRHbHZiaTEzYVdSbElGTmhjM01nWm5WdVkzUnBiMjV6TGx4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpUmljbTkzYzJWeUxXTnZiblJsZUhRNklERTJPMXh1WEc0dkx5OGdjbVZ0WEc1Y2JrQm1kVzVqZEdsdmJpQnlaVzBvSkhCcGVHVnNjeXdnSkdOdmJuUmxlSFE2SUNSaWNtOTNjMlZ5TFdOdmJuUmxlSFFwSUh0Y2JpQWdRR2xtSUNoMWJtbDBiR1Z6Y3lna2NHbDRaV3h6S1NrZ2UxeHVJQ0FnSUNSd2FYaGxiSE02SUNSd2FYaGxiSE1nS2lBeGNIZzdYRzRnSUgxY2JseHVJQ0JBYVdZZ0tIVnVhWFJzWlhOektDUmpiMjUwWlhoMEtTa2dlMXh1SUNBZ0lDUmpiMjUwWlhoME9pQWtZMjl1ZEdWNGRDQXFJREZ3ZUR0Y2JpQWdmVnh1WEc0Z0lFQnlaWFIxY200Z0pIQnBlR1ZzY3lBdklDUmpiMjUwWlhoMElDb2dNWEpsYlR0Y2JuMWNibHh1THk4dklHVnRYRzVjYmtCbWRXNWpkR2x2YmlCbGJTZ2tjR2w0Wld4ekxDQWtZMjl1ZEdWNGREb2dKR0p5YjNkelpYSXRZMjl1ZEdWNGRDa2dlMXh1SUNCQWFXWWdLSFZ1YVhSc1pYTnpLQ1J3YVhobGJITXBLU0I3WEc0Z0lDQWdKSEJwZUdWc2N6b2dKSEJwZUdWc2N5QXFJREZ3ZUR0Y2JpQWdmVnh1WEc0Z0lFQnBaaUFvZFc1cGRHeGxjM01vSkdOdmJuUmxlSFFwS1NCN1hHNGdJQ0FnSkdOdmJuUmxlSFE2SUNSamIyNTBaWGgwSUNvZ01YQjRPMXh1SUNCOVhHNWNiaUFnUUhKbGRIVnliaUFrY0dsNFpXeHpJQzhnSkdOdmJuUmxlSFFnS2lBeFpXMDdYRzU5WEc1Y2JpOHZMeUJtZFc1amRHbHZiaUJwY3lCcGRDQmhiR3h2ZDNNZ2VXOTFJSFJ2SUhCaGMzTWdZU0JzYVhOMElHOW1JR1JwY21WamRHbHZibk1zSUZ4dUx5OHZjMjhnZEdoaGRDQjViM1VnWjJWMElHSnZkSFJ2YlNCc1pXWjBJR1p5YjIwZ2IzQndiM05wZEdVdFpHbHlaV04wYVc5dUtIUnZjQ0J5YVdkb2RDa3VYRzR2THk4Z1NYUWdZMkZ1SUdKbElIVnpaV1oxYkNCM2FHVnVJR1JsWVd4cGJtY2dkMmwwYUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dUxDQm1iM0lnYVc1emRHRnVZMlZjYmx4dVFHWjFibU4wYVc5dUlHOXdjRzl6YVhSbExXUnBjbVZqZEdsdmJpZ2taR2x5WldOMGFXOXVjeWtnZTF4dVhHNGdJQ1J2Y0hCdmMybDBaUzFrYVhKbFkzUnBiMjV6T2lBb0tUdGNiaUFnSkdScGNtVmpkR2x2YmkxdFlYQTZJQ2hjYmlBZ0lDQW5kRzl3SnpvZ0oySnZkSFJ2YlNjc1hHNGdJQ0FnSjNKcFoyaDBKem9nSjJ4bFpuUW5MRnh1SUNBZ0lDZGliM1IwYjIwbk9pQW5kRzl3Snl4Y2JpQWdJQ0FuYkdWbWRDYzZJQ2R5YVdkb2RDY3NYRzRnSUNBZ0oyeDBjaWM2SUNkeWRHd25MRnh1SUNBZ0lDZHlkR3duT2lBbmJIUnlKeWs3WEc1Y2JpQWdRR1ZoWTJnZ0pHUnBjbVZqZEdsdmJpQnBiaUFrWkdseVpXTjBhVzl1Y3lCN1hHNGdJQ0FnSkc5d2NHOXphWFJsTFdScGNtVmpkR2x2YmpvZ2JXRndMV2RsZENna1pHbHlaV04wYVc5dUxXMWhjQ3dnSkdScGNtVmpkR2x2YmlrN1hHNGdJQ0FnSUNBZ0lFQnBaaUFrYjNCd2IzTnBkR1V0WkdseVpXTjBhVzl1SUNFOUlHNTFiR3dnZXlCY2JpQWdJQ0FnSUNSdmNIQnZjMmwwWlMxa2FYSmxZM1JwYjI1ek9pQmhjSEJsYm1Rb0pHOXdjRzl6YVhSbExXUnBjbVZqZEdsdmJuTXNJQ043Skc5d2NHOXphWFJsTFdScGNtVmpkR2x2Ym4wcE8xeHVJQ0FnSUgxY2JpQWdJQ0JBWld4elpTQjdYRzRnSUNBZ0lDQkFkMkZ5YmlCY0lrNXZJRzl3Y0c5emFYUmxJR1JwY21WamRHbHZiaUJqWVc0Z1ltVWdabTkxYm1RZ1ptOXlJR0FqZXlSa2FYSmxZM1JwYjI1OVlDNWNJanRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JBY21WMGRYSnVJQ1J2Y0hCdmMybDBaUzFrYVhKbFkzUnBiMjV6TzF4dWZWeHVYRzRpTENJdWJDMXpaV04wYVc5dUlIdGNjbHh1WEhSM2FXUjBhRG9nTVRBd0pUdGNjbHh1WEhSdGFXNHRhR1ZwWjJoME9pQTJNamh3ZUR0Y2NseHVYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JseDBYSFJBYVc1amJIVmtaU0JqZFhOMGIyMGdlMXh5WEc1Y2RGeDBYSFJ0YVc0dGFHVnBaMmgwT2lBMk5UQndlRHRjY2x4dVhIUmNkRngwYldGNExYZHBaSFJvT2lCeVpXMG9NVGd3TUNrN1hISmNibHgwWEhSY2RHMWhjbWRwYmpvZ1lYVjBienRjY2x4dVhIUmNkSDFjY2x4dVhIUmNkRUJwYm1Oc2RXUmxJSFJoWW14bGRDQjdYSEpjYmx4MFhIUmNkRzFwYmkxb1pXbG5hSFE2SURFd01IWm9PMXh5WEc1Y2RGeDBmVnh5WEc1OVhISmNibHh5WEc0dWJDMXNZWE4wSUh0Y2NseHVYSFJvWldsbmFIUTZJREV3TUhab08xeHlYRzVjZEdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmx4MFpteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRianRjY2x4dWZWeHlYRzVjY2x4dUxtd3RiR0Y1YjNWMExXWnBjbk4wSUh0Y2NseHVYSFJBYVc1amJIVmtaU0JoWW5OdmJIVjBaUzF6ZEhKbGRHTm9PMXh5WEc1Y2RHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JseDBabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2NseHVmVnh5WEc1Y2NseHVMbXd0Wm1WbFpITWdlMXh5WEc1Y2RHaGxhV2RvZERvZ01USTRNSEI0TzF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2RYSnNLQ2N1TGk5cGJXRm5aWE12WkdWamIzSXZZbWN2Wm1WbFpITmZZbWN1Y0c1bkp5a2dibTh0Y21Wd1pXRjBPMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nWTJWdWRHVnlJR05sYm5SbGNqdGNjbHh1ZlNJc0lpNXNMWE5qY205c2JDMXdZWEpoYkd4aGVDMWpiMjUwWVdsdVpYSWdlMXh5WEc1Y2RHSmhZMnRuY205MWJtUTZJQ001UVVKRVFrVTdYSEpjYmx4MGIzWmxjbVpzYjNjdGVEb2dhR2xrWkdWdU8xeHlYRzVjZEc5MlpYSm1iRzkzTFhrNklHRjFkRzg3WEhKY2JseDBjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh5WEc1Y2RIUnZjRG9nTUR0Y2NseHVYSFJzWldaME9pQXdPMXh5WEc1Y2RISnBaMmgwT2lBd2NIZzdYSEpjYmx4MFltOTBkRzl0T2lBd08xeHlYRzVjZEhCbGNuTndaV04wYVhabE9pQXhNREJ3ZUR0Y2NseHVYSFJBYVc1amJIVmtaU0IwWVdKc1pYUWdlMXh5WEc1Y2RGeDBZbUZqYTJkeWIzVnVaRG9nZFhKc0tDNHVMMmx0WVdkbGN5OWtaV052Y2k5aVp5OXRiM1Z1ZEdGcGJuTXVhbkJuS1R0Y2NseHVYSFJjZEdKaFkydG5jbTkxYm1RdGMybDZaVG9nTXpBd0pTQmhkWFJ2TzF4eVhHNWNkRngwWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2NseHVYSFJjZEdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2lCMGIzQTdYSEpjYmx4MFhIUjZMV2x1WkdWNE9pQXdPMXh5WEc1Y2RIMWNjbHh1WEhSQWFXNWpiSFZrWlNCdGIySnBiR1VnZTF4eVhHNWNkRngwWW1GamEyZHliM1Z1WkMxemFYcGxPaUF6TXpBbElHRjFkRzg3WEhKY2JseDBmVnh5WEc1OVhISmNibHh5WEc0dWJDMXpZM0p2Ykd3dGNHRnlZV3hzWVhoZlgyeGhlV1Z5SUh0Y2NseHVYSFJ3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JseDBkRzl3T2lBd08xeHlYRzVjZEd4bFpuUTZJQzB4TURCd2VEdGNjbHh1WEhSeWFXZG9kRG9nTUR0Y2NseHVYSFJpYjNSMGIyMDZJREE3WEhKY2JseDBlaTFwYm1SbGVEb2dMVEU3WEhKY2JseDBKanBtYVhKemRDMWphR2xzWkNBdWJDMXpZM0p2Ykd3dGNHRnlZV3hzWVhoZlgybHRaeUI3WEhKY2JseDBYSFIwYjNBNklEQTdYSEpjYmx4MGZWeHlYRzVjZEVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEhKY2JseDBYSFJrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbXd0YzJOeWIyeHNMWEJoY21Gc2JHRjRYMTlwYldjZ2UxeHlYRzVjZEdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc1Y2RIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1WEhSc1pXWjBPaUExTUNVN1hISmNibHgwWW05MGRHOXRPaUF3TzF4eVhHNWNkSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NndE5UQWxLVHRjY2x4dVhIUjNhV1IwYURvZ01UQXdKVHRjY2x4dVhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHlYRzVjZEZ4MFpHbHpjR3hoZVRvZ2JtOXVaVHRjY2x4dVhIUjlYSEpjYm4xY2NseHVYSEpjYmk1d1lYSmhiR3hoZUY5ZlkyOXVkR1Z1ZENCN1hISmNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4eVhHNGdJSFJ2Y0RvZ01UQXdKVHRjY2x4dUlDQnNaV1owT2lBd08xeHlYRzRnSUhKcFoyaDBPaUF3TzF4eVhHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV2lnd0tUdGNjbHh1SUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4eVhHNTlYSEpjYmx4eVhHNGtiR0Y1WlhKek9pQXhNRHRjY2x4dVFHWnZjaUFrYVNCbWNtOXRJQ1JzWVhsbGNuTWdkR2h5YjNWbmFDQXhJSHRjY2x4dVhIUXViQzF6WTNKdmJHd3RjR0Z5WVd4c1lYaGZYMnhoZVdWeU9tNTBhQzFqYUdsc1pDZ2pleVJwZlNrZ2UxeHlYRzVjZEZ4MEpHTjFjbkpsYm5STVlYbGxjam9nSkd4aGVXVnljeUF0SUNScE8xeHlYRzVjZEZ4MEpIQmxjbk53WldOMGFYWmxPaUF0SkdOMWNuSmxiblJNWVhsbGNpQXFJRFV3Y0hnN1hISmNibHgwWEhRa2MyTmhiR1U2SUNSamRYSnlaVzUwVEdGNVpYSWdLaUF1TlNBcklERTdYSEpjYmx4eVhHNWNkRngwZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWYUtDUndaWEp6Y0dWamRHbDJaU2tnYzJOaGJHVW9KSE5qWVd4bEtUdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNia0JtYjNJZ0pHeGhlV1Z5YzA1MWJTQm1jbTl0SUNSc1lYbGxjbk1nZEdoeWIzVm5hQ0F4SUh0Y2NseHVJQ0F1YzJOeWIyeHNMWEJoY21Gc2JHRjRYMTlzWVhsbGNqcHVkR2d0WTJocGJHUW9JM3NrYkdGNVpYSnpUblZ0ZlNrZ2UxeHlYRzRnSUNBZ0pHTjFjbkpsYm5STVlYbGxjam9nSkd4aGVXVnljeUF0SUNSc1lYbGxjbk5PZFcwN1hISmNiaUFnSUNBa2NHVnljM0JsWTNScGRtVTZJQzBrWTNWeWNtVnVkRXhoZVdWeUlDb2dOVEJ3ZUR0Y2NseHVJQ0FnSUNSelkyRnNaVG9nSkdOMWNuSmxiblJNWVhsbGNpQXFJQzQxSUNzZ01UdGNjbHh1WEhKY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZvb0pIQmxjbk53WldOMGFYWmxLU0J6WTJGc1pTZ2tjMk5oYkdVcE8xeHlYRzRnSUgxY2NseHVmU0lzSWx4eVhHNHViQzFvWlhKdklIdGNjbHh1WEhSb1pXbG5hSFE2SURFd01IWm9PMXh5WEc1Y2RGeDBKanBpWldadmNtVWdlMXh5WEc1Y2RGeDBYSFJqYjI1MFpXNTBPaUFuSnp0Y2NseHVYSFJjZEZ4MFpHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JseDBYSFJjZEVCcGJtTnNkV1JsSUdGaWMyOXNkWFJsTFhOMGNtVjBZMmc3WEhKY2JseDBYSFJjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKblltRW9NU3dnTVRBeUxDQXhNVFFzSURBdU15azdYSEpjYmx4MFhIUmNkSG90YVc1a1pYZzZJREE3WEhKY2JseDBYSFI5WEhKY2JseDBYSFJjY2x4dVhIUkFhVzVqYkhWa1pTQmpkWE4wYjIwZ2UxeHlYRzVjZEZ4MGJXbHVMV2hsYVdkb2REb2dOalV3Y0hnN1hISmNibHgwZlZ4eVhHNWNjbHh1WEhSQWFXNWpiSFZrWlNCdGIySnBiR1VnZTF4eVhHNWNkRngwWW1GamEyZHliM1Z1WkMxaGRIUmhZMmh0Wlc1ME9pQnpZM0p2Ykd3N1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNHViQzFvWlhKdlgySnNiMmNnZTF4eVhHNWNkR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SUdObGJuUmxjaUIwYjNBN1hISmNibHgwSmlBdWJDMXRZV2x1WDE5MGIzQWdlMXh5WEc1Y2RGeDBjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc1Y2RGeDBkRzl3T2lBM01DVTdYSEpjYmx4MGZWeHlYRzVjZENZZ0xuQmhjbUZzYkdGNFgxOWpiMjUwWlc1MElIdGNjbHh1WEhSY2RIUnZjRG9nTnpJbE8xeHlYRzVjZEgxY2NseHVYSFFtSUM1c0xXaGxjbTlmWDJSbGRtVnNiM0FnZTF4eVhHNWNkRngwZEc5d09pQXdPMXh5WEc1Y2RGeDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTFRVd0pTd2dOVEFsS1R0Y2NseHVYSFJjZEVCcGJtTnNkV1JsSUdOMWMzUnZiVjh4T0RBd0lIdGNjbHh1WEhSY2RGeDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTFRVd0pTd2dNVFV3SlNrN1hISmNibHgwWEhSOVhISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNHViQzFvWlhKdlgxOWtaWFpsYkc5d0lIdGNjbHh1WEhSQWFXNWpiSFZrWlNCaFluTnZiSFYwWlMxalpXNTBaWEk3WEhKY2JseDBlaTFwYm1SbGVEb2dNVFU3WEhKY2JuMGlMQ0pjY2x4dUxtd3RhR1Z5YjE5ZmMyOWphV0ZzSUh0Y2NseHVYSFJ3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JseDBlaTFwYm1SbGVEb2dNVFU3WEhKY2JseDBiR1ZtZERvZ01UQWxPMXh5WEc1Y2RIUnZjRG9nTVRBbE8xeHlYRzVjZEdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmx4MGQybGtkR2c2SURFeUpUdGNjbHh1WEhScWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYSEpjYmx4MFFHbHVZMngxWkdVZ1kzVnpkRzl0WHpFNE1EQWdlMXh5WEc1Y2RGeDBiR1ZtZERvZ05UQWxPMXh5WEc1Y2RGeDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0MwNE1EQndlQ2s3WEhKY2JseDBmVnh5WEc1Y2RFQnBibU5zZFdSbElHUmxjMnQwYjNBZ2UxeHlYRzVjZEZ4MGQybGtkR2c2SURFMkpUdGNjbHh1WEhSOVhISmNibHgwUUdsdVkyeDFaR1VnYkdGd2RHOXdJSHRjY2x4dVhIUmNkSGRwWkhSb09pQXhOaVU3WEhKY2JseDBmVnh5WEc1Y2RFQnBibU5zZFdSbElIUmhZbXhsZENCN1hISmNibHgwWEhSM2FXUjBhRG9nTWpBbE8xeHlYRzVjZEZ4MGRHOXdPaUExSlR0Y2NseHVYSFJjZEd4bFpuUTZJRFVsTzF4eVhHNWNkSDFjY2x4dVhIUkFhVzVqYkhWa1pTQnRiMkpwYkdVZ2UxeHlYRzVjZEZ4MGQybGtkR2c2SURNd0pUdGNjbHh1WEhSY2RIUnZjRG9nTkNVN1hISmNibHgwWEhSc1pXWjBPaUEwSlR0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JpNXNMV2hsY205ZlgzTnZZMmxoYkMxcGRHVnRJSHRjY2x4dVhISmNibHgwYUdWcFoyaDBPaUJ5Wlcwb01qSXBPMXh5WEc1OVhISmNibHh5WEc0dWJDMW9aWEp2WDE5emIyTnBZV3d0YkdsdWF5QjdYSEpjYmx4eVhHNWNkR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2NseHVYSFJvWldsbmFIUTZJREV3TUNVN1hISmNibHgwWTI5c2IzSTZJQ1J3Y21sdFlYSjVRMjlzYjNJN1hISmNibHh5WEc1Y2RDWTZhRzkyWlhJZ0xuTjJaeTExYzJVZ2UxeHlYRzVjZEZ4MGIzQmhZMmwwZVRvZ01UdGNjbHh1WEhSOVhISmNibHgwSmpwMmFYTnBkR1ZrSUM1emRtY3RkWE5sSUh0Y2NseHVYSFJjZEc5d1lXTnBkSGs2SURBdU5UdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNiaTV6ZG1jdGRYTmxJSHRjY2x4dVhISmNibHgwUUdsdVkyeDFaR1VnYzJsNlpTaHlaVzBvTWpncExDQnlaVzBvTWpJcEtUdGNjbHh1WEhSMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlEQXVOSE03WEhKY2JseDBiM0JoWTJsMGVUb2dNQzQxTzF4eVhHNTlJaXdpTG13dFkyOXVkR0ZwYm1WeUlIdGNjbHh1WEhSM2FXUjBhRG9nT1RVbE8xeHlYRzVjZEdobGFXZG9kRG9nY21WdEtERTBOM0I0S1R0Y2NseHVYSFJrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzVjZEcxaGNtZHBiam9nWVhWMGJ6dGNjbHh1WEhSbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh5WEc1Y2RHWnNaWGd0ZDNKaGNEb2dkM0poY0R0Y2NseHVYSFJBYVc1amJIVmtaU0IwWVdKc1pYUWdlMXh5WEc1Y2RGeDBhR1ZwWjJoME9pQnlaVzBvTWpNMktUdGNjbHh1WEhSY2RHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYSEpjYmx4MGZWeHlYRzVjZEVCcGJtTnNkV1JsSUcxdlltbHNaU0I3WEhKY2JseDBYSFJvWldsbmFIUTZJSEpsYlNneU56QXBPMXh5WEc1Y2RIMWNjbHh1ZlNJc0lseHlYRzR1YkMxb1lXMWlkWEpuWlhJZ2UxeHlYRzVjZEhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVYSFIwYjNBNklERXdKVHRjY2x4dVhIUnlhV2RvZERvZ01UQWxPMXh5WEc1Y2RIb3RhVzVrWlhnNklERTFPMXh5WEc1Y2RFQnBibU5zZFdSbElIUmhZbXhsZENCN1hISmNibHgwWEhSeWFXZG9kRG9nTlNVN1hISmNibHgwWEhSMGIzQTZJRFVsTzF4eVhHNWNkSDFjY2x4dVhIUkFhVzVqYkhWa1pTQnRiMkpwYkdVZ2UxeHlYRzVjZEZ4MGNtbG5hSFE2SURRbE8xeHlYRzVjZEZ4MGRHOXdPaUEwSlR0Y2NseHVYSFI5WEhKY2JseDBRR2x1WTJ4MVpHVWdZM1Z6ZEc5dFh6RTRNREFnZTF4eVhHNWNkRngwYkdWbWREb2dOVEFsTzF4eVhHNWNkRngwZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWUtEZ3dNSEI0S1R0Y2NseHVYSFI5WEhKY2JseDBKbDkzYjNKcmN5QjdYSEpjYmx4MFhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHlYRzVjZEZ4MFhIUjBiM0E2SURJdU5TVTdYSEpjYmx4MFhIUjlYSEpjYmx4MGZWeHlYRzU5WEhKY2JseHlYRzRpTENJdWJDMXRZV2x1SUh0Y2NseHVYSFIzYVdSMGFEb2dNVEF3SlR0Y2NseHVYSFJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqUmpCRlJrVTVPMXh5WEc1Y2RDOHZhR1ZwWjJoME9pQXhNREFsTzF4eVhHNTlYSEpjYmx4eVhHNHViQzF0WVdsdVgxOTBiM0FnZTF4eVhHNWNkSGRwWkhSb09pQXhNREFsTzF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dVhIUjBiM0E2SURFd01DVTdYSEpjYmx4MGJHVm1kRG9nTUR0Y2NseHVYSFJ5YVdkb2REb2dNRHRjY2x4dVhIUjZMV2x1WkdWNE9pQXdPMXh5WEc1Y2RIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXU2d0TlRBbEtUdGNjbHh1ZlZ4eVhHNWNjbHh1TG13dGJXRnBibDlmZDNKaGNIQmxjaUI3WEhKY2JseDBkMmxrZEdnNklERXdNQ1U3WEhKY2JseDBiV2x1TFdobGFXZG9kRG9nTVRBd0pUdGNjbHh1WEhSa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc1Y2RHRnNhV2R1TFdsMFpXMXpPaUJpWVhObGJHbHVaVHRjY2x4dVhIUkFhVzVqYkhWa1pTQmpkWE4wYjIwZ2UxeHlYRzVjZEZ4MFhIUnRZWGd0ZDJsa2RHZzZJSEpsYlNneE9EQXdLVHRjY2x4dVhIUmNkRngwYldGeVoybHVPaUJoZFhSdk8xeHlYRzVjZEgxY2NseHVYSFFtTG13dGJXRnBibDlpYkc5bklIdGNjbHh1WEhSY2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1ZV1k0WmpBN1hISmNibHgwWEhSa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc1Y2RGeDBabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2NseHVYSFI5WEhKY2JseDBKaTVzTFcxaGFXNWZkMjl5YTNNZ2UxeHlYRzVjZEZ4MFpHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JseDBYSFF2TDIxaGNtZHBiaTFpYjNSMGIyMDZJRElsTzF4eVhHNWNkSDFjY2x4dVhIUW1MbXd0YldGcGJsOWhZbTkxZENCN1hISmNibHgwWEhSaVlXTnJaM0p2ZFc1a09pQnlaMklvTWpRd0xESXpPU3d5TXpNcE95QXZLaUJQYkdRZ1luSnZkM05sY25NZ0tpOWNjbHh1WEhSaVlXTnJaM0p2ZFc1a09pQXRkMlZpYTJsMExXeHBibVZoY2kxbmNtRmthV1Z1ZENoc1pXWjBMQ0J5WjJKaEtESTBNQ3d5TXprc01qTXpMREVwSURBbExDQnlaMkpoS0RJek9Td3lNelVzTWpJMExERXBJRFV3SlN3Z2NtZGlZU2d5TXprc01qTTFMREl5TkN3eEtTQXhNREFsS1R0Y2NseHVYSFJpWVdOclozSnZkVzVrT2lBdGJ5MXNhVzVsWVhJdFozSmhaR2xsYm5Rb2JHVm1kQ3dnY21kaVlTZ3lOREFzTWpNNUxESXpNeXd4S1NBd0pTd2djbWRpWVNneU16a3NNak0xTERJeU5Dd3hLU0ExTUNVc0lISm5ZbUVvTWpNNUxESXpOU3d5TWpRc01Ta2dNVEF3SlNrN1hISmNibHgwWW1GamEyZHliM1Z1WkRvZ2JHbHVaV0Z5TFdkeVlXUnBaVzUwS0hSdklISnBaMmgwTENCeVoySmhLREkwTUN3eU16a3NNak16TERFcElEQWxMQ0J5WjJKaEtESXpPU3d5TXpVc01qSTBMREVwSURVd0pTd2djbWRpWVNneU16a3NNak0xTERJeU5Dd3hLU0F4TURBbEtUc2dMeW9nUmtZekxqWXRNVFVnS2k4Z0x5b2dRMmh5YjIxbE1UQXRNalVzVTJGbVlYSnBOUzR4TFRZZ0tpOGdMeW9nVnpORExDQkpSVEV3S3l3Z1JrWXhOaXNzSUVOb2NtOXRaVEkyS3l3Z1QzQmxjbUV4TWlzc0lGTmhabUZ5YVRjcklDb3ZYSEpjYmx4MFptbHNkR1Z5T2lCd2NtOW5hV1E2UkZoSmJXRm5aVlJ5WVc1elptOXliUzVOYVdOeWIzTnZablF1WjNKaFpHbGxiblFvSUhOMFlYSjBRMjlzYjNKemRISTlKeU5tTUdWbVpUa25MQ0JsYm1SRGIyeHZjbk4wY2owbkkyVm1aV0psTUNjc1IzSmhaR2xsYm5SVWVYQmxQVEVnS1RzZ0x5b2dTVVUyTFRrZ0tpOWNjbHh1WEhSY2RFQnBibU5zZFdSbElIUmhZbXhsZENCN1hISmNibHgwWEhSY2RHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEhKY2JseDBYSFJjZEdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibHgwWEhSOVhISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNHViQzF0WVdsdVgxOW9aV0ZrWlhJZ2UxeHlYRzVjZEVCcGJtTnNkV1JsSUhOcGVtVW9NVEF3SlN3Z2NtVnRLREU1TlNrcE8xeHlYRzVjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKbllpZ3lOVEFzSURJME9Dd2dNalF3S1R0Y2NseHVYSFJrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzVjZEdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh5WEc1Y2RHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYSEpjYmx4MFFHbHVZMngxWkdVZ2JXOWlhV3hsSUh0Y2NseHVYSFJjZEdobGFXZG9kRG9nT1hKbGJUdGNjbHh1WEhSOVhIUmNjbHh1ZlZ4eVhHNWNjbHh1TG13dGJXRnBibDlmYUdWaFpHVnlMWFJwZEd4bElIdGNjbHh1WEhSM2FXUjBhRG9nTkRBbE8xeHlYRzVjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2NseHVYSFJqYjJ4dmNqb2dKSFJwZEd4bExXTnZiRzl5TzF4eVhHNWNkR1JwYzNCc1lYazZJR1pzWlhnN1hISmNibHgwYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYSEpjYmx4MFlXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNjbHh1WEhRbUlDNW9MWFJwZEd4bExYTmxZM1JwYjI0Z2UxeHlYRzVjZEZ4MElIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNjbHh1WEhSOVhISmNibHgwSmpvNlptbHljM1F0YkdWMGRHVnlJSHRjY2x4dVhIUmNkSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYSEpjYmx4MGZWeHlYRzVjZEVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEhKY2JseDBYSFIzYVdSMGFEb2dOak1sTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxtd3RiV0ZwYmw5ZmMyeHBaR1Z5SUh0Y2NseHVYSFIzYVdSMGFEb2dNVEF3SlR0Y2NseHVYSFJvWldsbmFIUTZJRGMxTUhCNE8xeHlYRzVjZEdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc1Y2RHMWhjbWRwYmkxaWIzUjBiMjA2SURNbE8xeHlYRzVjZEVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEhKY2JseDBYSFJvWldsbmFIUTZJREV3TXpCd2VEdGNjbHh1WEhSOVhISmNibHgwUUdsdVkyeDFaR1VnYlc5aWFXeGxJSHRjY2x4dVhIUmNkR2hsYVdkb2REb2dOVGcxY0hnN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNHViQzF0WVdsdVgxOWpiMngxYlc0dGIyNWxMQ0F1YkMxdFlXbHVYMTlqYjJ4MWJXNHRkSGR2SUh0Y2NseHVYSFJtYkdWNE9pQXhPMXh5WEc1Y2RIZHBaSFJvT2lBMU1DVTdYSEpjYmx4MGJXbHVMV2hsYVdkb2REb2dNVEF3SlR0Y2NseHVYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JseDBRR2x1WTJ4MVpHVWdkR0ZpYkdWMElIdGNjbHh1WEhSY2RIZHBaSFJvT2lBeE1EQWxPMXh5WEc1Y2RIMWNjbHh1ZlZ4eVhHNWNjbHh1TG13dGJXRnBibDlmWTI5c2RXMXVMVzl1WlNCN1hISmNibHgwWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTBZd1JVWkZPVHRjY2x4dWZWeHlYRzVjY2x4dUxtd3RiV0ZwYmw5ZlkyOXNkVzF1TFhSM2J5QjdYSEpjYmx4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kwVkdSVUpGTUR0Y2NseHVmU0lzSWk1c0xXWnZiM1JsY2lCN1hISmNibHgwY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4eVhHNWNkR1JwYzNCc1lYazZJR1pzWlhnN1hISmNibHgwYldsdUxXaGxhV2RvZERvZ2NtVnRLREUwTjNCNEtUdGNjbHh1WEhSaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCeVoySmhLRFUxTENBMk1pd2dOallzTUM0NE5TazdYSEpjYmx4MGNHRmtaR2x1WnpvZ01DNDFKU0F3TzF4eVhHNWNkSGRwWkhSb09pQXhNREFsTzF4eVhHNWNkQ1k2WVdaMFpYSWdlMXh5WEc1Y2RGeDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hISmNibHgwWEhSamIyNTBaVzUwT2lBbkp6dGNjbHh1WEhSY2RIZHBaSFJvT2lBeE1EQWxPMXh5WEc1Y2RGeDBhR1ZwWjJoME9pQXhjSGc3WEhKY2JseDBYSFJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJKaEtDUndjbWx0WVhKNVEyOXNiM0lzSURBdU1TazdYSEpjYmx4MFhIUndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYSEpjYmx4MFhIUnNaV1owT2lBd08xeHlYRzVjZEZ4MGRHOXdPaUExTUNVN1hISmNibHgwZlZ4eVhHNWNkRUJwYm1Oc2RXUmxJSFJoWW14bGRDQjdYSEpjYmx4MFhIUnRhVzR0YUdWcFoyaDBPaUJ5Wlcwb01qTTJLVHRjY2x4dVhIUjlYSEpjYmx4MFFHbHVZMngxWkdVZ2JXOWlhV3hsSUh0Y2NseHVYSFJjZEcxcGJpMW9aV2xuYUhRNklISmxiU2d5TnpBcE8xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbXd0Wm05dmRHVnlYMTl1WVhZZ2UxeHlYRzVjZEhkcFpIUm9PaUExTUNVN1hISmNibHgwYUdWcFoyaDBPaUExTUNVN1hISmNibHgwWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1WEhSaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzVjZEVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEhKY2JseDBYSFIzYVdSMGFEb2dPVEFsTzF4eVhHNWNkRngwYUdWcFoyaDBPaUF5TWlVN1hISmNibHgwWEhSdmNtUmxjam9nTVR0Y2NseHVYSFJjZEdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh5WEc1Y2RIMWNjbHh1WEhSQWFXNWpiSFZrWlNCdGIySnBiR1VnZTF4eVhHNWNkRngwZDJsa2RHZzZJREV3TUNVN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNHViQzFtYjI5MFpYSmZYM1JsZUhRZ2UxeHlYRzVjZEhkcFpIUm9PaUExTUNVN1hISmNibHgwYUdWcFoyaDBPaUExTUNVN1hISmNibHgwWm05dWRDMXphWHBsT2lCeVpXMG9NVGNwTzF4eVhHNWNkR1p2Ym5RdGQyVnBaMmgwT2lBek1EQTdYSEpjYmx4MFkyOXNiM0k2SUhKblltRW9KSEJ5YVcxaGNubERiMnh2Y2l3Z01DNDFLVHRjY2x4dVhIUnNhVzVsTFdobGFXZG9kRG9nTVM0MU8xeHlYRzVjZEhSbGVIUXRZV3hwWjI0NklHeGxablE3WEhKY2JseDBaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVYSFJoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4eVhHNWNkQ1lnWVNCN1hISmNibHgwWEhSMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUhWdVpHVnliR2x1WlR0Y2NseHVYSFJjZEdOMWNuTnZjam9nY0c5cGJuUmxjanRjY2x4dVhIUmNkRzl3WVdOcGRIazZJREF1TlR0Y2NseHVYSFI5WEhKY2JseDBKaUJoT21odmRtVnlJSHRjY2x4dVhIUmNkSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2NseHVYSFI5WEhKY2JseDBRR2x1WTJ4MVpHVWdkR0ZpYkdWMElIdGNjbHh1WEhSY2RIZHBaSFJvT2lBNE1DVTdYSEpjYmx4MFhIUm9aV2xuYUhRNklESTRKVHRjY2x4dVhIUmNkRzl5WkdWeU9pQXpPMXh5WEc1Y2RGeDBhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hISmNibHgwWEhSMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNibHgwZlZ4eVhHNWNkRUJwYm1Oc2RXUmxJRzF2WW1sc1pTQjdYSEpjYmx4MFhIUjNhV1IwYURvZ01UQXdKVHRjY2x4dVhIUjlYSEpjYm4xY2NseHVYSEpjYmk1c0xXWnZiM1JsY2w5ZmMyOWphV0ZzSUh0Y2NseHVYSFIzYVdSMGFEbzFNQ1U3WEhKY2JseDBhR1ZwWjJoME9pQTFNQ1U3WEhKY2JseDBaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVYSFJxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndFpXNWtPMXh5WEc1Y2RHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYSEpjYmx4MFFHbHVZMngxWkdVZ2RHRmliR1YwSUh0Y2NseHVYSFJjZEhkcFpIUm9PaUE0TUNVN1hISmNibHgwWEhSb1pXbG5hSFE2SURJNEpUdGNjbHh1WEhSY2RHOXlaR1Z5T2lBeU8xeHlYRzVjZEZ4MGFuVnpkR2xtZVMxamIyNTBaVzUwT2lCalpXNTBaWEk3WEhKY2JseDBmVnh5WEc1Y2RFQnBibU5zZFdSbElHMXZZbWxzWlNCN1hISmNibHgwWEhSM2FXUjBhRG9nT1RBbE8xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbXd0Wm05dmRHVnlYMTl6YjJOcFlXd3RhWFJsYlNCN1hISmNibHgwUUdsdVkyeDFaR1VnYzJsNlpTZ3lMakZ5WlcwcE8xeHlYRzVjZEdKdmNtUmxjam9nTUM0MWNIZ2djMjlzYVdRZ2NtZGlZU2drY0hKcGJXRnllVU52Ykc5eUxDQXdMalVwTzF4eVhHNWNkR0p2Y21SbGNpMXlZV1JwZFhNNklEVXdKVHRjY2x4dVhIUnRZWEpuYVc0dGNtbG5hSFE2SURJbE8xeHlYRzVjZEhSeVlXNXphWFJwYjI0NklHSmhZMnRuY205MWJtUXRZMjlzYjNJZ01DNHpjenRjY2x4dVhIUkFhVzVqYkhWa1pTQnRiMkpwYkdVZ2UxeHlYRzVjZEZ4MGJXRnlaMmx1TFhKcFoyaDBPaUEwSlR0Y2NseHVYSFI5WEhKY2JseDBKanBvYjNabGNpQWdlMXh5WEc1Y2RGeDBZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNna2NISnBiV0Z5ZVVOdmJHOXlMQ0F3TGpnMUtUdGNjbHh1WEhSY2RDNXNMV1p2YjNSbGNsOWZjMjlqYVdGc0xXeHBibXNnZTF4eVhHNWNkRngwWEhSamIyeHZjam9nSkhSbGVIUXRZMjlzYjNJN1hISmNibHgwWEhSOVhISmNibHgwWEhRbUlDNXpkbWN0ZFhObElIdGNjbHh1WEhSY2RHOXdZV05wZEhrNklERTdYSEpjYmx4MFhIUjlYSFJjZEZ4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxtd3RabTl2ZEdWeVgxOXpiMk5wWVd3dGJHbHVheUI3WEhKY2JseDBaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4eVhHNWNkRUJwYm1Oc2RXUmxJSE5wZW1Vb01UQXdKU2s3WEhKY2JseDBZMjlzYjNJNklDUndjbWx0WVhKNVEyOXNiM0k3WEhKY2JseDBaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVYSFJxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNjbHh1WEhSaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzVjZEhSeVlXNXphWFJwYjI0NklHTnZiRzl5SURBdU0zTTdYSEpjYmx4MEppQXVjM1puTFhWelpTQjdYSEpjYmx4MFhIUkFhVzVqYkhWa1pTQnphWHBsS0RFdU1uSmxiU3dnTVM0MU5YSmxiU2s3WEhKY2JseDBYSFJ2Y0dGamFYUjVPaUF3TGpVN1hISmNibHgwWEhSMGNtRnVjMmwwYVc5dU9pQnZjR0ZqYVhSNUlEQXVNM003WEhKY2JseDBmVngwWEhSY2NseHVmU0lzSWk1dmRtVnliR0Y1SUh0Y2NseHVYSFJrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzVjZEdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh5WEc1Y2RHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYSEpjYmx4MGNHOXphWFJwYjI0NklHWnBlR1ZrTzF4eVhHNWNkSFJ2Y0RvZ01EdGNjbHh1WEhSeWFXZG9kRG9nTUR0Y2NseHVYSFI2TFdsdVpHVjRPaUE1TzF4eVhHNWNkRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2d4TURBbEtUdGNjbHh1WEhSaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCeVoySmhLQ1JpY21GdVpDMWpiMnh2Y2l3Z01DazdYSEpjYmx4MFFHbHVZMngxWkdVZ1kzVnpkRzl0WHpFNE1EQWdlMXh5WEc1Y2RGeDBiR1ZtZERvZ05UQWxPMXh5WEc1Y2RGeDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0MwMU1DVXBPMXh5WEc1Y2RGeDBkMmxrZEdnNklERTRNVE53ZUR0Y2NseHVYSFI5WEhKY2JuMWNjbHh1TG05MlpYSnNZWGtnTG05MlpYSnNZWGt0YzJWamRHbHZiaUI3WEhKY2JpQWdJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUTdYSEpjYmlBZ0lDQjBiM0E2SURBN1hISmNiaUFnSUNCM2FXUjBhRG9nTlRBdU15VTdYSEpjYmlBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEhKY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCeVoySmhLQ1JpY21GdVpDMWpiMnh2Y2l3Z01DNDROeWs3WEhKY2JpQWdJQ0I2TFdsdVpHVjRPaUF0TVR0Y2NseHVJQ0FnSUhkcGJHd3RZMmhoYm1kbE9pQjBjbUZ1YzJadmNtMDdJRnh5WEc1OVhISmNiaTV2ZG1WeWJHRjVJQzV2ZG1WeWJHRjVMWE5sWTNScGIyNHVjMlZqZEdsdmJpMXNaV1owSUh0Y2NseHVJQ0FnSUd4bFpuUTZJREE3WEhKY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb0xURXdNQ1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1TG05MlpYSnNZWGtnTG05MlpYSnNZWGt0YzJWamRHbHZiaTV6WldOMGFXOXVMWEpwWjJoMElIdGNjbHh1SUNBZ0lISnBaMmgwT2lBd08xeHlYRzRnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLREV3TUNVcE8xeHlYRzRnSUNBZ2ZWeHlYRzR1YjNabGNteGhlU0F1WXkxb1lXMWlkWEpuWlhJdGJtRjJYMTlzYVhOMElIdGNjbHh1WEhSdmNHRmphWFI1T2lBd08xeHlYRzU5WEhKY2JpOHFJSFJ2WHlCdmNHVnVLaTljY2x4dUxtOTJaWEpzWVhrdWRHOWZiM0JsYmlCN1hISmNibHgwWVc1cGJXRjBhVzl1T2lCaVoxOTBiMTlqYjJ4dmNpQXdMak56SURBdU5YTWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU5qUTFMQ0F3TGpBME5Td2dNQzR6TlRVc0lERXVNREF3S1R0Y2NseHVYSFJoYm1sdFlYUnBiMjR0Wm1sc2JDMXRiMlJsT2lCbWIzSjNZWEprY3p0Y2NseHVmVnh5WEc0dWIzWmxjbXhoZVM1MGIxOXZjR1Z1SUM1dmRtVnliR0Y1TFhObFkzUnBiMjR1YzJWamRHbHZiaTFzWldaMElIdGNjbHh1WEhSaGJtbHRZWFJwYjI0NklHOXdaVzVmYUdGdFluVnlaMlZ5WDJ4bFpuUWdNQzQxY3lBd2N5QmpkV0pwWXkxaVpYcHBaWElvTUM0Mk5EVXNJREF1TURRMUxDQXdMak0xTlN3Z01TNHdNREFwTEZ4eVhHNWNkSFJ2WDNWdWRtbHphV0pzWlNBd0xqSnpJREF1Tm5NZ1kzVmlhV010WW1WNmFXVnlLREF1TmpRMUxDQXdMakEwTlN3Z01DNHpOVFVzSURFdU1EQXdLVHRjY2x4dVhIUmhibWx0WVhScGIyNHRabWxzYkMxdGIyUmxPaUJtYjNKM1lYSmtjenRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaTV2ZG1WeWJHRjVMblJ2WDI5d1pXNGdMbTkyWlhKc1lYa3RjMlZqZEdsdmJpNXpaV04wYVc5dUxYSnBaMmgwSUh0Y2NseHVJQ0FnSUdGdWFXMWhkR2x2YmpvZ2IzQmxibDlvWVcxaWRYSm5aWEpmY21sbmFIUWdNQzQxY3lBd2N5QmpkV0pwWXkxaVpYcHBaWElvTUM0Mk5EVXNJREF1TURRMUxDQXdMak0xTlN3Z01TNHdNREFwTEZ4eVhHNGdJQ0FnZEc5ZmRXNTJhWE5wWW14bElEQXVNbk1nTUM0MmN5QmpkV0pwWXkxaVpYcHBaWElvTUM0Mk5EVXNJREF1TURRMUxDQXdMak0xTlN3Z01TNHdNREFwTzF4eVhHNWNkR0Z1YVcxaGRHbHZiaTFtYVd4c0xXMXZaR1U2SUdadmNuZGhjbVJ6TzF4eVhHNGdJQ0FnZlZ4eVhHNHViM1psY214aGVTNTBiMTl2Y0dWdUlDNWpMV2hoYldKMWNtZGxjaTF1WVhaZlgyeHBjM1FnZTF4eVhHNGdJQ0FnWVc1cGJXRjBhVzl1T2lCMGIxOTJhWE5wWW14bElEQXVNWE1nTUM0MmN5QmpkV0pwWXkxaVpYcHBaWElvTUM0Mk5EVXNJREF1TURRMUxDQXdMak0xTlN3Z01TNHdNREFwTzF4eVhHNGdJQ0FnWVc1cGJXRjBhVzl1TFdacGJHd3RiVzlrWlRvZ1ptOXlkMkZ5WkhNN1hISmNiaUFnSUNCOUlDQmNjbHh1THlwMGIxOWpiRzl6WlNvdlhISmNiaTV2ZG1WeWJHRjVMblJ2WDJOc2IzTmxJSHRjY2x4dVhIUmhibWx0WVhScGIyNDZJR0puWDNSdlgzUnlZVzV6Y0dGeVpXNTBJREJ6SURBdU1uTWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU5qUTFMQ0F3TGpBME5Td2dNQzR6TlRVc0lERXVNREF3S1R0Y2NseHVYSFJoYm1sdFlYUnBiMjR0Wm1sc2JDMXRiMlJsT2lCbWIzSjNZWEprY3p0Y2NseHVmVnh5WEc0dWIzWmxjbXhoZVM1MGIxOWpiRzl6WlNBdVl5MW9ZVzFpZFhKblpYSXRibUYyWDE5c2FYTjBJSHNnWEhKY2JpQWdJQ0JoYm1sdFlYUnBiMjQ2SUhSdlgzVnVkbWx6YVdKc1pTQXdMakp6SURCeklHTjFZbWxqTFdKbGVtbGxjaWd3TGpZME5Td2dNQzR3TkRVc0lEQXVNelUxTENBeExqQXdNQ2s3WEhKY2JpQWdJQ0JoYm1sdFlYUnBiMjR0Wm1sc2JDMXRiMlJsT2lCbWIzSjNZWEprY3p0Y2NseHVJQ0FnSUgxY2NseHVMbTkyWlhKc1lYa3VkRzlmWTJ4dmMyVWdMbTkyWlhKc1lYa3RjMlZqZEdsdmJpNXpaV04wYVc5dUxXeGxablFnZTF4eVhHNWNjbHh1SUNBZ0lHRnVhVzFoZEdsdmJqb2dZMnh2YzJWZmFHRnRZblZ5WjJWeVgyeGxablFnTUM0emN5QXdjeUJqZFdKcFl5MWlaWHBwWlhJb01DNDJORFVzSURBdU1EUTFMQ0F3TGpNMU5Td2dNUzR3TURBcExGeHlYRzRnSUNBZ2RHOWZkbWx6YVdKc1pTQXdjeUF3Y3lCamRXSnBZeTFpWlhwcFpYSW9NQzQyTkRVc0lEQXVNRFExTENBd0xqTTFOU3dnTVM0d01EQXBPMXh5WEc1Y2RHRnVhVzFoZEdsdmJpMW1hV3hzTFcxdlpHVTZJR1p2Y25kaGNtUnpPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVMbTkyWlhKc1lYa3VkRzlmWTJ4dmMyVWdMbTkyWlhKc1lYa3RjMlZqZEdsdmJpNXpaV04wYVc5dUxYSnBaMmgwSUh0Y2NseHVJQ0FnSUdGdWFXMWhkR2x2YmpvZ1kyeHZjMlZmYUdGdFluVnlaMlZ5WDNKcFoyaDBJREF1TTNNZ01ITWdZM1ZpYVdNdFltVjZhV1Z5S0RBdU5qUTFMQ0F3TGpBME5Td2dNQzR6TlRVc0lERXVNREF3S1N4Y2NseHVJQ0FnSUhSdlgzWnBjMmxpYkdVZ01ITWdNSE1nWTNWaWFXTXRZbVY2YVdWeUtEQXVOalExTENBd0xqQTBOU3dnTUM0ek5UVXNJREV1TURBd0tUdGNjbHh1WEhSaGJtbHRZWFJwYjI0dFptbHNiQzF0YjJSbE9pQm1iM0ozWVhKa2N6dGNjbHh1SUNBZ0lIMWNjbHh1SWl3aUxtTXRhR0Z0WW5WeVoyVnlMVzVoZGlCN1hISmNibHgwUUdsdVkyeDFaR1VnYzJsNlpTaHlaVzBvTkRBcExDQnlaVzBvTXpBcEtUdGNjbHh1WEhSd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hISmNibjFjY2x4dVhISmNiaTVqTFdoaGJXSjFjbWRsY2kxdVlYWmZYM1JoY21kbGRDQjdYSEpjYmx4MFpHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JseDBRR2x1WTJ4MVpHVWdjMmw2WlNneE1EQWxLVHRjY2x4dVhIUmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNWNkR3AxYzNScFpua3RZMjl1ZEdWdWREb2dZMlZ1ZEdWeU8xeHlYRzVjZEdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibHgwY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4eVhHNWNkR3hsWm5RNklEQTdYSEpjYmx4MGRHOXdPaUF3TzF4eVhHNWNkQ1lnSTJacGNuTjBUR2x1WlNCN1hISmNibHgwWEhSMGNtRnVjMlp2Y20wdGIzSnBaMmx1T2lCc1pXWjBJSFJ2Y0R0Y2NseHVYSFJjZEhkcGJHd3RZMmhoYm1kbE9pQjBjbUZ1YzJadmNtMDdYSEpjYmx4MGZWeHlYRzVjZENZZ0kyTmxiblJsY2t4cGJtVWdlMXh5WEc1Y2RGeDBkSEpoYm5ObWIzSnRMVzl5YVdkcGJqb2dZMlZ1ZEdWeUlHTmxiblJsY2p0Y2NseHVYSFJjZEhkcGJHd3RZMmhoYm1kbE9pQjBjbUZ1YzJadmNtMDdYSEpjYmx4MGZWeHlYRzVjZENZZ0kyeGhjM1JNYVc1bElIdGNjbHh1WEhSY2RIUnlZVzV6Wm05eWJTMXZjbWxuYVc0NklHeGxablFnWW05MGRHOXRPMXh5WEc1Y2RGeDBkMmxzYkMxamFHRnVaMlU2SUhSeVlXNXpabTl5YlR0Y2NseHVYSFI5WEhKY2JseDBKaTVoYm1sdFlYUmxJQ05tYVhKemRFeHBibVY3WEhKY2JseDBYSFJoYm1sdFlYUnBiMjQ2SUhKdmRHRjBaVjlzWldaMFEyeHZjMlVnTUM0emN5QnNhVzVsWVhJN1hISmNibHgwWEhSaGJtbHRZWFJwYjI0dFptbHNiQzF0YjJSbE9pQm1iM0ozWVhKa2N6dGNjbHh1WEhSOVhISmNibHgwSmk1aGJtbHRZWFJsSUNOalpXNTBaWEpNYVc1bGUxeHlYRzVjZEZ4MFlXNXBiV0YwYVc5dU9pQnpZMkZzWlY5alpXNTBaWEpEYkc5elpTQXdMak56SUd4cGJtVmhjanRjY2x4dVhIUmNkR0Z1YVcxaGRHbHZiaTFtYVd4c0xXMXZaR1U2SUdadmNuZGhjbVJ6TzF4eVhHNWNkSDFjY2x4dVhIUW1MbUZ1YVcxaGRHVWdJMnhoYzNSTWFXNWxlMXh5WEc1Y2RGeDBZVzVwYldGMGFXOXVPaUJ5YjNSaGRHVmZjbWxuYUhSRGJHOXpaU0F3TGpOeklHeHBibVZoY2p0Y2NseHVYSFJjZEdGdWFXMWhkR2x2YmkxbWFXeHNMVzF2WkdVNklHWnZjbmRoY21Sek8xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbU10YUdGdFluVnlaMlZ5TFc1aGRsOWZZMnh2YzJVZ2UxeHlYRzVjZEdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc1Y2RFQnBibU5zZFdSbElITnBlbVVvY21WdEtEUXdLU3dnY21WdEtETXdLU2s3WEhKY2JseDBaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVYSFJxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNjbHh1WEhSaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzVjZEhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVYSFJ5YVdkb2REb3hNQ1U3WEhKY2JseDBkRzl3T2lBeE1DVTdYSEpjYmx4MFFHbHVZMngxWkdVZ1kzVnpkRzl0WHpFNE1EQWdlMXh5WEc1Y2RGeDBiR1ZtZERvZ05UQWxPMXh5WEc1Y2RGeDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0Rnd01IQjRLVHRjY2x4dVhIUjlYSEpjYmx4MFFHbHVZMngxWkdVZ2RHRmliR1YwSUh0Y2NseHVYSFJjZEhKcFoyaDBPaUExSlR0Y2NseHVYSFJjZEhSdmNEb2dOU1U3WEhKY2JseDBmVnh5WEc1Y2RFQnBibU5zZFdSbElHMXZZbWxzWlNCN1hISmNibHgwWEhSMGIzQTZJRE1sTzF4eVhHNWNkRngwY21sbmFIUTZJRFFsTzF4eVhHNWNkSDFjY2x4dVhIUW1JQ05tYVhKemRFeHBibVVnZTF4eVhHNWNkRngwZEhKaGJuTm1iM0p0TFc5eWFXZHBiam9nYkdWbWRDQjBiM0E3WEhKY2JseDBYSFIzYVd4c0xXTm9ZVzVuWlRvZ2RISmhibk5tYjNKdE8xeHlYRzVjZEZ4MGRISmhibk5tYjNKdE9pQnliM1JoZEdVb05EVmtaV2NwSUhSeVlXNXpiR0YwWlNneWNIZ3NJREZ3ZUNrN1hISmNibHgwZlZ4eVhHNWNkQ1lnSTJObGJuUmxja3hwYm1VZ2UxeHlYRzVjZEZ4MGRISmhibk5tYjNKdExXOXlhV2RwYmpvZ1kyVnVkR1Z5SUdObGJuUmxjanRjY2x4dVhIUmNkSGRwYkd3dFkyaGhibWRsT2lCMGNtRnVjMlp2Y20wN1hISmNibHgwWEhSMGNtRnVjMlp2Y20wNklITmpZV3hsV0Nnd0xqQXdNRElwTzF4eVhHNWNkSDFjY2x4dVhIUW1JQ05zWVhOMFRHbHVaU0I3WEhKY2JseDBYSFIwY21GdWMyWnZjbTB0YjNKcFoybHVPaUJzWldaMElHSnZkSFJ2YlR0Y2NseHVYSFJjZEhkcGJHd3RZMmhoYm1kbE9pQjBjbUZ1YzJadmNtMDdYSEpjYmx4MFhIUjBjbUZ1YzJadmNtMDZJSEp2ZEdGMFpTZ3RORFZrWldjcElIUnlZVzV6YkdGMFpTZ3ljSGdzSURGd2VDazdYSEpjYmx4MGZWeHlYRzVjZENZdVlXNXBiV0YwWlNBalptbHljM1JNYVc1bGUxeHlYRzVjZEZ4MFlXNXBiV0YwYVc5dU9pQnliM1JoZEdWZmJHVm1kRWhoYldKMWNtZGxjaUF3TGpOeklHeHBibVZoY2p0Y2NseHVYSFJjZEdGdWFXMWhkR2x2YmkxbWFXeHNMVzF2WkdVNklHWnZjbmRoY21Sek8xeHlYRzVjZEgxY2NseHVYSFFtTG1GdWFXMWhkR1VnSTJObGJuUmxja3hwYm1WN1hISmNibHgwWEhSaGJtbHRZWFJwYjI0NklISnZkR0YwWlY5alpXNTBaWEpJWVcxaWRYSm5aWElnTUM0emN5QnNhVzVsWVhJN1hISmNibHgwWEhSaGJtbHRZWFJwYjI0dFpHVnNZWGs2SURBdU1qazFjenRjY2x4dVhIUmNkR0Z1YVcxaGRHbHZiaTFtYVd4c0xXMXZaR1U2SUdadmNuZGhjbVJ6TzF4eVhHNWNkSDFjY2x4dVhIUW1MbUZ1YVcxaGRHVWdJMnhoYzNSTWFXNWxlMXh5WEc1Y2RGeDBZVzVwYldGMGFXOXVPaUJ5YjNSaGRHVmZjbWxuYUhSSVlXMWlkWEpuWlhJZ01DNHpjeUJzYVc1bFlYSTdYSEpjYmx4MFhIUmhibWx0WVhScGIyNHRabWxzYkMxdGIyUmxPaUJtYjNKM1lYSmtjenRjY2x4dVhIUjlYSEpjYm4xY2NseHVMbU10YUdGdFluVnlaMlZ5TFc1aGRsOWZiR2x6ZENCN1hISmNibHh5WEc1Y2RHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JseDBabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2NseHVYSFJxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNjbHh1WEhSaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzU5WEhKY2JseHlYRzR1WXkxb1lXMWlkWEpuWlhJdGJtRjJYMTlwZEdWdElIdGNjbHh1WEhKY2JseDBaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVYSFJoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4eVhHNWNkR052Ykc5eU9pQWtjSEpwYldGeWVVTnZiRzl5TzF4eVhHNWNkRzFoY21kcGJpMWliM1IwYjIwNklEZ2xPMXh5WEc1Y2RDWWdMbk4yWjE5a1lYTm9JSHRjY2x4dVhIUmNkRzl3WVdOcGRIazZJREF1TWp0Y2NseHVYSFI5WEhKY2JseDBKanBvYjNabGNpQXVjM1puWDJSaGMyZ2dlMXh5WEc1Y2RGeDBiM0JoWTJsMGVUb2dNQzQxTzF4eVhHNWNkSDFjY2x4dWZTSXNJaTVqTFdSbGRtVnNiM0JsY2lCN1hISmNibHgwZDJsa2RHZzZJSEpsYlNnek9EQXBPMXh5WEc1Y2RHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JseDBabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2NseHVYSFJoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4eVhHNTlYSEpjYmx4eVhHNHVZeTFrWlhabGJHOXdaWEpmWDJsdFp5MTNjbUZ3SUh0Y2NseHVYSFJBYVc1amJIVmtaU0J6YVhwbEtISmxiU2d4TkRFcEtUdGNjbHh1WEhSaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHlYRzVjZEdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2p0Y2NseHVYSFJpWVdOclozSnZkVzVrTFhOcGVtVTZJR052ZG1WeU8xeHlYRzVjZEc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEhKY2JseDBiV0Z5WjJsdUxXSnZkSFJ2YlRvZ05DVTdYSEpjYmx4MFltOXlaR1Z5TFhKaFpHbDFjem9nTlRBbE8xeHlYRzVjZEVCcGJtTnNkV1JsSUcxdlltbHNaU0I3WEhKY2JseDBYSFJBYVc1amJIVmtaU0J6YVhwbEtISmxiU2d4TkRVcEtUdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNiaTVqTFdSbGRtVnNiM0JsY2w5ZmFXMW5JSHRjY2x4dVhIUnRZWGd0ZDJsa2RHZzZJREV3TUNVN1hISmNibjFjY2x4dVhISmNiaTVqTFdSbGRtVnNiM0JsY2w5ZlkyOXVkR1Z1ZENCN1hISmNibHgwZDJsa2RHZzZJREV3TUNVN1hISmNibHgwZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4eVhHNTlYSEpjYmx4eVhHNHVZeTFrWlhabGJHOXdYMkpzYjJjdGFHVmhaR1Z5SUh0Y2NseHVYSFJqYjJ4dmNqb2dKSEJ5YVcxaGNubERiMnh2Y2p0Y2NseHVYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JuMWNjbHh1WEhKY2JpNWpMV1JsZG1Wc2IzQmxjbDlmYUdWaFpHVnlJSHRjY2x4dVhISmNibHgwWm05dWRDMXphWHBsT2lCeVpXMG9NelVwTzF4eVhHNWNkR1p2Ym5RdGQyVnBaMmgwT2lBMU1EQTdYSEpjYmx4MGJHbHVaUzFvWldsbmFIUTZJREV1TlR0Y2NseHVYSFJ0WVhKbmFXNHRZbTkwZEc5dE9pQXdMak1sTzF4eVhHNWNkR052Ykc5eU9pQWtjSEpwYldGeWVVTnZiRzl5TzF4eVhHNWNkRUJwYm1Oc2RXUmxJRzF2WW1sc1pTQjdYSEpjYmx4MFhIUm1iMjUwTFhOcGVtVTZJSEpsYlNneU1pazdYSEpjYmx4MGZWeHlYRzU5WEhKY2JseHlYRzR1WXkxa1pYWmxiRzl3WlhKZlgyUmxjMk1nZTF4eVhHNWNkR1p2Ym5RdGMybDZaVG9nY21WdEtERTJLVHRjY2x4dVhIUmpiMnh2Y2pvZ2NtZGlZU2drY0hKcGJXRnllVU52Ykc5eUxDQXdMamdwTzF4eVhHNWNkR3hwYm1VdGFHVnBaMmgwT2lBeExqVTdYSEpjYmx4MFptOXVkQzEzWldsbmFIUTZJRE13TUR0Y2NseHVmVnh5WEc1Y2NseHVMbU10WkdWMlpXeHZjR1Z5WDE5a1pYTmpYMkpzYjJjZ2UxeHlYRzVjZEdOdmJHOXlPaUFrY0hKcGJXRnllVU52Ykc5eU8xeHlYRzVjZEdadmJuUXRkMlZwWjJoME9pQTBNREE3WEhKY2JseDBaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4eVhHNWNkSGRwWkhSb09pQXhNREFsTzF4eVhHNTlJaXdpTG1NdFlteHZaeUI3WEhKY2JseDBabXhsZUMxbmNtOTNPaUF4TzF4eVhHNWNkR1JwYzNCc1lYazZJR1pzWlhnN1hISmNibHgwYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJtYkdWNExXVnVaRHRjY2x4dVhIUndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYSEpjYmx4MGNHRmtaR2x1WnkxMGIzQTZJRFFsTzF4eVhHNWNkRzFoY21kcGJpMWliM1IwYjIwNklHRjFkRzg3WEhKY2JpQWdZV3hwWjI0dGFYUmxiWE02SUhOMGNtVjBZMmc3WEhKY2JuMWNjbHh1WEhKY2JpNWpMV0pzYjJkZlgyRnphV1JsSUh0Y2NseHVYSFJ3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JseDBkRzl3T2lBeExqVWxPMXh5WEc0Z0lISnBaMmgwT2lBMU1DVTdYSEpjYmlBZ2QybGtkR2c2SURJMUpUdGNjbHh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TVRBd0pTazdYSEpjYmlBZ1FHbHVZMngxWkdVZ1kzVnpkRzl0WHpFNE1EQWdlMXh5WEc0Z0lDQWdkMmxrZEdnNklEUTFNSEI0TzF4eVhHNGdJSDFjY2x4dVhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHlYRzRnSUNBZ2QybGtkR2c2SURjd0pUdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndFpXNWtPMXh5WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjY2x4dVhIUmNkSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NndE56SWxLVHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1JpY21GdVpDMWpiMnh2Y2p0Y2NseHVJQ0FnSUhCaFpHUnBibWN0Y21sbmFIUTZJSEpsYlNneE5pazdYSEpjYmlBZ0lDQXRkMlZpYTJsMExXSnZlQzF6YUdGa2IzYzZJRE53ZUNBd2NIZ2dNM0I0SURCd2VDQnlaMkpoS0RBc01Dd3dMREF1TWlrN1hISmNiaUFnSUNBdGJXOTZMV0p2ZUMxemFHRmtiM2M2SUROd2VDQXdjSGdnTTNCNElEQndlQ0J5WjJKaEtEQXNNQ3d3TERBdU1pazdYSEpjYmlBZ0lDQmliM2d0YzJoaFpHOTNPaUF6Y0hnZ01IQjRJRE53ZUNBd2NIZ2djbWRpWVNnd0xEQXNNQ3d3TGpJcE8xeHlYRzVjZEgxY2NseHVJQ0FtTG5CdmN5MW1hWGhsWkNCN1hISmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1ptbDRaV1E3WEhKY2JpQWdJQ0IwYjNBNk1UQWxPMXh5WEc0Z0lIMWNjbHh1SUNBbUxtOTJaWEpzWVhrdGJXOWlhV3hsSUh0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjY2x4dUlDQWdJSFJ2Y0RvZ01EdGNjbHh1SUNBZ0lHSnZkSFJ2YlRvZ01EdGNjbHh1SUNBZ0lISnBaMmgwT2lCcGJtbDBhV0ZzTzF4eVhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCdWIyNWxPMXh5WEc0Z0lDQWdlaTFwYm1SbGVEb2dNenRjY2x4dUlDQWdJSGRwYkd3dFkyaGhibWRsT2lCMGNtRnVjMlp2Y20wN1hISmNiaUFnZlZ4eVhHNGdJQ1l1WVc1cGJXRjBaVTl3Wlc0Z2UxeHlYRzRnSUNBZ1lXNXBiV0YwYVc5dU9pQmliRzluWDNSaFlteGxkRTVoZGs5d1pXNGdNQzQzY3lCc2FXNWxZWEk3WEhKY2JpQWdJQ0JoYm1sdFlYUnBiMjR0Wm1sc2JDMXRiMlJsT2lCbWIzSjNZWEprY3p0Y2NseHVJQ0FnSUNZZ0xtTXRZbXh2WjE5ZmJXVnVkUzF6ZDJsd1pUcG9iM1psY2lCN1hISmNiaUFnSUNBZ0lFQnBibU5zZFdSbElIUmhZbXhsZENCN1hISmNiaUFnSUNBZ0lDQWdZM1Z5YzI5eU9pQnBibWwwYVdGc08xeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzRnSUNZdVlXNXBiV0YwWlVOc2IzTmxJSHRjY2x4dUlDQWdJR0Z1YVcxaGRHbHZiam9nWW14dloxOTBZV0pzWlhST1lYWkRiRzl6WlNBd0xqZHpJR3hwYm1WaGNqdGNjbHh1SUNBZ0lHRnVhVzFoZEdsdmJpMW1hV3hzTFcxdlpHVTZJR1p2Y25kaGNtUnpPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1TG1NdFlteHZaMTlmYldWdWRTMXpkMmx3Wlh0Y2NseHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzRnSUNZNmFHOTJaWElnZTF4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnZEdGaWJHVjBJSHRjY2x4dUlDQWdJQ0FnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1SUNBbU9tSmxabTl5WlNCN1hISmNiaUFnSUNCamIyNTBaVzUwT2lBbkp6dGNjbHh1SUNBZ0lHaGxhV2RvZERvZ01URXdKVHRjY2x4dUlDQWdJSGRwWkhSb09pQTNNQ1U3WEhKY2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJwYm1obGNtbDBPMXh5WEc0Z0lDQWdlaTFwYm1SbGVEb2dNRHRjY2x4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dUlDQWdJSFJ2Y0RvZ05UQWxPMXh5WEc0Z0lDQWdiR1ZtZERvZ01EdGNjbHh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXU2d0TlRBbEtUdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEhKY2JpQWdJQ0JBYVc1amJIVmtaU0IwWVdKc1pYUWdlMXh5WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1SUNBZ0lIMWNjbHh1SUNCOUlGeHlYRzRnSUVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNBZ0lIUnZjRG9nTlRBbE8xeHlYRzRnSUNBZ2JHVm1kRG9nTVRBd0pUdGNjbHh1SUNBZ0lIb3RhVzVrWlhnNklDMHhPMXh5WEc0Z0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0MwM01DVXBPMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdjMmw2WlNoeVpXMG9OekFwS1R0Y2NseHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJREFnTlRBbElEVXdKU0F3TzF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSkdKeVlXNWtMV052Ykc5eU8xeHlYRzRnSUNBZ0xYZGxZbXRwZEMxaWIzZ3RjMmhoWkc5M09pQXpjSGdnTUhCNElETndlQ0F3Y0hnZ2NtZGlZU2d3TERBc01Dd3dMaklwTzF4eVhHNGdJQ0FnTFcxdmVpMWliM2d0YzJoaFpHOTNPaUF6Y0hnZ01IQjRJRE53ZUNBd2NIZ2djbWRpWVNnd0xEQXNNQ3d3TGpJcE8xeHlYRzRnSUNBZ1ltOTRMWE5vWVdSdmR6b2dNM0I0SURCd2VDQXpjSGdnTUhCNElISm5ZbUVvTUN3d0xEQXNNQzR5S1R0Y2NseHVJQ0I5WEhKY2JpQWdRR2x1WTJ4MVpHVWdiVzlpYVd4bElIdGNjbHh1SUNBZ1hISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNHVZeTFpYkc5blgxOXVZWFlnZTF4eVhHNGdJRUJwYm1Oc2RXUmxJSFJoWW14bGRDQjdYSEpjYmlBZ0lDQjNhV1IwYURvZ05UVWxPMXh5WEc0Z0lIMWNjbHh1SUNCQWFXNWpiSFZrWlNCdGIySnBiR1VnZTF4eVhHNGdJQ0FnZDJsa2RHZzZJRGN3SlR0Y2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpNWpMV0pzYjJkZlgyNWhkaTFwZEdWdElIdGNjbHh1WEhSMFpYaDBMV0ZzYVdkdU9pQnlhV2RvZER0Y2NseHVYSFJ3WVdSa2FXNW5PaUEwTGpVbElEWXVOU1U3WEhKY2JpQWdZbTl5WkdWeUxYSnBaMmgwT2lBemNIZ2djMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYSEpjYmx4MEppNXBjeTFoWTNScGRtVWdMbU10WW14dloxOWZibUYyTFd4cGJtc2dlMXh5WEc1Y2RHWnZiblF0ZDJWcFoyaDBPaUE1TURBN1hISmNibHgwWTI5c2IzSTZJSEpuWWlnd0xDQXhPVEVzSURFMk5TazdYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHlYRzRnSUNBZ0lDQmpiMnh2Y2pvZ2NtZGlZU2drY0hKcGJXRnllVU52Ykc5eUxDQXhLVHRjY2x4dUlDQWdJSDFjY2x4dVhIUjlYSEpjYmx4MEppNXBjeTFoWTNScGRtVWdlMXh5WEc1Y2RGeDBZbTl5WkdWeUxYSnBaMmgwT2lBemNIZ2djMjlzYVdRZ2NtZGlLREFzSURFNU1Td2dNVFkxS1R0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEhKY2JpQWdJQ0FnSUdKdmNtUmxjaTF5YVdkb2REb2dibTl1WlR0Y2NseHVJQ0FnSUgxY2NseHVYSFI5WEhKY2JpQWdRR2x1WTJ4MVpHVWdkR0ZpYkdWMElIdGNjbHh1SUNBZ0lHSnZjbVJsY2kxeWFXZG9kRG9nYm05dVpUdGNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTVqTFdKc2IyZGZYMjVoZGkxc2FXNXJJSHRjY2x4dVhIUm1iMjUwTFhOcGVtVTZJSEpsYlNneE5pazdYSEpjYmx4MFptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2NseHVYSFJzYVc1bExXaGxhV2RvZERvZ01TNDJNenRjY2x4dVhIUjBaWGgwTFdGc2FXZHVPaUJ5YVdkb2REdGNjbHh1WEhSamIyeHZjam9nSkhSbGVIUXRZMjlzYjNJN1hISmNiaUFnUUdsdVkyeDFaR1VnZEdGaWJHVjBJSHRjY2x4dUlDQWdJR052Ykc5eU9pQnlaMkpoS0NSd2NtbHRZWEo1UTI5c2IzSXNJREF1TnlrN1hISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNHVZeTFpYkc5blgxOXRZV2x1SUh0Y2NseHVYSFFnSUhkcFpIUm9PaUEyT0NVN1hISmNiaUFnSUNCd1lXUmthVzVuT2lBd0lERWxJRElsSURFbE8xeHlYRzRnSUNBZ2NHRmtaR2x1WnpvZ01TVWdNU1VnTWlVZ01TVTdYSEpjYmlBZ0lDQnRZWEpuYVc0NklEQWdNUzQ1SlNBd0pTQmhkWFJ2TzF4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnZEdGaWJHVjBJSHRjY2x4dUlDQWdJRngwZDJsa2RHZzZJRGsxSlR0Y2NseHVJQ0FnSUZ4MGJXRnlaMmx1TFdKdmRIUnZiVG9nTlNVN1hISmNiaUFnSUNCY2RHMWhjbWRwYmkxc1pXWjBPaUF3TzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNHVZeTFpYkc5blgxOWhjblJwWTJ4bElIdGNjbHh1WEhSd1lXUmthVzVuT2lBNUpTQXdPMXh5WEc1Y2RHSnZjbVJsY2kxaWIzUjBiMjA2SURWd2VDQnpiMnhwWkNCeVoySmhLRFUxTENBMk1pd2dOallzSURBdU1EY3BPMXh5WEc1Y2RDWTZabWx5YzNRdFkyaHBiR1FnZTF4eVhHNWNkRngwY0dGa1pHbHVaeTEwYjNBNklEQTdYSEpjYmx4MGZWeHlYRzVjZENZNmJHRnpkQzFqYUdsc1pDQjdYSEpjYmx4MFhIUmliM0prWlhJdFltOTBkRzl0T2lCdWIyNWxPMXh5WEc1Y2RIMWNjbHh1WEhRbUlDNW9MWFJwZEd4bExXRnlkR2xqYkdVZ2UxeHlYRzVjZEZ4MGJXRnlaMmx1T2lBd08xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbUZ5ZEdsamJHVmZYMlJoZEdVZ2UxeHlYRzVjZEdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc0Z1hIUm1iMjUwTFhOcGVtVTZJSEpsYlNneE5pazdYSEpjYmx4MFptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2NseHVYSFJzYVc1bExXaGxhV2RvZERvZ01pNDFOanRjY2x4dVhIUjBaWGgwTFdGc2FXZHVPaUJzWldaME8xeHlYRzVjZEdOdmJHOXlPaUJ5WjJKaEtEQXNJREU1TVN3Z01UWTFMQ0F3TGpjcE8xeHlYRzU5WEhKY2JseHlYRzR1WVhKMGFXTnNaVjlmZEdWNGRDQjdYSEpjYmx4MFptOXVkQzF6YVhwbE9pQXhObkI0TzF4eVhHNGdYSFJtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh5WEc1Y2RHeHBibVV0YUdWcFoyaDBPaUF4TGpZek8xeHlYRzVjZEhSbGVIUXRZV3hwWjI0NklHeGxablE3WEhKY2JseDBZMjlzYjNJNklISm5ZaWcyT1N3Z09UQXNJREV3TUNrN1hISmNibjFjY2x4dVhISmNibkJ5WlM1d2NtVjBkSGx3Y21sdWRDd2dZMjlrWlM1d2NtVjBkSGx3Y21sdWRDQjdYSEpjYmx4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kyWTBaakptTUNBaGFXMXdiM0owWVc1ME8xeHlYRzVjZEdKdmNtUmxjam9nYm05dVpTQWhhVzF3YjNKMFlXNTBPMXh5WEc1Y2RIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNjbHh1WEhRbUlHeHBJSHRjY2x4dVhIUmNkR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tTkdZeVpqQWdJV2x0Y0c5eWRHRnVkRHRjY2x4dUlDQWdYSFJjZEdOdmRXNTBaWEl0YVc1amNtVnRaVzUwT2lCcGRHVnRPMXh5WEc0Z0lGeDBYSFJ0WVhKbmFXNHRZbTkwZEc5dE9pQTFjSGc3WEhKY2JpQWdYSFJjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2NseHVJRngwZlZ4eVhHNGdYSFFtSUd4cE9tSmxabTl5WlNCN1hISmNiaUFnSUZ4MFhIUmpiMjUwWlc1ME9pQmpiM1Z1ZEdWeUtHbDBaVzBwTzF4eVhHNGdJQ0JjZEZ4MFkyOXNiM0k2SUNNMVlUZGlPR003WEhKY2JpQWdYSFJjZEhkcFpIUm9PaUF4TGpKbGJUdGNjbHh1SUNBZ1hIUmNkSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dUlDQmNkRngwWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmlBZ1hIUmNkSFJ2Y0RvZ01EdGNjbHh1SUNCY2RGeDBiR1ZtZERvZ0xURXVNM0psYlR0Y2NseHVJQ0JjZEZ4MFltOTBkRzl0T2lBd08xeHlYRzRnSUZ4MFhIUndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYSEpjYmlBZ1hIUmNkSG90YVc1a1pYZzZJREU3WEhKY2JpQmNkSDFjY2x4dVhIUmpiM1Z1ZEdWeUxYSmxjMlYwT2lCcGRHVnRPMXh5WEc1OVhISmNibHh5WEc1d2NtVXVjSEpsZEhSNWNISnBiblFnZTF4eVhHNWNkSGRwWkhSb09pQXhNREFsTzF4eVhHNWNkRzFoY21kcGJqb2dNV1Z0SURBN1hISmNibHgwY0dGa1pHbHVaem9nTVdWdE8xeHlYRzVjZEhkb2FYUmxMWE53WVdObE9pQndjbVV0ZDNKaGNEdGNjbHh1WEhSbWIyNTBMWGRsYVdkb2REb2dZbTlzWkR0Y2NseHVYSFJpYjNKa1pYSXRjbUZrYVhWek9pQXhjSGc3WEhKY2JseDBKanBpWldadmNtVWdlMXh5WEc1Y2RGeDBZMjl1ZEdWdWREb2dKeWM3WEhKY2JseDBYSFJrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1WEhSY2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTkZPRVUyUlRRN1hISmNibHgwWEhSd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNibHgwWEhSMGIzQTZJREE3WEhKY2JseDBYSFJzWldaME9pQXdPMXh5WEc1Y2RGeDBZbTkwZEc5dE9pQXdPMXh5WEc1Y2RGeDBkMmxrZEdnNklETnlaVzA3WEhKY2JseDBYSFI2TFdsdVpHVjRPaUF4TzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dWJHa3VUREFzSUd4cExrd3hMQ0JzYVM1TU1pd2diR2t1VERNc1hISmNibXhwTGt3MUxDQnNhUzVNTml3Z2JHa3VURGNzSUd4cExrdzRJSHRjY2x4dUlDQnNhWE4wTFhOMGVXeGxMWFI1Y0dVNklHUmxZMmx0WVd3Z0lXbHRjRzl5ZEdGdWREdGNjbHh1ZlZ4eVhHNHZLaUVnUTI5c2IzSWdkR2hsYldWeklHWnZjaUJIYjI5bmJHVWdRMjlrWlNCUWNtVjBkR2xtZVNCOElFMUpWQ0JNYVdObGJuTmxJSHdnWjJsMGFIVmlMbU52YlM5cWJXSnNiMmN2WTI5c2IzSXRkR2hsYldWekxXWnZjaTFuYjI5bmJHVXRZMjlrWlMxd2NtVjBkR2xtZVNBcUwxeHlYRzR1Y0hKbGRIUjVjSEpwYm5RZ2UxeHlYRzRnSUdKaFkydG5jbTkxYm1RNklDTm1OMll6WmpjN1hISmNiaUFnWm05dWRDMW1ZVzFwYkhrNklFMWxibXh2TENCY0lrSnBkSE4wY21WaGJTQldaWEpoSUZOaGJuTWdUVzl1YjF3aUxDQmNJa1JsYW1GV2RTQlRZVzV6SUUxdmJtOWNJaXdnVFc5dVlXTnZMQ0JEYjI1emIyeGhjeXdnYlc5dWIzTndZV05sTzF4eVhHNGdJR0p2Y21SbGNqb2dNQ0FoYVcxd2IzSjBZVzUwTzF4eVhHNTlYSEpjYmx4eVhHNHVjR3h1SUh0Y2NseHVJQ0JqYjJ4dmNqb2dJekZpTVRneFlqdGNjbHh1ZlZ4eVhHNWNjbHh1THlvZ1UzQmxZMmxtZVNCamJHRnpjejFzYVc1bGJuVnRjeUJ2YmlCaElIQnlaU0IwYnlCblpYUWdiR2x1WlNCdWRXMWlaWEpwYm1jZ0tpOWNjbHh1YjJ3dWJHbHVaVzUxYlhNZ2UxeHlYRzRnSUcxaGNtZHBiaTEwYjNBNklEQTdYSEpjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUR0Y2NseHVJQ0JqYjJ4dmNqb2dJelZoTjJJNFl6dGNjbHh1ZlZ4eVhHNWNjbHh1YkdrdVREQXNYSEpjYm14cExrd3hMRnh5WEc1c2FTNU1NaXhjY2x4dWJHa3VURE1zWEhKY2JteHBMa3cwTEZ4eVhHNXNhUzVNTlN4Y2NseHViR2t1VERZc1hISmNibXhwTGt3M0xGeHlYRzVzYVM1TU9DeGNjbHh1YkdrdVREa2dlMXh5WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nTVdWdE8xeHlYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObU4yWXpaamM3WEhKY2JpQXZMeUJzYVhOMExYTjBlV3hsTFhSNWNHVTZJR1JsWTJsdFlXdzdYSEpjYm4xY2NseHVYSEpjYmtCdFpXUnBZU0J6WTNKbFpXNGdlMXh5WEc1Y2NseHVJQ0F2S2lCemRISnBibWNnWTI5dWRHVnVkQ0FxTDF4eVhHNWNjbHh1SUNBdWMzUnlJSHRjY2x4dUlDQWdJR052Ykc5eU9pQWpPVEU0WWpOaU8xeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0x5b2dhMlY1ZDI5eVpDQXFMMXh5WEc1Y2NseHVJQ0F1YTNka0lIdGNjbHh1SUNBZ0lHTnZiRzl5T2lBak4ySTFPV013TzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnTHlvZ1kyOXRiV1Z1ZENBcUwxeHlYRzVjY2x4dUlDQXVZMjl0SUh0Y2NseHVJQ0FnSUdOdmJHOXlPaUFqTldFM1lqaGpPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeW9nZEhsd1pTQnVZVzFsSUNvdlhISmNibHh5WEc0Z0lDNTBlWEFnZTF4eVhHNGdJQ0FnWTI5c2IzSTZJQ00xTVRaaFpXTTdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQXZLaUJzYVhSbGNtRnNJSFpoYkhWbElDb3ZYSEpjYmx4eVhHNGdJQzVzYVhRZ2UxeHlYRzRnSUNBZ1kyOXNiM0k2SUNOaE5qVTVNalk3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F2S2lCd2RXNWpkSFZoZEdsdmJpQXFMMXh5WEc1Y2NseHVJQ0F1Y0hWdUlIdGNjbHh1SUNBZ0lHTnZiRzl5T2lBak1XSXhPREZpTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnTHlvZ2JHbHpjQ0J2Y0dWdUlHSnlZV05yWlhRZ0tpOWNjbHh1WEhKY2JpQWdMbTl3YmlCN1hISmNiaUFnSUNCamIyeHZjam9nSXpGaU1UZ3hZanRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzhxSUd4cGMzQWdZMnh2YzJVZ1luSmhZMnRsZENBcUwxeHlYRzVjY2x4dUlDQXVZMnh2SUh0Y2NseHVJQ0FnSUdOdmJHOXlPaUFqTVdJeE9ERmlPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeW9nYldGeWEzVndJSFJoWnlCdVlXMWxJQ292WEhKY2JseHlYRzRnSUM1MFlXY2dlMXh5WEc0Z0lDQWdZMjlzYjNJNklDTmpZVFF3TW1JN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdktpQnRZWEpyZFhBZ1lYUjBjbWxpZFhSbElHNWhiV1VnS2k5Y2NseHVYSEpjYmlBZ0xtRjBiaUI3WEhKY2JpQWdJQ0JqYjJ4dmNqb2dJMkUyTlRreU5qdGNjbHh1SUNCOVhISmNibHh5WEc0Z0lDOHFJRzFoY210MWNDQmhkSFJ5YVdKMWRHVWdkbUZzZFdVZ0tpOWNjbHh1WEhKY2JpQWdMbUYwZGlCN1hISmNiaUFnSUNCamIyeHZjam9nSXpFMU9UTTVNenRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzhxSUdSbFkyeGhjbUYwYVc5dUlDb3ZYSEpjYmx4eVhHNGdJQzVrWldNZ2UxeHlYRzRnSUNBZ1kyOXNiM0k2SUNOaE5qVTVNalk3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F2S2lCMllYSnBZV0pzWlNCdVlXMWxJQ292WEhKY2JseHlYRzRnSUM1MllYSWdlMXh5WEc0Z0lDQWdZMjlzYjNJNklDTmpZVFF3TW1JN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdktpQm1kVzVqZEdsdmJpQnVZVzFsSUNvdlhISmNibHh5WEc0Z0lDNW1kVzRnZTF4eVhHNGdJQ0FnWTI5c2IzSTZJQ00xTVRaaFpXTTdYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JpSXNJbHh5WEc0dWMzWm5YMmhsY204Z2UxeHlYRzVjZEc5d1lXTnBkSGs2SURBdU1EWTdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2d4TURBbExDQXpOeVVwTzF4eVhHNWNkRUJwYm1Oc2RXUmxJR0ZpYzI5c2RYUmxMV05sYm5SbGNqdGNjbHh1WEhSbWFXeHNPaUFrY0hKcGJXRnllVU52Ykc5eU8xeHlYRzVjZEhvdGFXNWtaWGc2SURFN1hISmNibjFjY2x4dVhISmNiaTV6ZG1kZmFHRnRZblZ5WjJWeUlIdGNjbHh1WEhSQWFXNWpiSFZrWlNCemFYcGxLSEpsYlNnME1Da3NJSEpsYlNnek1Da3BPMXh5WEc1Y2RHTnZiRzl5T2lBa2NISnBiV0Z5ZVVOdmJHOXlPMXh5WEc1Y2RFQnBibU5zZFdSbElIUmhZbXhsZENCN1hISmNibHgwWEhSQWFXNWpiSFZrWlNCemFYcGxLSEpsYlNnek5Ta3NJSEpsYlNneU55a3BPMXh5WEc1Y2RIMWNjbHh1ZlZ4eVhHNWNjbHh1TG5OMloxOW9aWEp2TFdKc2IyY2dlMXh5WEc1Y2RHOXdZV05wZEhrNklEQXVNRFk3WEhKY2JseDBRR2x1WTJ4MVpHVWdjMmw2WlNneE5UQWxMQ0F6TURBbEtUdGNjbHh1WEhSd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNibHgwZEc5d09pQTFNQ1U3WEhKY2JseDBiR1ZtZERvZ05UQWxPMXh5WEc1Y2RIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLQzAxTUNVc0lDMDBNQ1VwTzF4eVhHNWNkR1pwYkd3NklDUndjbWx0WVhKNVEyOXNiM0k3WEhKY2JseDBlaTFwYm1SbGVEb2dNVHRjY2x4dWZWeHlYRzVjY2x4dUxuTjJaMTl1WlhoMElIdGNjbHh1WEhSdmNHRmphWFI1T2lBd0xqYzdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2d4TURBbEtUdGNjbHh1WEhSbWFXeHNPaUFrY0hKcGJXRnllVU52Ykc5eU8xeHlYRzVjZEhSeVlXNXphWFJwYjI0NklHOXdZV05wZEhrZ01DNHpjenRjY2x4dWZWeHlYRzR1YzNablgzQnlaWFlnZTF4eVhHNWNkRzl3WVdOcGRIazZJREF1Tnp0Y2NseHVYSFJBYVc1amJIVmtaU0J6YVhwbEtERXdNQ1VwTzF4eVhHNWNkR1pwYkd3NklDUndjbWx0WVhKNVEyOXNiM0k3WEhKY2JseDBkSEpoYm5OcGRHbHZiam9nYjNCaFkybDBlU0F3TGpOek8xeHlYRzVjZEhSeVlXNXpabTl5YlRvZ2MyTmhiR1VvTVN3Z0xURXBPMXh5WEc1OVhISmNibHh5WEc0dWMzWm5YMlJoYzJnZ2UxeHlYRzVjZEVCcGJtTnNkV1JsSUhOcGVtVW9NUzQyY21WdExDQXdMamh5WlcwcE8xeHlYRzVjZEc5d1lXTnBkSGs2SURBdU1qVTdYSEpjYmx4MFptbHNiRG9nWTNWeWNtVnVkRU52Ykc5eU8xeHlYRzVjZEhOMGNtOXJaVG9nWTNWeWNtVnVkRU52Ykc5eU8xeHlYRzVjZEdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNjbHh1WEhSMlpYSjBhV05oYkMxaGJHbG5iam9nYldsa1pHeGxPMXh5WEc1Y2RIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dNQzR6Y3p0Y2NseHVYSFJBYVc1amJIVmtaU0J0YjJKcGJHVWdlMXh5WEc1Y2RGeDBkMmxrZEdnNklEQXVPWEpsYlR0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JpNXpkbWN0YldGcGJpMTBiM0JmZEhkdkxXTnZiRzl5SUh0Y2NseHVYSFIzYVdSMGFEb2dNVEF3TGpJbE8xeHlYRzVjZEdobGFXZG9kRG9nTWpGeVpXMDdYSEpjYmx4MFptbHNiRG9nSTBWR1JVSkZNRHRjY2x4dVhIUnpkSEp2YTJVNklDTkZSa1ZDUlRBN1hISmNibHgwWEhSQWFXNWpiSFZrWlNCMFlXSnNaWFFnZTF4eVhHNWNkRngwWEhSbWFXeHNPaUFqUmpCRlJrVTVPMXh5WEc1Y2RGeDBYSFJ6ZEhKdmEyVTZJQ05HTUVWR1JUazdYSEpjYmx4MGZWeHlYRzU5WEhKY2JseHlYRzR1YzNablgyMWhhVzR0ZEc5d1gyOXVaUzFqYjJ4dmNpQjdYSEpjYmx4MGQybGtkR2c2SURFd01DNHlKVHRjY2x4dVhIUm9aV2xuYUhRNklESXhjbVZ0TzF4eVhHNWNkR052Ykc5eU9pQnlaMklvTWpVd0xDQXlORGdzSURJME1DazdYSEpjYm4xY2NseHVYSEpjYmk1emRtY3RiV0ZwYmkxcFkyOXVJSHRjY2x4dVhIUnZjR0ZqYVhSNU9pQXdMakEzTzF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dVhIUjBiM0E2SURBN1hISmNibHgwYkdWbWREb2dOVEFsTzF4eVhHNWNkSEpwWjJoME9pQXdPMXh5WEc1Y2RHSnZkSFJ2YlRvZ01EdGNjbHh1WEhSMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpTZ3ROVEFsTENBdE5UQWxLVHRjY2x4dVhIUjZMV2x1WkdWNE9pQXdPMXh5WEc1OVhISmNiaTV6ZG1jdGJXRnBiaTFwWTI5dVgyRmliM1YwSUh0Y2NseHVYSFIzYVdSMGFEb2dPREFsTzF4eVhHNWNkSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0MwMU1DVXNJQzB6TUNVcE8xeHlYRzVjZEVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEhKY2JseDBYSFIzYVdSMGFEb2dOekFsTzF4eVhHNWNkRngwZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVb0xUVXdKU3dnTFRRd0pTazdYSEpjYmx4MGZWeHlYRzVjZEVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEhKY2JseDBYSFIzYVdSMGFEb2dOVEFsTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxuTjJaeTF0WVdsdUxXbGpiMjVmZDI5eWEzTWdlMXh5WEc1Y2RIZHBaSFJvT2lBeE1EQWxPMXh5WEc1Y2RHaGxhV2RvZERvZ2NtVnRLREU1TUNrN1hISmNibHgwZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVb0xUVXdKU3dnTFRJNEpTazdYSEpjYmx4MFFHbHVZMngxWkdVZ2RHRmliR1YwSUh0Y2NseHVYSFJjZEdobGFXZG9kRG9nT0M0eE1qVnlaVzA3WEhKY2JseDBmVnh5WEc1OVhISmNibHh5WEc0dWMzWm5YM05yZVhCbExDQXVjM1puWDIxaGFXd3NJQzV6ZG1kZmNHaHZibVVzSUM1emRtZGZiV0Z3TFcxaGNtdGxjaUI3WEhKY2JseDBZMjlzYjNJNklDUmljbUZ1WkMxamIyeHZjanRjY2x4dVhIUm1iR1Y0TFdKaGMybHpPaUF5TUNVN1hISmNibHgwZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNBd0xqTnpPMXh5WEc1Y2RDWTZhRzkyWlhJZ2UxeHlYRzVjZEZ4MGIzQmhZMmwwZVRvZ01DNDNPMXh5WEc1Y2RIMWNjbHh1ZlZ4eVhHNWNjbHh1TG5OMloxOXphM2x3WlNCN1hISmNibHgwUUdsdVkyeDFaR1VnYzJsNlpTaHlaVzBvTWpRcExDQnlaVzBvTWpRcEtUdGNjbHh1ZlZ4eVhHNHVjM1puWDIxaGFXd2dlMXh5WEc1Y2RFQnBibU5zZFdSbElITnBlbVVvTVM0MWNtVnRMQ0F4TGpKeVpXMHBPMXh5WEc1OVhISmNiaTV6ZG1kZmNHaHZibVVnZTF4eVhHNWNkRUJwYm1Oc2RXUmxJSE5wZW1Vb2NtVnRLREl3S1N3Z2NtVnRLREU1S1NrN1hISmNibHh5WEc1OVhISmNiaTV6ZG1kZmJXRndMVzFoY210bGNpQjdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2h5Wlcwb01Ua3BMQ0J5Wlcwb01qUXBLVHRjY2x4dWZWeHlYRzR1YzNablgyeHZaMmx1SUh0Y2NseHVYSFJBYVc1amJIVmtaU0J6YVhwbEtISmxiU2d4TlNrc0lISmxiU2d4TnlrcE8xeHlYRzVjZENCamIyeHZjam9nY21kaUtERTVOaXdnTWpBekxDQXlNRFVwTzF4eVhHNTlYSEpjYmk1emRtZGZiR2x1YXlCN1hISmNibHgwUUdsdVkyeDFaR1VnYzJsNlpTaHlaVzBvTWpBcExDQnlaVzBvTVRrcEtUdGNjbHh1WEhSdFlYSm5hVzR0Y21sbmFIUTZJSEpsYlNnNEtUdGNjbHh1ZlZ4eVhHNHVjM1puWDNOc2FXUmxjaTFoY25KdmR5QjdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2h5Wlcwb05EVXBMQ0J5Wlcwb01qZ3BLVHRjY2x4dVhIUmliM2d0YzJoaFpHOTNPaUF3Y0hnZ01uQjRJREp3ZUNBd0lISm5ZbUVvTUN3Z01Dd2dNQ3dnTUM0eE5pazdYSEpjYmx4MFkyOXNiM0k2SUNSd2NtbHRZWEo1UTI5c2IzSTdYSEpjYmx4MGIzQmhZMmwwZVRvZ01DNDNPMXh5WEc1Y2RIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dNQzR6Y3p0Y2NseHVmU0lzSWk1b0xYUnBkR3hsTFhObFkzUnBiMjRnZTF4eVhHNWNkR1p2Ym5RdFptRnRhV3g1T2lBblltVnlibWxsY2ljN1hISmNibHgwWm05dWRDMXphWHBsT2lCeVpXMG9Oak1wTzF4eVhHNWNkR3hsZEhSbGNpMXpjR0ZqYVc1bk9pQXdMakp5WlcwN1hISmNibHgwWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHlYRzVjZEhabGNuUnBZMkZzTFdGc2FXZHVPaUJ0YVdSa2JHVTdYSEpjYmx4MGJXRnlaMmx1T2lBd0lISmxiU2d4TnlrN1hISmNibHgwYkdsdVpTMW9aV2xuYUhRNklERXVNRFU3WEhKY2JseDBabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNjbHh1WEhSamIyeHZjam9nSkhScGRHeGxMV052Ykc5eU8xeHlYRzVjY2x4dVhIUW1PbVpwY25OMExXeGxkSFJsY2lCN1hISmNibHgwWEhSMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4eVhHNWNkSDFjY2x4dVhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHlYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQnlaVzBvTkRrcE8xeHlYRzVjZEgxY2NseHVYSFJBYVc1amJIVmtaU0J0YjJKcGJHVWdlMXh5WEc1Y2RGeDBabTl1ZEMxemFYcGxPaUJ5Wlcwb016VXBPMXh5WEc1Y2RIMWNjbHh1ZlZ4eVhHNWNjbHh1TG1ndGRHbDBiR1V0YzJWamRHbHZibDlqYjJ4dmNpQjdYSEpjYmx4MFkyOXNiM0k2SUNSd2NtbHRZWEo1UTI5c2IzSTdYSEpjYm4xY2NseHVYSEpjYmk1b0xYUnBkR3hsTFdGeWRHbGpiR1VnZTF4eVhHNWNkR1p2Ym5RdFptRnRhV3g1T2lBblltVnlibWxsY2ljN1hISmNibHgwWm05dWRDMXphWHBsT2lCeVpXMG9NelVwTzF4eVhHNWNkR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2NseHVYSFIyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE8xeHlYRzVjZEcxaGNtZHBiam9nTUNCeVpXMG9NVFlwTzF4eVhHNWNkR3hwYm1VdGFHVnBaMmgwT2lBeExqVTdYSEpjYmx4MFptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2NseHVYSFJqYjJ4dmNqb2dKSFJsZUhRdFkyOXNiM0k3WEhKY2JseHlYRzVjZENZNlptbHljM1F0YkdWMGRHVnlJSHRjY2x4dVhIUmNkSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYSEpjYmx4MGZWeHlYRzVjZEVCcGJtTnNkV1JsSUcxdlltbHNaU0I3WEhKY2JseDBYSFJtYjI1MExYTnBlbVU2SUhKbGJTZ3lNaWs3WEhKY2JseDBmVnh5WEc1OUlpd2lMbU10Ym1GMlgxOXNhWE4wSUh0Y2NseHVYSFJrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzVjZEhkcFpIUm9PaUE0TUNVN1hISmNibHgwWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVYSFJBYVc1amJIVmtaU0J6TFcxdlltbHNaU0I3WEhKY2JseDBYSFIzYVdSMGFEb2dPVElsTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxtTXRibUYyWDE5cGRHVnRJSHRjY2x4dVhIUm1iR1Y0TFdkeWIzYzZJREU3WEhKY2JuMWNjbHh1WEhKY2JpNWpMVzVoZGw5ZmJHbHVheUI3WEhKY2JseDBaR2x6Y0d4aGVUb2dhVzVzYVc1bExXSnNiMk5yTzF4eVhHNWNkR1p2Ym5RdGMybDZaVG9nS0hKbGJTZ3hOeWtwTzF4eVhHNWNkR3hwYm1VdGFHVnBaMmgwT2lBeExqVTdYSEpjYmx4MFptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2NseHVYSFIzYUdsMFpTMXpjR0ZqWlRvZ2JtOTNjbUZ3TzF4eVhHNWNkR052Ykc5eU9pQWtjSEpwYldGeWVVTnZiRzl5TzF4eVhHNWNkSFJ5WVc1emFYUnBiMjQ2SUdOdmJHOXlJREF1TkhNN1hISmNibHgwSmpvNlptbHljM1F0YkdWMGRHVnlJSHRjY2x4dVhIUmNkSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYSEpjYmx4MGZWeHlYRzVjZENZNmFHOTJaWElnZTF4eVhHNWNkRngwWTI5c2IzSTZJQ1JpY21GdVpDMWpiMnh2Y2p0Y2NseHVYSFI5WEhKY2JuMGlMQ0l1WXkxamIzQjVJSHRjY2x4dVhIUmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNWNkR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JseDBhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hISmNibHgwSmlCaElIdGNjbHh1WEhSY2RIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2RXNWtaWEpzYVc1bE8xeHlYRzVjZEZ4MFkzVnljMjl5T2lCd2IybHVkR1Z5TzF4eVhHNWNkSDFjY2x4dVhIUW1JR0U2YUc5MlpYSWdlMXh5WEc1Y2RGeDBkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4eVhHNWNkSDFjY2x4dVhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHlYRzVjZEZ4MFpteGxlQzEzY21Gd09pQjNjbUZ3TzF4eVhHNWNkRngwZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxtTXRZMjl3ZVY5cGRHVnRJSHRjY2x4dVhIUmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEhKY2JseDBZMjlzYjNJNklDUndjbWx0WVhKNVEyOXNiM0k3WEhKY2JseDBabTl1ZEMxM1pXbG5hSFE2SURNd01EdGNjbHh1WEhSbWIyNTBMWE5wZW1VNklISmxiU2d4TmlrN1hISmNibHgwYkdsdVpTMW9aV2xuYUhRNklEWXVNamc3WEhKY2JseDBYSEpjYmx4MEpqcGhablJsY2lCN1hISmNibHgwWEhSa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYSEpjYmx4MFhIUmpiMjUwWlc1ME9pQW5mQ2M3WEhKY2JseDBYSFJ0WVhKbmFXNDZJREFnTUM0emNtVnRPMXh5WEc1Y2RGeDBabTl1ZEMxemFYcGxPaUJ5Wlcwb01UWXBPMXh5WEc1Y2RGeDBabTl1ZEMxM1pXbG5hSFE2SURNd01EdGNjbHh1WEhSOVhISmNibHgwSmpwc1lYTjBMV05vYVd4a09tRm1kR1Z5SUh0Y2NseHVYSFJjZEdScGMzQnNZWGs2SUc1dmJtVTdYSEpjYmx4MGZWeHlYRzVjY2x4dVhIUkFhVzVqYkhWa1pTQnRiMkpwYkdVZ2UxeHlYRzVjZEZ4MGJHbHVaUzFvWldsbmFIUTZJREV1TlR0Y2NseHVYSFJjZENZNlptbHljM1F0WTJocGJHUWdlMXh5WEc1Y2RGeDBYSFIzYVdSMGFEb2dNVEF3SlR0Y2NseHVYSFJjZEgxY2NseHVYSFJjZENZNlptbHljM1F0WTJocGJHUTZZV1owWlhJZ2UxeHlYRzVjZEZ4MFhIUmthWE53YkdGNU9pQnViMjVsTzF4eVhHNWNkRngwZlZ4eVhHNWNkSDFjY2x4dWZWeHlYRzR1WXkxamIzQjVYMlp2YjNSbGNpQjdYSEpjYmx4MGQybGtkR2c2SURVd0pUdGNjbHh1WEhSb1pXbG5hSFE2SURVd0pUdGNjbHh1WEhScWRYTjBhV1o1TFdOdmJuUmxiblE2SUdac1pYZ3RaVzVrTzF4eVhHNWNkRUJwYm1Oc2RXUmxJSFJoWW14bGRDQjdYSEpjYmx4MFhIUjNhV1IwYURvZ09EQWxPMXh5WEc1Y2RGeDBhR1ZwWjJoME9pQXlNaVU3WEhKY2JseDBYSFJ2Y21SbGNqb2dORHRjY2x4dVhIUmNkR3AxYzNScFpua3RZMjl1ZEdWdWREb2dZMlZ1ZEdWeU8xeHlYRzVjZEgxY2NseHVYSFJBYVc1amJIVmtaU0J0YjJKcGJHVWdlMXh5WEc1Y2RGeDBkMmxrZEdnNklERXdNQ1U3WEhKY2JseDBmVnh5WEc1Y2RDWWdMbU10WTI5d2VWOXBkR1Z0SUh0Y2NseHVYSFJjZEdOdmJHOXlPaUJ5WjJKaEtDUndjbWx0WVhKNVEyOXNiM0lzSURBdU5TazdYSEpjYmx4MGZWeHlYRzVjZENZZ1lTQjdYSEpjYmx4MFhIUnZjR0ZqYVhSNU9pQXdMalU3WEhKY2JseDBmVnh5WEc1OUlsMTkgKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL2Jsb2cubWFpbi5zY3NzIl0sInNvdXJjZVJvb3QiOiIifQ==*/