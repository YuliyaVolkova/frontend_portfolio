/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on March 8, 2018 */
@font-face {
  font-family: 'bernier_distressed';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier_shade';
  src: url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff) format("woff");
  font-weight: 900;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff) format("woff");
  font-weight: 900;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff) format("woff");
  font-weight: 400;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff) format("woff");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff) format("woff");
  font-weight: 300;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff) format("woff");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff) format("woff");
  font-weight: 500;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff) format("woff");
  font-weight: 400;
  font-style: normal; }

/**
 * Set up a decent box model on the root element
 */
* {
  box-sizing: border-box; }

body, html {
  color: #455a64;
  background-color: #ededed;
  font-family: "roboto", "Arial", sans-serif;
  margin: 0;
  padding: 0;
  width: 100%;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.425rem;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-display: optional;
  position: relative; }
  @media screen and (min-width: 1800px) {
    body, html {
      background-color: rgba(69, 90, 100, 0.3); } }
  @media screen and (max-width: 992px) and (min-width: 769px) {
    body, html {
      font-size: 15px; } }
  @media screen and (max-width: 768px) {
    body, html {
      font-size: 14px; } }
  @media screen and (max-width: 480px) {
    body, html {
      font-size: 13px; } }
  @media screen and (max-width: 375px) {
    body, html {
      font-size: 12px; } }

body.hero, html.hero {
  height: 100%;
  overflow: hidden; }

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*::before,
*::after {
  box-sizing: inherit; }

/**
 * Basic styles for links
 */
a {
  color: white;
  text-decoration: none; }

ul {
  margin: 0;
  padding: 0; }

ul li {
  list-style: none; }

h1, h2, h3, p {
  margin: 0; }

svg {
  fill: currentColor;
  stroke: currentColor; }

button, input, select, textarea {
  font-family: "roboto", "Arial", sans-serif; }

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table; }

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap;
  display: block; }

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  /* margin: -1px;*/
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.l-wrapper {
  width: 100%;
  height: 100%;
  margin: 0;
  position: relative;
  overflow: hidden; }
  @media screen and (min-width: 1301px) {
    .l-wrapper {
      min-height: 650px; } }

.l-section {
  width: 100%;
  min-height: 628px;
  position: relative; }
  @media screen and (min-width: 1301px) {
    .l-section {
      min-height: 650px;
      width: 112.5rem;
      margin: auto; } }
  @media screen and (max-width: 768px) {
    .l-section {
      min-height: 100vh; } }

.l-last {
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.l-layout-first {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column; }

.l-hero {
  height: 100vh;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  background-image: url(http://localhost:8080/assets/images/decor/bg/montains.jpg);
  background-attachment: fixed; }
  .l-hero:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(1, 102, 114, 0.3);
    z-index: 0; }
  @media screen and (min-width: 1301px) {
    .l-hero {
      min-height: 650px; } }
  @media screen and (max-width: 480px) {
    .l-hero {
      background-attachment: scroll; } }

.l-hero_blog {
  background-position: center top; }
  .l-hero_blog:before {
    display: block;
    content: '';
    width: 100%;
    height: 3%;
    background-color: #df5766; }
  .l-hero_blog:after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    top: 3%;
    background-color: rgba(1, 102, 114, 0.3);
    z-index: 0; }

.l-hero__develop {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 2; }

.l-hero__develop_blog {
  bottom: 0;
  -webkit-transform: translate(-50%, -79%);
          transform: translate(-50%, -79%); }

.l-hero__social {
  position: absolute;
  z-index: 1;
  left: 10%;
  top: 10%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 12%;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }
  @media screen and (max-width: 768px) {
    .l-hero__social {
      width: 20%; } }
  @media screen and (max-width: 480px) {
    .l-hero__social {
      width: 30%; } }

.l-hero__social-item {
  height: 1.375rem; }

.l-hero__social-link {
  display: inline-block;
  height: 100%;
  color: white; }
  .l-hero__social-link:hover .svg-use {
    opacity: 1; }

.svg-use {
  width: 1.75rem;
  height: 1.375rem;
  transition: opacity 0.4s;
  opacity: 0.5; }

.l-container {
  width: 95%;
  height: 9.1875rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: auto;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  @media screen and (max-width: 768px) {
    .l-container {
      height: 14.75rem;
      -webkit-align-items: center;
          -ms-flex-align: center;
              align-items: center; } }
  @media screen and (max-width: 480px) {
    .l-container {
      height: 16.875rem; } }

.l-hamburger {
  position: absolute;
  top: 3%;
  right: 10%;
  z-index: 1; }

.l-main {
  width: 100%;
  background-color: #F0EFE9; }

.l-main__top {
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%); }

.l-main__top_blog {
  top: 50%;
  -webkit-transform: translateY(-60%);
          transform: translateY(-60%); }

.l-main__wrapper {
  width: 100%;
  min-height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline; }
  @media screen and (min-width: 1301px) {
    .l-main__wrapper {
      width: 112.5rem;
      margin: auto; } }
  .l-main__wrapper.l-main__wrapper_display-bl {
    display: block; }

.l-main__header {
  width: 100%;
  height: 12.1875rem;
  background-color: #faf8f0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.l-main__header-title {
  width: 40%;
  position: relative;
  color: #373e42;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .l-main__header-title .h-title-section {
    text-align: center; }
  .l-main__header-title::first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .l-main__header-title {
      width: 43%; } }

.l-main__slider {
  width: 100%;
  height: 750px;
  display: block; }
  @media screen and (max-width: 768px) {
    .l-main__slider {
      height: 1030px; } }

.l-main__column-one, .l-main__column-two {
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  width: 50%;
  min-height: 100%;
  position: relative; }

.l-main__column-one {
  background-color: #F0EFE9; }

.l-main__column-two {
  background-color: #EFEBE0; }

.l-map-container {
  width: 100%;
  height: 100%; }

.l-contacts {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.l-footer {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 9.1875rem;
  background-color: rgba(55, 62, 66, 0.85);
  padding: 0.5% 0;
  position: relative; }
  .l-footer:after {
    display: block;
    content: '';
    width: 100%;
    height: 1px;
    background-color: rgba(255, 255, 255, 0.1);
    position: absolute;
    left: 0;
    top: 50%; }
  @media screen and (max-width: 768px) {
    .l-footer {
      min-height: 14.75rem; } }
  @media screen and (max-width: 480px) {
    .l-footer {
      min-height: 16.875rem; } }

.l-footer__nav {
  width: 50%;
  height: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .l-footer__nav {
      width: 80%;
      height: 22%;
      -webkit-order: 1;
          -ms-flex-order: 1;
              order: 1;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__nav {
      width: 90%; } }

.l-footer__text {
  width: 50%;
  height: 50%;
  font-size: 1.0625rem;
  font-weight: 300;
  color: rgba(255, 255, 255, 0.5);
  line-height: 1.5;
  text-align: left;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .l-footer__text a {
    text-decoration: underline;
    cursor: pointer;
    opacity: 0.5; }
  .l-footer__text a:hover {
    text-decoration: none; }
  @media screen and (max-width: 768px) {
    .l-footer__text {
      width: 80%;
      height: 28%;
      -webkit-order: 3;
          -ms-flex-order: 3;
              order: 3;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center;
      text-align: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__text {
      width: 90%; } }

.l-footer__social {
  width: 50%;
  height: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .l-footer__social {
      width: 80%;
      height: 28%;
      -webkit-order: 2;
          -ms-flex-order: 2;
              order: 2;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .l-footer__social {
      width: 90%; } }

.l-footer__social-item {
  width: 2.1rem;
  height: 2.1rem;
  border: 0.5px solid rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  margin-right: 2%;
  transition: background-color 0.3s; }
  .l-footer__social-item:hover {
    background-color: rgba(255, 255, 255, 0.85); }
    .l-footer__social-item:hover .l-footer__social-link {
      color: #455a64; }
    .l-footer__social-item:hover .svg-use {
      opacity: 1; }

.l-footer__social-link {
  display: inline-block;
  width: 100%;
  height: 100%;
  color: white;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  transition: color 0.3s; }
  .l-footer__social-link .svg-use {
    width: 1.2rem;
    height: 1.55rem;
    opacity: 0.5;
    transition: opacity 0.3s; }

.c-hamburger-nav {
  width: 2.375rem;
  height: 2.0625rem; }

.c-hamburger-nav__target {
  display: block;
  width: 100%;
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-hamburger-nav__fake {
  display: block;
  width: 2.375rem;
  height: 0.3125rem;
  background-color: white;
  border-radius: 15%;
  overflow: visible;
  transition: 0.3s; }
  .c-hamburger-nav__fake:before {
    content: "";
    display: block;
    width: 2.375rem;
    height: 0.3125rem;
    border-radius: 15%;
    background-color: white;
    position: absolute;
    top: 100%;
    -webkit-transform: translateY(-100%);
            transform: translateY(-100%);
    left: 0; }
  .c-hamburger-nav__fake:after {
    content: "";
    display: block;
    width: 2.375rem;
    height: 0.3125rem;
    border-radius: 15%;
    background-color: white;
    position: absolute;
    bottom: 100%;
    left: 0;
    -webkit-transform: translateY(100%);
            transform: translateY(100%); }

.c-hamburger-nav__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-hamburger-nav__item {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  text-transform: uppercase;
  font-size: 1.5rem;
  font-weight: 400; }
  .c-hamburger-nav__item:before {
    content: "";
    display: block;
    width: 0.3125rem;
    height: 0.3125rem;
    border-radius: 50%;
    background-color: white;
    margin: 0.9375rem; }
  .c-hamburger-nav__item:first-child:before {
    display: none; }

.c-developer {
  width: 23.75rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-developer__img-wrap {
  width: 8.8125rem;
  height: 8.8125rem;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  overflow: hidden;
  margin-bottom: 4%;
  border-radius: 50%; }

.c-developer__img {
  max-width: 100%; }

.c-developer__content {
  width: 100%;
  text-align: center; }

.c-develop_blog-header {
  color: white; }

.c-developer__header {
  font-size: 2.1875rem;
  font-weight: 500;
  line-height: 1.5;
  margin-bottom: 0.3%;
  color: white; }

.c-developer__desc {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.5;
  font-weight: 300; }

.c-developer__desc_blog {
  color: white;
  font-weight: 400;
  display: inline-block;
  width: 100%; }

.c-next {
  display: block;
  width: 1.75rem;
  height: 1.125rem;
  position: absolute;
  bottom: 15%;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  z-index: 2;
  transition: -webkit-transform 0.3s;
  transition: transform 0.3s;
  transition: transform 0.3s, -webkit-transform 0.3s;
  will-change: transform; }
  .c-next:hover {
    -webkit-transform: translateX(-50%) scale(1.2);
            transform: translateX(-50%) scale(1.2); }
    .c-next:hover .svg_next {
      opacity: 1; }

.svg_hero {
  opacity: 0.06;
  width: 100%;
  height: 37%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  fill: white;
  z-index: 1; }

.svg_next {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white;
  transition: opacity 0.3s; }

.svg_dash {
  width: 1.6rem;
  height: 0.8rem;
  opacity: 0.25;
  fill: currentColor;
  stroke: currentColor;
  display: inline-block;
  vertical-align: middle; }

.svg-main-top_two-color {
  width: 100%;
  height: 20rem; }

.svg_main-top_one-color {
  width: 100%;
  height: 20rem;
  color: #faf8f0; }

.svg-main-icon {
  opacity: 0.07;
  position: absolute;
  top: 0;
  left: 50%;
  right: 0;
  bottom: 0;
  -webkit-transform: translate(-50%, -25%);
          transform: translate(-50%, -25%);
  z-index: 0; }

.svg-main-icon_about {
  width: 80%; }

.svg-main-icon_works {
  width: 134%;
  height: 12.125rem; }
  @media screen and (max-width: 768px) {
    .svg-main-icon_works {
      height: 8.125rem; } }

.svg_skype, .svg_mail, .svg_phone, .svg_map-marker {
  color: #00bfa5;
  -webkit-flex-basis: 20%;
      -ms-flex-preferred-size: 20%;
          flex-basis: 20%;
  transition: opacity 0.3s; }
  .svg_skype:hover, .svg_mail:hover, .svg_phone:hover, .svg_map-marker:hover {
    opacity: 0.7; }

.svg_skype {
  width: 1.5rem;
  height: 1.5rem; }

.svg_mail {
  width: 2.5rem;
  height: 1.75rem; }

.svg_phone {
  width: 1.25rem;
  height: 1.1875rem; }

.svg_map-marker {
  width: 1.1875rem;
  height: 1.5rem; }

.svg_login {
  width: 0.9375rem;
  height: 1.0625rem;
  color: #c4cbcd; }

.svg_link {
  width: 1.25rem;
  height: 1.1875rem;
  margin-right: 0.5rem; }

.svg_slider-arrow {
  width: 2.8125rem;
  height: 1.75rem;
  box-shadow: 0px 2px 2px 0 rgba(0, 0, 0, 0.16);
  color: white;
  opacity: 0.7;
  transition: opacity 0.3s; }

.h-title-section {
  font-family: 'bernier';
  font-size: 3.9375rem;
  letter-spacing: 0.2rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 2.5%;
  line-height: 1.5;
  font-weight: 500;
  color: #373e42; }
  .h-title-section:first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .h-title-section {
      font-size: 3.0625rem; } }

.h-title-section_color {
  color: white; }

.h-title-article {
  font-family: 'bernier';
  font-size: 2.1875rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 2.5%;
  line-height: 1.5;
  font-weight: 500;
  color: #455a64; }
  .h-title-article:first-letter {
    text-transform: uppercase; }

.c-nav__list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 80%;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.c-nav__item {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1; }

.c-nav__link {
  display: inline-block;
  font-size: 1.0625rem;
  line-height: 1.5;
  font-weight: 500;
  white-space: nowrap;
  color: white;
  transition: color 0.4s; }
  .c-nav__link::first-letter {
    text-transform: uppercase; }
  .c-nav__link:hover {
    color: #00bfa5; }

.c-copy {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .c-copy a {
    text-decoration: underline;
    cursor: pointer; }
  .c-copy a:hover {
    text-decoration: none; }
  @media screen and (max-width: 480px) {
    .c-copy {
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap;
      text-align: center; } }

.c-copy_item {
  display: inline-block;
  color: white;
  font-weight: 300;
  font-size: 1rem;
  line-height: 6.28; }
  .c-copy_item:after {
    display: inline-block;
    content: '|';
    margin: 0 0.3rem;
    font-size: 1rem;
    font-weight: 300; }
  .c-copy_item:last-child:after {
    display: none; }
  @media screen and (max-width: 480px) {
    .c-copy_item {
      line-height: 1.5; }
      .c-copy_item:first-child {
        width: 100%; }
      .c-copy_item:first-child:after {
        display: none; } }

.c-copy_footer {
  width: 50%;
  height: 50%;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }
  @media screen and (max-width: 768px) {
    .c-copy_footer {
      width: 80%;
      height: 22%;
      -webkit-order: 4;
          -ms-flex-order: 4;
              order: 4;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .c-copy_footer {
      width: 90%; } }
  .c-copy_footer .c-copy_item {
    color: rgba(255, 255, 255, 0.5); }
  .c-copy_footer a {
    opacity: 0.5; }

.c-button {
  min-width: 3.125rem;
  min-height: 2.8125rem;
  font-size: 1rem;
  padding: 0 1.75rem;
  display: inline-block;
  vertical-align: middle;
  background-color: transparent;
  border: 1px solid white;
  transition: background-color 0.2s;
  overflow: hidden;
  border-radius: 0.3125rem;
  outline: none; }
  .c-button:hover {
    background-color: white;
    cursor: pointer; }
  .c-button:hover .c-button__text {
    color: #00bfa5; }

.c-button__text {
  display: block;
  width: 100%;
  height: 100%;
  text-align: center;
  line-height: 2.8125rem;
  font-weight: 500;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  vertical-align: middle;
  color: white;
  transition: color 0.2s; }

.c-slider {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  width: 100%;
  height: 100%; }

.c-slider__desc-fr {
  background-color: #F0EFE9;
  height: 100%;
  width: 50%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .c-slider__desc-fr {
      width: 100%;
      height: 27%;
      -webkit-order: 2;
          -ms-flex-order: 2;
              order: 2; } }

.c-slider__main-fr {
  background-color: #EFEBE0;
  width: 50%;
  height: 70%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  @media screen and (max-width: 768px) {
    .c-slider__main-fr {
      width: 100%;
      -webkit-order: 1;
          -ms-flex-order: 1;
              order: 1;
      height: 51%; } }

.c-slider__control-fr {
  width: 50%;
  height: 30%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  @media screen and (max-width: 768px) {
    .c-slider__control-fr {
      width: 100%;
      -webkit-order: 3;
          -ms-flex-order: 3;
              order: 3;
      height: 22%; } }

.c-slider__desc-header {
  color: #373e42;
  width: 65%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  margin-bottom: 5%; }
  .c-slider__desc-header .svg_dash {
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%); }
  .c-slider__desc-header .h-title-article {
    line-height: 1.17;
    text-align: center;
    font-weight: 400; }
  @media screen and (max-width: 768px) {
    .c-slider__desc-header {
      width: 68%;
      margin-bottom: 2%; } }

.c-slider__desc-text {
  width: 80%;
  height: 3.75rem;
  text-transform: uppercase;
  color: #20b5a1;
  font-weight: 500;
  border-top: 2px solid rgba(0, 150, 136, 0.3);
  border-bottom: 2px solid rgba(0, 150, 136, 0.3);
  text-align: center;
  line-height: 3.75rem;
  margin-bottom: 5%; }
  @media screen and (max-width: 768px) {
    .c-slider__desc-text {
      width: 50%;
      margin-bottom: 2%; } }

.c-slider__desc-link {
  background-color: #00bfa5;
  color: white;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  transition: background-color 0.3s;
  border: 1px solid transparent; }
  .c-slider__desc-link:hover {
    background-color: #009688; }
    .c-slider__desc-link:hover .c-button__text {
      color: white; }

.c-slider__main-img {
  max-width: 90%;
  max-height: 80%;
  width: 60%;
  height: auto;
  box-shadow: 4px 18px 22px -15px rgba(0, 0, 0, 0.87); }
  @media screen and (max-width: 768px) {
    .c-slider__main-img {
      width: 45%; } }

.c-slider__control-prev {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  width: 50%;
  height: 100%;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .c-slider__control-prev:after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(182, 180, 174, 0.7);
    z-index: 0; }

.c-slider__control-next {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  width: 50%;
  height: 100%;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .c-slider__control-next:after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(136, 131, 114, 0.5);
    z-index: 0; }

.c-slider__control-img {
  max-width: 90%;
  max-height: 90%;
  width: 66%;
  height: auto;
  box-shadow: 4px 18px 22px -15px rgba(0, 0, 0, 0.87); }
  @media screen and (max-width: 768px) {
    .c-slider__control-img {
      width: 45%; } }

.c-slider__control__link {
  display: block;
  width: 2.8125rem;
  height: 1.75rem;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 1; }
  .c-slider__control__link:hover .svg_slider-arrow {
    opacity: 1; }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvYmFzZS9fZm9udHMuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvYmFzZS9fYmFzZS5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy91dGlscy9fdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL3V0aWxzL19taXhpbnMuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvYmFzZS9faGVscGVycy5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtd3JhcHBlci5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtc2VjdGlvbi5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy91dGlscy9fZnVuY3Rpb25zLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1oZXJvLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1oZXJvX19zb2NpYWwuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvbGF5b3V0L19sLWNvbnRhaW5lci5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtaGFtYnVyZ2VyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1tYWluLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1tYXAtY29udGFpbmVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1jb250YWN0cy5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtZm9vdGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2MtaGFtYnVyZ2VyLW5hdi5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19jLWRldmVsb3Blci5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19jLW5leHQuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvY29tcG9uZW50cy9fc3ZnLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2gtdGl0bGUuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvY29tcG9uZW50cy9fYy1uYXYuc2NzcyIsIndlYnBhY2s6Ly8vLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvY29tcG9uZW50cy9fYy1jb3B5LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2MtYnV0dG9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2Mtc2xpZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL3N0eWxlcy9teV93b3Jrcy5tYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUZBQWlGO0FBRWpGO0VBQ0ksa0NBQWlDO0VBQ2pDLGlHQUNrRjtFQUNsRixvQkFBbUI7RUFDbkIsbUJBQWtCOztBQUl0QjtFQUNJLHVCQUFzQjtFQUN0QixpR0FDK0U7RUFDL0Usb0JBQW1CO0VBQ25CLG1CQUFrQjs7QUFJdEI7RUFDSSw2QkFBNEI7RUFDNUIsaUdBQzZFO0VBQzdFLG9CQUFtQjtFQUNuQixtQkFBa0I7O0FBS3RCO0VBQ0ksc0JBQXFCO0VBQ3JCLGlHQUNtRTtFQUNuRSxpQkFBZ0I7RUFDaEIsbUJBQWtCOztBQUl0QjtFQUNJLHNCQUFxQjtFQUNyQixpR0FDeUU7RUFDekUsaUJBQWdCO0VBQ2hCLG1CQUFrQjs7QUFJdEI7RUFDSSxzQkFBcUI7RUFDckIsbUdBQ3FFO0VBQ3JFLGlCQUFn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RVg7O0FBRUQ7RUFDQyxzQkFBYTtFQUFiLHFCQUFhO0VBQWIsY0FBYTtFQUNiLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsYUFBWTtFQUNaLGdDQUF1QjtNQUF2QixzQkFBdUI7VUFBdkIsd0JBQXVCO0VBQ3ZCLDRCQUFtQjtNQUFuQix1QkFBbUI7VUFBbkIsb0JBQW1CLEVBUW5CO0VBZEQ7SUFRRSxZQUFXO0lBQ1gsZUFBYztJckJoQ2QsbUJBQWtCO0lBQ2xCLE9BQU07SUFDTixRQUFPO0lBQ1AsU0FBUTtJQUNSLFVBQVM7SXFCOEJULDJDQUEwQztJQUMxQyxXQUFVLEVBQ1Y7O0FBR0Y7RUFDQyxzQkFBYTtFQUFiLHFCQUFhO0VBQWIsY0FBYTtFQUNiLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsYUFBWTtFQUNaLGdDQUF1QjtNQUF2QixzQkFBdUI7VUFBdkIsd0JBQXVCO0VBQ3ZCLDRCQUFtQjtNQUFuQix1QkFBbUI7VUFBbkIsb0JBQW1CLEVBUW5CO0VBZEQ7SUFRRSxZQUFXO0lBQ1gsZUFBYztJckJoRGQsbUJBQWtCO0lBQ2xCLE9BQU07SUFDTixRQUFPO0lBQ1AsU0FBUTtJQUNSLFVBQVM7SXFCOENQLDJDQUEwQztJQUMzQyxXQUFVLEVBQ1g7O0FBRUY7RUFDQyxlQUFjO0VBQ2QsZ0JBQWU7RUFDZixXQUFVO0VBQ1YsYUFBWTtFQUdaLG9EQUFnRCxFQUloRDtFckI1SEE7SXFCaUhEO01BU0UsV0FBVSxFQUVYOztBQUNEO0VBQ0MsZUFBYztFckI1SmIsaUJJY2lDO0VKYmpDLGdCSWFpQztFSm1GakMsbUJBQWtCO0VBQ2xCLFNBQVE7RUFDUixVQUFTO0VBQ1QseUNBQWdDO1VBQWhDLGlDQUFnQztFcUIyRGpDLFdBQVUsRUFJVjtFQVJEO0lBTUUsV0FBVSxFQUNWOztBQzBpQ0YiLCJmaWxlIjoiLi9hc3NldHMvY3NzL3N0eWxlcy5teV93b3Jrcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgR2VuZXJhdGVkIGJ5IEZvbnQgU3F1aXJyZWwgKGh0dHBzOi8vd3d3LmZvbnRzcXVpcnJlbC5jb20pIG9uIE1hcmNoIDgsIDIwMTggKi9cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdiZXJuaWVyX2Rpc3RyZXNzZWQnO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL2Jlcm5pZXIvYmVybmllcmRpc3RyZXNzZWQtcmVndWxhci13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL2Jlcm5pZXIvYmVybmllcmRpc3RyZXNzZWQtcmVndWxhci13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnYmVybmllcic7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvYmVybmllci9iZXJuaWVycmVndWxhci1yZWd1bGFyLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvYmVybmllci9iZXJuaWVycmVndWxhci1yZWd1bGFyLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdiZXJuaWVyX3NoYWRlJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJzaGFkZS1yZWd1bGFyLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvYmVybmllci9iZXJuaWVyc2hhZGUtcmVndWxhci13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcblxyXG59XHJcblxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ3JvYm90byc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1ib2xkLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1ib2xkLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tYm9sZGl0YWxpYy13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tYm9sZGl0YWxpYy13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWl0YWxpYy13ZWJmb250LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgICB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8taXRhbGljLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbGlnaHQtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0LXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbGlnaHRpdGFsaWMtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0aXRhbGljLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuXHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xyXG4gICAgc3JjOiB1cmwoJy4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbWVkaXVtLXdlYmZvbnQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgICAgIHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1tZWRpdW0td2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG5cclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJ3JvYm90byc7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvcm9ib3RvL3JvYm90by1tZWRpdW1pdGFsaWMtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLW1lZGl1bWl0YWxpYy13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcblxyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLXJlZ3VsYXItd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICAgdXJsKCcuLi9mb250cy9yb2JvdG8vcm9ib3RvLXJlZ3VsYXItd2ViZm9udC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG5cclxufVxyXG5cclxuJHRleHQtZm9udC1zdGFjazogKCdyb2JvdG8nLCAnQXJpYWwnLCBzYW5zLXNlcmlmKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvYmFzZS9fZm9udHMuc2NzcyIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBUaGlzIGZpbGUgY29udGFpbnMgdmVyeSBiYXNpYyBzdHlsZXMuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAqIFNldCB1cCBhIGRlY2VudCBib3ggbW9kZWwgb24gdGhlIHJvb3QgZWxlbWVudFxuICovXG4qIHtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keSwgaHRtbCB7XG5cbiAgXHRjb2xvcjogJHRleHQtY29sb3I7XG4gXHRiYWNrZ3JvdW5kLWNvbG9yOiAkbGlnaHQtZ3JleTsgXG4gIFx0Zm9udC1mYW1pbHk6ICR0ZXh0LWZvbnQtc3RhY2s7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcblx0d2lkdGg6IDEwMCU7XG5cdGZvbnQtd2VpZ2h0OiA0MDA7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0bGluZS1oZWlnaHQ6IDEuNDI1cmVtO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuXHRmb250LWRpc3BsYXk6IG9wdGlvbmFsO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdEBpbmNsdWRlIGN1c3RvbV8xODAwIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCR0ZXh0LWNvbG9yLCAwLjMpO1xuXHR9IFxuXHRcblx0QGluY2x1ZGUgbGFwdG9wIHtcblxuXHRcdGZvbnQtc2l6ZTogMTVweDtcblx0fVxuXG5cdEBpbmNsdWRlIHRhYmxldCB7XG5cblx0XHRmb250LXNpemU6IDE0cHg7XG5cdH1cblxuXHRAaW5jbHVkZSBtb2JpbGUge1xuXG5cdFx0Zm9udC1zaXplOiAxM3B4O1xuXHR9XG5cblx0QGluY2x1ZGUgcy1tb2JpbGUge1xuXG5cdFx0Zm9udC1zaXplOiAxMnB4O1xuXHR9XG59XG5ib2R5Lmhlcm8sIGh0bWwuaGVybyB7XG5cdGhlaWdodDogMTAwJTtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyoqXG4gKiBNYWtlIGFsbCBlbGVtZW50cyBmcm9tIHRoZSBET00gaW5oZXJpdCBmcm9tIHRoZSBwYXJlbnQgYm94LXNpemluZ1xuICogU2luY2UgYCpgIGhhcyBhIHNwZWNpZmljaXR5IG9mIDAsIGl0IGRvZXMgbm90IG92ZXJyaWRlIHRoZSBgaHRtbGAgdmFsdWVcbiAqIG1ha2luZyBhbGwgZWxlbWVudHMgaW5oZXJpdGluZyBmcm9tIHRoZSByb290IGJveC1zaXppbmcgdmFsdWVcbiAqIFNlZTogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9pbmhlcml0aW5nLWJveC1zaXppbmctcHJvYmFibHktc2xpZ2h0bHktYmV0dGVyLWJlc3QtcHJhY3RpY2UvXG4gKi9cbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBCYXNpYyBzdHlsZXMgZm9yIGxpbmtzXG4gKi9cbmEge1xuICBjb2xvcjogJHByaW1hcnlDb2xvcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG51bCB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcbn1cblxudWwgbGkge1xuXHRsaXN0LXN0eWxlOiBub25lO1xufVxuXG5oMSwgaDIsIGgzLCBwIHtcblx0bWFyZ2luOiAwO1xufVxuXG5zdmcge1xuXHRmaWxsOiBjdXJyZW50Q29sb3I7XG5cdHN0cm9rZTogY3VycmVudENvbG9yO1xufVxuXG5idXR0b24sIGlucHV0LCBzZWxlY3QsIHRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6ICR0ZXh0LWZvbnQtc3RhY2s7XG4gfVxuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvYmFzZS9fYmFzZS5zY3NzIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFRoaXMgZmlsZSBjb250YWlucyBhbGwgYXBwbGljYXRpb24td2lkZSBTYXNzIHZhcmlhYmxlcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLy8gUmVndWxhciBmb250IGZhbWlseVxuLy8vIEB0eXBlIExpc3RcblxuJHByaW1hcnlDb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xuXG4vLy8gQ29weSB0ZXh0IGNvbG9yXG4vLy8gQHR5cGUgQ29sb3JcbiR0ZXh0LWNvbG9yOiByZ2IoNjksIDkwLCAxMDApICFkZWZhdWx0O1xuJHRpdGxlLWNvbG9yOiByZ2IoNTUsIDYyLCA2Nik7XG4vLy9cbiRkYXJrLXRleHQtY29sb3I6ICMzNzNFNDI7XG5cbi8vLyBNYWluIGJyYW5kIGNvbG9yXG4vLy8gQHR5cGUgQ29sb3Jcbi8vJGJyYW5kLWNvbG9yOiByZ2IoMzIsMTgxLDE2MSkgIWRlZmF1bHQ7XG4kYnJhbmQtY29sb3I6IHJnYigwLCAxOTEsIDE2NSkgIWRlZmF1bHQ7XG5cbi8vLyBTZWNvbmRhcnkgY29sb3JcbiRzZWNvbmQtY29sb3I6IHJnYigwLCAxNTAsIDEzNik7XG5cbiRsaWdodC1yZWQ6IHJnYigyMjMsIDg3LCAxMDIpO1xuXG4kbGlnaHQtd2hpdGU6ICNGRUZFRkU7XG4kbGlnaHQtYmVpZ2U6ICNGMEVGRTk7XG4kYmVpZ2U6ICNGQkY4RjE7XG4kYmVpZ2Utb25lOiAjZWZlZWU5O1xuJGJlaWdlLXR3bzogI2VlZWJkZjtcblxuLy8vIExpZ2h0IGdyZXlcbi8vLyBAdHlwZSBDb2xvclxuJGxpZ2h0LWdyZXk6IHJnYigyMzcsIDIzNywgMjM3KSAhZGVmYXVsdDtcblxuLy8vIE1lZGl1bSBncmV5XG4vLy8gQHR5cGUgQ29sb3JcbiRtaWQtZ3JleTogcmdiKDE1MywgMTUzLCAxNTMpICFkZWZhdWx0O1xuXG4vLy8gRGFyayBncmV5XG4vLy8gQHR5cGUgQ29sb3JcbiRkYXJrLWdyZXk6IHJnYig2OCwgNjgsIDY4KSAhZGVmYXVsdDtcblxuLy8vKioqIGNvbG9ycyAqKioqXG4vLy9cbi8vXCIjMDA3N0I1XCJcbi8vcmdiKDEsIDEwMiwgMTE0KVxuXG4vLy8gQ29udGFpbmVyJ3MgbWF4aW11bSB3aWR0aFxuLy8vIEB0eXBlIExlbmd0aFxuJG1heC13aWR0aDogMTE4MHB4ICFkZWZhdWx0O1xuXG4vLy8gQnJlYWtwb2ludHMgbWFwXG4vLy8gQHByb3Age1N0cmluZ30ga2V5cyAtIEtleXMgYXJlIGlkZW50aWZpZXJzIG1hcHBlZCB0byBhIGdpdmVuIGxlbmd0aFxuLy8vIEBwcm9wIHtNYXB9IHZhbHVlcyAtIFZhbHVlcyBhcmUgYWN0dWFsIGJyZWFrcG9pbnRzIGV4cHJlc3NlZCBpbiBwaXhlbHNcbiRicmVha3BvaW50czogKFxuICAnc21hbGwnOiAzMjBweCxcbiAgJ21lZGl1bSc6IDc2OHB4LFxuICAnbGFyZ2UnOiAxMDI0cHgsXG4pICFkZWZhdWx0O1xuXG4kZGVza3RvcDogMTMwMHB4O1xuJGxhcHRvcDogIDk5MnB4O1xuJHRhYmxldDogNzY4cHg7XG4kbW9iaWxlOiA0ODBweDtcbiRzbWFsbC1tb2JpbGU6IDM3NXB4O1xuXG4vLy8gUmVsYXRpdmUgb3IgYWJzb2x1dGUgVVJMIHdoZXJlIGFsbCBhc3NldHMgYXJlIHNlcnZlZCBmcm9tXG4vLy8gQHR5cGUgU3RyaW5nXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdoZW4gdXNpbmcgYSBDRE5cbi8vLyAgICRiYXNlLXVybDogJ2h0dHA6Ly9jZG4uZXhhbXBsZS5jb20vYXNzZXRzLyc7XG4kYmFzZS11cmw6ICcvYXNzZXRzLycgIWRlZmF1bHQ7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvdXRpbHMvX3ZhcmlhYmxlcy5zY3NzIiwiXHJcbkBtaXhpbiBzaXplKCR3aWR0aCwgJGhlaWdodDogJHdpZHRoKSB7XHJcbiAgd2lkdGg6ICR3aWR0aDtcclxuICBoZWlnaHQ6ICRoZWlnaHQ7XHJcbn1cclxuXHJcbi8vLyBtaXhpbnMgZm9yIE1lZGlhIFF1ZXJpZXNcclxuQG1peGluIGN1c3RvbV8xODAwIHtcclxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxODAwcHgpIHtcclxuICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gY3VzdG9tIHtcclxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkZGVza3RvcCArIDEpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGRlc2t0b3Age1xyXG5cdEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRsYXB0b3AgKyAxKSBhbmQgKG1heC13aWR0aDogJGRlc2t0b3ApIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIGxhcHRvcCB7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJGxhcHRvcCkgYW5kIChtaW4td2lkdGg6ICR0YWJsZXQgKyAxKSB7XHJcbiAgXHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbkBtaXhpbiB0YWJsZXQge1xyXG5cdEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICR0YWJsZXQpIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIG1vYmlsZSB7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJG1vYmlsZSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gcy1tb2JpbGUge1xyXG5cdEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRzbWFsbC1tb2JpbGUpIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIHJldGluYSB7XHJcbiAgQG1lZGlhXHJcbiAgICBvbmx5IHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksXHJcbiAgICBvbmx5IHNjcmVlbiBhbmQgKG1pbi0tbW96LWRldmljZS1waXhlbC1yYXRpbzogMiksXHJcbiAgICBvbmx5IHNjcmVlbiBhbmQgKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIvMSksXHJcbiAgICBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLFxyXG4gICAgb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSxcclxuICAgIG9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDJkcHB4KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcblxyXG5AbWl4aW4gcHJpbnQge1xyXG4gIEBtZWRpYSBwcmludCB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vLyBtaXhpbnMgZm9yIGNoYW5nZSB2aXNpYmxpdHlcclxuXHJcbkBtaXhpbiBpbnZpc2libGUge1xyXG4gIGJvcmRlcjogMDtcclxuICBjbGlwOiByZWN0KDAgMCAwIDApO1xyXG4gIGhlaWdodDogMXB4O1xyXG4gIG1hcmdpbjogLTFweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxcHg7XHJcbn1cclxuXHJcbkBtaXhpbiB2aXNpYmxlIHtcclxuICBoZWlnaHQ6IGluaXRpYWw7XHJcbiAgd2lkdGg6IGluaXRpYWw7XHJcbiAgbWFyZ2luOiBpbml0aWFsO1xyXG4gIHBvc2l0aW9uOiBpbml0aWFsO1xyXG59XHJcblxyXG4vLy8gcG9zaXRpb25cclxuXHJcbkBtaXhpbiBhYnNvbHV0ZS1zdHJldGNoIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG59XHJcblxyXG5AbWl4aW4gYWJzb2x1dGUtY2VudGVyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG59XHJcblxyXG5AbWl4aW4gYWJzb2x1dGUtY2VudGVyWCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbn1cclxuXHJcbkBtaXhpbiBhYnNvbHV0ZS1jZW50ZXJZIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxufVxyXG4vLy8gVHJpYW5nbGUgaGVscGVyIG1peGluXHJcbi8vLyBAcGFyYW0ge0RpcmVjdGlvbn0gJGRpcmVjdGlvbiAtIFRyaWFuZ2xlIGRpcmVjdGlvbiwgZWl0aGVyIGB0b3BgLCBgcmlnaHRgLCBcclxuLy8vYGJvdHRvbWAgb3IgYGxlZnRgXHJcbi8vLyBAcGFyYW0ge0NvbG9yfSAkY29sb3IgW2N1cnJlbnRjb2xvcl0gLSBUcmlhbmdsZSBjb2xvciBcclxuLy8vIEBwYXJhbSB7TGVuZ3RofSAkc2l6ZSBbMWVtXSAtIFRyaWFuZ2xlIHNpemVcclxuXHJcbkBtaXhpbiB0cmlhbmdsZSgkZGlyZWN0aW9uLCAkY29sb3I6IGN1cnJlbnRjb2xvciwgJHNpemU6IDFlbSkge1xyXG4gIFxyXG4gIEBpZiBub3QgaW5kZXgodG9wIHJpZ2h0IGJvdHRvbSBsZWZ0LCAkZGlyZWN0aW9uKSB7XHJcbiAgICBAZXJyb3IgXCJEaXJlY3Rpb24gbXVzdCBiZSBlaXRoZXIgYHRvcGAsIGByaWdodGAsIGBib3R0b21gIG9yIGBsZWZ0YC5cIjtcclxuICB9XHJcblxyXG4gIHdpZHRoOiAwO1xyXG4gIGhlaWdodDogMDtcclxuICB6LWluZGV4OiAyO1xyXG4gIGJvcmRlci0je29wcG9zaXRlLWRpcmVjdGlvbigkZGlyZWN0aW9uKX06ICgkc2l6ZSAqIDEuNSkgc29saWQgJGNvbG9yO1xyXG4gIFxyXG4gICRwZXJwZW5kaWN1bGFyLWJvcmRlcnM6ICRzaXplIHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIFxyXG4gIEBpZiAkZGlyZWN0aW9uID09IHRvcCBvciAkZGlyZWN0aW9uID09IGJvdHRvbSB7XHJcbiAgICBib3JkZXItbGVmdDogICAkcGVycGVuZGljdWxhci1ib3JkZXJzO1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAgJHBlcnBlbmRpY3VsYXItYm9yZGVycztcclxuICB9IEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gcmlnaHQgb3IgJGRpcmVjdGlvbiA9PSBsZWZ0IHtcclxuICAgIGJvcmRlci1ib3R0b206ICRwZXJwZW5kaWN1bGFyLWJvcmRlcnM7XHJcbiAgICBib3JkZXItdG9wOiAgICAkcGVycGVuZGljdWxhci1ib3JkZXJzO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbi8vLyBzdHlsaW5nIHJhZGlvYnV0dG9uLCBjaGVja2JveFxyXG5cclxuQG1peGluIGhpZGRlbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMHB4O1xyXG4gIGxlZnQ6IDBweDtcclxuICB3aWR0aDogMDtcclxuICBoZWlnaHQ6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBvcGFjaXR5OiAwO1xyXG59XHJcbi8vLyBmb3IgcGxhY2Vob2xkZXIgc3R5bGluZ1xyXG5cclxuQG1peGluIHBsYWNlaG9sZGVyIHtcclxuICBcclxuICAmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHsgQGNvbnRlbnQ7IH1cclxuICAmOi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgIHsgQGNvbnRlbnQ7IH1cclxuICAmOjotbW96LXBsYWNlaG9sZGVyICAgICAgICAgIHsgQGNvbnRlbnQ7IH1cclxuICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciAgICAgIHsgQGNvbnRlbnQ7IH0gIFxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL3V0aWxzL19taXhpbnMuc2NzcyIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBUaGlzIGZpbGUgY29udGFpbnMgQ1NTIGhlbHBlciBjbGFzc2VzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLyoqXG4gKiBDbGVhciBpbm5lciBmbG9hdHNcbiAqL1xuLmNsZWFyZml4OjphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogdGFibGU7XG59XG5cbi8qKlxuICogTWFpbiBjb250ZW50IGNvbnRhaW5lcnNcbiAqIDEuIE1ha2UgdGhlIGNvbnRhaW5lciBmdWxsLXdpZHRoIHdpdGggYSBtYXhpbXVtIHdpZHRoXG4gKiAyLiBDZW50ZXIgaXQgaW4gdGhlIHZpZXdwb3J0XG4gKiAzLiBMZWF2ZSBzb21lIHNwYWNlIG9uIHRoZSBlZGdlcywgZXNwZWNpYWxseSB2YWx1YWJsZSBvbiBzbWFsbCBzY3JlZW5zXG4gKi9cblxuXG4vKipcbiAqIEhpZGUgdGV4dCB3aGlsZSBtYWtpbmcgaXQgcmVhZGFibGUgZm9yIHNjcmVlbiByZWFkZXJzXG4gKiAxLiBOZWVkZWQgaW4gV2ViS2l0LWJhc2VkIGJyb3dzZXJzIGJlY2F1c2Ugb2YgYW4gaW1wbGVtZW50YXRpb24gYnVnO1xuICogICAgU2VlOiBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDU3MTQ2XG4gKi9cbi5oaWRlLXRleHQge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwOyAvKiAxICovXG4gIHRleHQtaW5kZW50OiAxMDElO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBIaWRlIGVsZW1lbnQgd2hpbGUgbWFraW5nIGl0IHJlYWRhYmxlIGZvciBzY3JlZW4gcmVhZGVyc1xuICogU2hhbWVsZXNzbHkgYm9ycm93ZWQgZnJvbSBIVE1MNUJvaWxlcnBsYXRlOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvYmxvYi9tYXN0ZXIvc3JjL2Nzcy9tYWluLmNzcyNMMTE5LUwxMzNcbiAqL1xuLnZpc3VhbGx5LWhpZGRlbiB7XG4gIGJvcmRlcjogMDtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgaGVpZ2h0OiAxcHg7XG4gLyogbWFyZ2luOiAtMXB4OyovXG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbn1cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2Jhc2UvX2hlbHBlcnMuc2NzcyIsIlxyXG4ubC13cmFwcGVyIHtcclxuXHRcclxuXHRAaW5jbHVkZSBzaXplKDEwMCUpO1xyXG5cdG1hcmdpbjogMDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRAaW5jbHVkZSBjdXN0b20ge1xyXG5cdFx0bWluLWhlaWdodDogNjUwcHg7XHJcblx0fVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC13cmFwcGVyLnNjc3MiLCJcclxuLmwtc2VjdGlvbiB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0bWluLWhlaWdodDogNjI4cHg7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0QGluY2x1ZGUgY3VzdG9tIHtcclxuXHRcdFx0bWluLWhlaWdodDogNjUwcHg7XHJcblx0XHRcdHdpZHRoOiByZW0oMTgwMCk7XHJcblx0XHRcdG1hcmdpbjogYXV0bztcclxuXHRcdH1cclxuXHRcdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRcdG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG5cdFx0fVxyXG59XHJcblxyXG4ubC1sYXN0IHtcclxuXHRoZWlnaHQ6IDEwMCU7XHJcblx0ZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuLmwtbGF5b3V0LWZpcnN0IHtcclxuXHRAaW5jbHVkZSBhYnNvbHV0ZS1zdHJldGNoO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtc2VjdGlvbi5zY3NzIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFRoaXMgZmlsZSBjb250YWlucyBhbGwgYXBwbGljYXRpb24td2lkZSBTYXNzIGZ1bmN0aW9ucy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4kYnJvd3Nlci1jb250ZXh0OiAxNjtcblxuLy8vIHJlbVxuXG5AZnVuY3Rpb24gcmVtKCRwaXhlbHMsICRjb250ZXh0OiAkYnJvd3Nlci1jb250ZXh0KSB7XG4gIEBpZiAodW5pdGxlc3MoJHBpeGVscykpIHtcbiAgICAkcGl4ZWxzOiAkcGl4ZWxzICogMXB4O1xuICB9XG5cbiAgQGlmICh1bml0bGVzcygkY29udGV4dCkpIHtcbiAgICAkY29udGV4dDogJGNvbnRleHQgKiAxcHg7XG4gIH1cblxuICBAcmV0dXJuICRwaXhlbHMgLyAkY29udGV4dCAqIDFyZW07XG59XG5cbi8vLyBlbVxuXG5AZnVuY3Rpb24gZW0oJHBpeGVscywgJGNvbnRleHQ6ICRicm93c2VyLWNvbnRleHQpIHtcbiAgQGlmICh1bml0bGVzcygkcGl4ZWxzKSkge1xuICAgICRwaXhlbHM6ICRwaXhlbHMgKiAxcHg7XG4gIH1cblxuICBAaWYgKHVuaXRsZXNzKCRjb250ZXh0KSkge1xuICAgICRjb250ZXh0OiAkY29udGV4dCAqIDFweDtcbiAgfVxuXG4gIEByZXR1cm4gJHBpeGVscyAvICRjb250ZXh0ICogMWVtO1xufVxuXG4vLy8gZnVuY3Rpb24gaXMgaXQgYWxsb3dzIHlvdSB0byBwYXNzIGEgbGlzdCBvZiBkaXJlY3Rpb25zLCBcbi8vL3NvIHRoYXQgeW91IGdldCBib3R0b20gbGVmdCBmcm9tIG9wcG9zaXRlLWRpcmVjdGlvbih0b3AgcmlnaHQpLlxuLy8vIEl0IGNhbiBiZSB1c2VmdWwgd2hlbiBkZWFsaW5nIHdpdGggYmFja2dyb3VuZC1wb3NpdGlvbiwgZm9yIGluc3RhbmNlXG5cbkBmdW5jdGlvbiBvcHBvc2l0ZS1kaXJlY3Rpb24oJGRpcmVjdGlvbnMpIHtcblxuICAkb3Bwb3NpdGUtZGlyZWN0aW9uczogKCk7XG4gICRkaXJlY3Rpb24tbWFwOiAoXG4gICAgJ3RvcCc6ICdib3R0b20nLFxuICAgICdyaWdodCc6ICdsZWZ0JyxcbiAgICAnYm90dG9tJzogJ3RvcCcsXG4gICAgJ2xlZnQnOiAncmlnaHQnLFxuICAgICdsdHInOiAncnRsJyxcbiAgICAncnRsJzogJ2x0cicpO1xuXG4gIEBlYWNoICRkaXJlY3Rpb24gaW4gJGRpcmVjdGlvbnMge1xuICAgICRvcHBvc2l0ZS1kaXJlY3Rpb246IG1hcC1nZXQoJGRpcmVjdGlvbi1tYXAsICRkaXJlY3Rpb24pO1xuICAgICAgICBAaWYgJG9wcG9zaXRlLWRpcmVjdGlvbiAhPSBudWxsIHsgXG4gICAgICAkb3Bwb3NpdGUtZGlyZWN0aW9uczogYXBwZW5kKCRvcHBvc2l0ZS1kaXJlY3Rpb25zLCAjeyRvcHBvc2l0ZS1kaXJlY3Rpb259KTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgQHdhcm4gXCJObyBvcHBvc2l0ZSBkaXJlY3Rpb24gY2FuIGJlIGZvdW5kIGZvciBgI3skZGlyZWN0aW9ufWAuXCI7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkb3Bwb3NpdGUtZGlyZWN0aW9ucztcbn1cblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL3V0aWxzL19mdW5jdGlvbnMuc2NzcyIsIlxyXG4ubC1oZXJvIHtcclxuXHRoZWlnaHQ6IDEwMHZoO1xyXG5cdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcblx0YmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xyXG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzL2RlY29yL2JnL21vbnRhaW5zLmpwZycpO1xyXG5cdGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XHJcblx0XHRcclxuXHRcdCY6YmVmb3JlIHtcclxuXHRcdFx0Y29udGVudDogJyc7XHJcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0XHRAaW5jbHVkZSBhYnNvbHV0ZS1zdHJldGNoO1xyXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEsIDEwMiwgMTE0LCAwLjMpO1xyXG5cdFx0XHR6LWluZGV4OiAwO1xyXG5cdFx0fVxyXG5cclxuXHRAaW5jbHVkZSBjdXN0b20ge1xyXG5cdFx0bWluLWhlaWdodDogNjUwcHg7XHJcblx0fVxyXG5cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0YmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XHJcblx0fVxyXG59XHJcblxyXG4ubC1oZXJvX2Jsb2cge1xyXG5cdGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XHJcblxyXG5cdCY6YmVmb3JlIHtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0Y29udGVudDogJyc7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdGhlaWdodDogMyU7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjIzLCA4NywgMTAyKTtcclxuXHR9XHJcblxyXG5cdCY6YWZ0ZXIge1xyXG5cdFx0XHRjb250ZW50OiAnJztcclxuXHRcdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRcdEBpbmNsdWRlIGFic29sdXRlLXN0cmV0Y2g7XHJcblx0XHRcdHRvcDogMyU7XHJcblx0XHRcdGJhY2tncm91bmQtY29sb3I6IHJnYmEoMSwgMTAyLCAxMTQsIDAuMyk7XHJcblx0XHRcdHotaW5kZXg6IDA7XHJcblx0XHR9XHJcbn1cclxuXHJcbi5sLWhlcm9fX2RldmVsb3Age1xyXG5cdEBpbmNsdWRlIGFic29sdXRlLWNlbnRlcjtcclxuXHR6LWluZGV4OiAyO1xyXG59XHJcblxyXG4ubC1oZXJvX19kZXZlbG9wX2Jsb2cge1xyXG5cdGJvdHRvbTogMDtcclxuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNzklKTtcclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtaGVyby5zY3NzIiwiXHJcbi5sLWhlcm9fX3NvY2lhbCB7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHotaW5kZXg6IDE7XHJcblx0bGVmdDogMTAlO1xyXG5cdHRvcDogMTAlO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0d2lkdGg6IDEyJTtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiAyMCU7XHJcblx0fVxyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHR3aWR0aDogMzAlO1xyXG5cdH1cclxufVxyXG5cclxuLmwtaGVyb19fc29jaWFsLWl0ZW0ge1xyXG5cclxuXHRoZWlnaHQ6IHJlbSgyMik7XHJcbn1cclxuXHJcbi5sLWhlcm9fX3NvY2lhbC1saW5rIHtcclxuXHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdGhlaWdodDogMTAwJTtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHJcblx0Jjpob3ZlciAuc3ZnLXVzZSB7XHJcblxyXG5cdFx0b3BhY2l0eTogMTtcclxuXHR9XHJcbn1cclxuXHJcbi5zdmctdXNlIHtcclxuXHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMjgpLCByZW0oMjIpKTtcclxuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHM7XHJcblx0b3BhY2l0eTogMC41O1xyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2xheW91dC9fbC1oZXJvX19zb2NpYWwuc2NzcyIsIi5sLWNvbnRhaW5lciB7XHJcblx0d2lkdGg6IDk1JTtcclxuXHRoZWlnaHQ6IHJlbSgxNDdweCk7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRtYXJnaW46IGF1dG87XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRmbGV4LXdyYXA6IHdyYXA7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdGhlaWdodDogcmVtKDIzNik7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0aGVpZ2h0OiByZW0oMjcwKTtcclxuXHR9XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvbGF5b3V0L19sLWNvbnRhaW5lci5zY3NzIiwiXHJcbi5sLWhhbWJ1cmdlciB7XHJcblxyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDMlO1xyXG5cdHJpZ2h0OiAxMCU7XHJcblx0ei1pbmRleDogMTtcclxuXHQvL0BpbmNsdWRlIHNpemUocmVtKDMwKSwgcmVtKDI0KSk7XHJcbn1cclxuXHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9sYXlvdXQvX2wtaGFtYnVyZ2VyLnNjc3MiLCIubC1tYWluIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRkU5O1xyXG59XHJcblxyXG4ubC1tYWluX2Jsb2cge1xyXG5cdFxyXG59XHJcblxyXG4ubC1tYWluX190b3Age1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDA7XHJcblx0bGVmdDogMDtcclxuXHRyaWdodDogMDtcclxuXHR6LWluZGV4OiAwO1xyXG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxufVxyXG5cclxuLmwtbWFpbl9fdG9wX2Jsb2cge1xyXG5cdHRvcDogNTAlO1xyXG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNjAlKTtcclxufVxyXG5cclxuLmwtbWFpbl9fd3JhcHBlciB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0bWluLWhlaWdodDogMTAwJTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcclxuXHRAaW5jbHVkZSBjdXN0b20ge1xyXG5cdFx0XHR3aWR0aDogcmVtKDE4MDApO1xyXG5cdFx0XHRtYXJnaW46IGF1dG87XHJcblx0fVxyXG5cdCYubC1tYWluX193cmFwcGVyX2Rpc3BsYXktYmwge1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0fVxyXG59XHJcblxyXG4ubC1tYWluX19oZWFkZXIge1xyXG5cdEBpbmNsdWRlIHNpemUoMTAwJSwgcmVtKDE5NSkpO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsIDI0OCwgMjQwKTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHRcclxufVxyXG5cclxuLmwtbWFpbl9faGVhZGVyLXRpdGxlIHtcclxuXHR3aWR0aDogNDAlO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRjb2xvcjogJHRpdGxlLWNvbG9yO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0JiAuaC10aXRsZS1zZWN0aW9uIHtcclxuXHRcdCB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0fVxyXG5cdCY6OmZpcnN0LWxldHRlciB7XHJcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdH1cclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0d2lkdGg6IDQzJTtcclxuXHR9XHJcbn1cclxuXHJcbi5sLW1haW5fX3NsaWRlciB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0aGVpZ2h0OiA3NTBweDtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0aGVpZ2h0OiAxMDMwcHg7XHJcblx0fVxyXG59XHJcblxyXG4ubC1tYWluX19jb2x1bW4tb25lLCAubC1tYWluX19jb2x1bW4tdHdvIHtcclxuXHRmbGV4OiAxO1xyXG5cdHdpZHRoOiA1MCU7XHJcblx0bWluLWhlaWdodDogMTAwJTtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5sLW1haW5fX2NvbHVtbi1vbmUge1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNGMEVGRTk7XHJcbn1cclxuXHJcbi5sLW1haW5fX2NvbHVtbi10d28ge1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNFRkVCRTA7XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvbGF5b3V0L19sLW1haW4uc2NzcyIsIi5sLW1hcC1jb250YWluZXIge1xyXG5cdEBpbmNsdWRlIHNpemUoMTAwJSk7XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvbGF5b3V0L19sLW1hcC1jb250YWluZXIuc2NzcyIsIi5sLWNvbnRhY3RzIHtcclxuXHRmbGV4LWdyb3c6IDE7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvbGF5b3V0L19sLWNvbnRhY3RzLnNjc3MiLCIubC1mb290ZXIge1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0bWluLWhlaWdodDogcmVtKDE0N3B4KTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDU1LCA2MiwgNjYsMC44NSk7XHJcblx0cGFkZGluZzogMC41JSAwO1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHQmOmFmdGVyIHtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0Y29udGVudDogJyc7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdGhlaWdodDogMXB4O1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSgkcHJpbWFyeUNvbG9yLCAwLjEpO1xyXG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0bGVmdDogMDtcclxuXHRcdHRvcDogNTAlO1xyXG5cdH1cclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0bWluLWhlaWdodDogcmVtKDIzNik7XHJcblx0fVxyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHRtaW4taGVpZ2h0OiByZW0oMjcwKTtcclxuXHR9XHJcbn1cclxuXHJcbi5sLWZvb3Rlcl9fbmF2IHtcclxuXHR3aWR0aDogNTAlO1xyXG5cdGhlaWdodDogNTAlO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0d2lkdGg6IDgwJTtcclxuXHRcdGhlaWdodDogMjIlO1xyXG5cdFx0b3JkZXI6IDE7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR9XHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdHdpZHRoOiA5MCU7XHJcblx0fVxyXG59XHJcblxyXG4ubC1mb290ZXJfX3RleHQge1xyXG5cdHdpZHRoOiA1MCU7XHJcblx0aGVpZ2h0OiA1MCU7XHJcblx0Zm9udC1zaXplOiByZW0oMTcpO1xyXG5cdGZvbnQtd2VpZ2h0OiAzMDA7XHJcblx0Y29sb3I6IHJnYmEoJHByaW1hcnlDb2xvciwgMC41KTtcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdHRleHQtYWxpZ246IGxlZnQ7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdCYgYSB7XHJcblx0XHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuXHRcdGN1cnNvcjogcG9pbnRlcjtcclxuXHRcdG9wYWNpdHk6IDAuNTtcclxuXHR9XHJcblx0JiBhOmhvdmVyIHtcclxuXHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHR9XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiA4MCU7XHJcblx0XHRoZWlnaHQ6IDI4JTtcclxuXHRcdG9yZGVyOiAzO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0fVxyXG5cdEBpbmNsdWRlIG1vYmlsZSB7XHJcblx0XHR3aWR0aDogOTAlO1xyXG5cdH1cclxufVxyXG5cclxuLmwtZm9vdGVyX19zb2NpYWwge1xyXG5cdHdpZHRoOjUwJTtcclxuXHRoZWlnaHQ6IDUwJTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0d2lkdGg6IDgwJTtcclxuXHRcdGhlaWdodDogMjglO1xyXG5cdFx0b3JkZXI6IDI7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR9XHJcblx0QGluY2x1ZGUgbW9iaWxlIHtcclxuXHRcdHdpZHRoOiA5MCU7XHJcblx0fVxyXG59XHJcblxyXG4ubC1mb290ZXJfX3NvY2lhbC1pdGVtIHtcclxuXHRAaW5jbHVkZSBzaXplKDIuMXJlbSk7XHJcblx0Ym9yZGVyOiAwLjVweCBzb2xpZCByZ2JhKCRwcmltYXJ5Q29sb3IsIDAuNSk7XHJcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xyXG5cdG1hcmdpbi1yaWdodDogMiU7XHJcblx0dHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzO1xyXG5cdCY6aG92ZXIgIHtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6IHJnYmEoJHByaW1hcnlDb2xvciwgMC44NSk7XHJcblx0XHQubC1mb290ZXJfX3NvY2lhbC1saW5rIHtcclxuXHRcdFx0Y29sb3I6ICR0ZXh0LWNvbG9yO1xyXG5cdFx0fVxyXG5cdFx0JiAuc3ZnLXVzZSB7XHJcblx0XHRvcGFjaXR5OiAxO1xyXG5cdFx0fVx0XHRcclxuXHR9XHJcbn1cclxuXHJcbi5sLWZvb3Rlcl9fc29jaWFsLWxpbmsge1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRAaW5jbHVkZSBzaXplKDEwMCUpO1xyXG5cdGNvbG9yOiAkcHJpbWFyeUNvbG9yO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHR0cmFuc2l0aW9uOiBjb2xvciAwLjNzO1xyXG5cdCYgLnN2Zy11c2Uge1xyXG5cdFx0QGluY2x1ZGUgc2l6ZSgxLjJyZW0sIDEuNTVyZW0pO1xyXG5cdFx0b3BhY2l0eTogMC41O1xyXG5cdFx0dHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xyXG5cdH1cdFx0XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvbGF5b3V0L19sLWZvb3Rlci5zY3NzIiwiXHJcbi5jLWhhbWJ1cmdlci1uYXYge1xyXG5cdFxyXG5cdEBpbmNsdWRlIHNpemUocmVtKDM4KSwgcmVtKDMzKSk7XHJcbn1cclxuXHJcbi5jLWhhbWJ1cmdlci1uYXZfX3RhcmdldCB7XHJcblx0XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0QGluY2x1ZGUgc2l6ZSgxMDAlKTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jLWhhbWJ1cmdlci1uYXZfX2Zha2Uge1xyXG5cclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHRAaW5jbHVkZSBzaXplKHJlbSgzOCksIHJlbSg1KSk7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHRib3JkZXItcmFkaXVzOiAxNSU7XHJcblx0b3ZlcmZsb3c6IHZpc2libGU7XHJcblx0dHJhbnNpdGlvbjogMC4zcztcclxuXHJcblx0JjpiZWZvcmUge1xyXG5cclxuXHQgIGNvbnRlbnQ6IFwiXCI7XHJcblx0ICBkaXNwbGF5OiBibG9jaztcclxuXHQgIEBpbmNsdWRlIHNpemUocmVtKDM4KSwgcmVtKDUpKTtcclxuXHQgIGJvcmRlci1yYWRpdXM6IDE1JTtcclxuXHQgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0ICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0ICB0b3A6IDEwMCU7XHJcblx0ICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xyXG5cdCAgbGVmdDogMDtcclxuXHR9XHJcblxyXG5cdCY6YWZ0ZXIge1xyXG5cclxuXHQgIGNvbnRlbnQ6IFwiXCI7XHJcblx0ICBkaXNwbGF5OiBibG9jaztcclxuXHQgIEBpbmNsdWRlIHNpemUocmVtKDM4KSwgcmVtKDUpKTtcclxuXHQgIGJvcmRlci1yYWRpdXM6IDE1JTtcclxuXHQgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0ICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0ICBib3R0b206IDEwMCU7XHJcblx0ICBsZWZ0OiAwO1xyXG5cdCAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xyXG5cdH1cclxufVxyXG5cclxuLmMtaGFtYnVyZ2VyLW5hdl9fbGlzdCB7XHJcblxyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uYy1oYW1idXJnZXItbmF2X19pdGVtIHtcclxuXHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHRmb250LXNpemU6IHJlbSgyNCk7XHJcblx0Zm9udC13ZWlnaHQ6IDQwMDtcclxuXHJcblx0JjpiZWZvcmUge1xyXG5cclxuXHRcdGNvbnRlbnQ6IFwiXCI7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdEBpbmNsdWRlIHNpemUocmVtKDUpKTtcclxuXHRcdGJvcmRlci1yYWRpdXM6IDUwJTtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0XHRtYXJnaW46IHJlbSgxNSk7XHJcblx0fVxyXG5cclxuXHQmOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcblx0XHRcclxuXHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0fVxyXG59XHJcbi5jLWhhbWJ1cmdlci1uYXZfX2xpbmsge1xyXG5cclxuXHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvY29tcG9uZW50cy9fYy1oYW1idXJnZXItbmF2LnNjc3MiLCIuYy1kZXZlbG9wZXIge1xyXG5cdHdpZHRoOiByZW0oMzgwKTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19pbWctd3JhcCB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMTQxKSk7XHJcblx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuXHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcblx0YmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdG1hcmdpbi1ib3R0b206IDQlO1xyXG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19pbWcge1xyXG5cdG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19jb250ZW50IHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jLWRldmVsb3BfYmxvZy1oZWFkZXIge1xyXG5cdGNvbG9yOiAkcHJpbWFyeUNvbG9yO1xyXG59XHJcblxyXG4uYy1kZXZlbG9wZXJfX2hlYWRlciB7XHJcblxyXG5cdGZvbnQtc2l6ZTogcmVtKDM1KTtcclxuXHRmb250LXdlaWdodDogNTAwO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjU7XHJcblx0bWFyZ2luLWJvdHRvbTogMC4zJTtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxufVxyXG5cclxuLmMtZGV2ZWxvcGVyX19kZXNjIHtcclxuXHRmb250LXNpemU6IHJlbSgxNik7XHJcblx0Y29sb3I6IHJnYmEoJHByaW1hcnlDb2xvciwgMC44KTtcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdGZvbnQtd2VpZ2h0OiAzMDA7XHJcbn1cclxuXHJcbi5jLWRldmVsb3Blcl9fZGVzY19ibG9nIHtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR3aWR0aDogMTAwJTtcclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19jLWRldmVsb3Blci5zY3NzIiwiLmMtbmV4dCB7XHJcblxyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdEBpbmNsdWRlIHNpemUocmVtKDI4KSwgcmVtKDE4KSk7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdGJvdHRvbTogMTUlO1xyXG5cdGxlZnQ6IDUwJTtcclxuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcblx0ei1pbmRleDogMjtcclxuXHR0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcztcclxuXHR3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xyXG5cclxuXHQmOmhvdmVyIHtcclxuXHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgc2NhbGUoMS4yKTtcclxuXHRcdC5zdmdfbmV4dCB7XHJcblx0XHRcdG9wYWNpdHk6IDE7XHJcblx0XHR9XHJcblx0fVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2MtbmV4dC5zY3NzIiwiXHJcbi5zdmdfaGVybyB7XHJcblx0b3BhY2l0eTogMC4wNjtcclxuXHRAaW5jbHVkZSBzaXplKDEwMCUsIDM3JSk7XHJcblx0QGluY2x1ZGUgYWJzb2x1dGUtY2VudGVyO1xyXG5cdGZpbGw6ICRwcmltYXJ5Q29sb3I7XHJcblx0ei1pbmRleDogMTtcclxufVxyXG5cclxuLnN2Z19uZXh0IHtcclxuXHRvcGFjaXR5OiAwLjc7XHJcblx0QGluY2x1ZGUgc2l6ZSgxMDAlKTtcclxuXHRmaWxsOiAkcHJpbWFyeUNvbG9yO1xyXG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxufVxyXG5cclxuLnN2Z19kYXNoIHtcclxuXHRAaW5jbHVkZSBzaXplKDEuNnJlbSwgMC44cmVtKTtcclxuXHRvcGFjaXR5OiAwLjI1O1xyXG5cdGZpbGw6IGN1cnJlbnRDb2xvcjtcclxuXHRzdHJva2U6IGN1cnJlbnRDb2xvcjtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLnN2Zy1tYWluLXRvcF90d28tY29sb3Ige1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdGhlaWdodDogMjByZW07XHJcbn1cclxuXHJcbi5zdmdfbWFpbi10b3Bfb25lLWNvbG9yIHtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRoZWlnaHQ6IDIwcmVtO1xyXG5cdGNvbG9yOiByZ2IoMjUwLCAyNDgsIDI0MCk7XHJcbn1cclxuXHJcbi5zdmctbWFpbi1pY29uIHtcclxuXHRvcGFjaXR5OiAwLjA3O1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDA7XHJcblx0bGVmdDogNTAlO1xyXG5cdHJpZ2h0OiAwO1xyXG5cdGJvdHRvbTogMDtcclxuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtMjUlKTtcclxuXHR6LWluZGV4OiAwO1xyXG59XHJcbi5zdmctbWFpbi1pY29uX2Fib3V0IHtcclxuXHR3aWR0aDogODAlO1xyXG59XHJcblxyXG4uc3ZnLW1haW4taWNvbl93b3JrcyB7XHJcblx0d2lkdGg6IDEzNCU7XHJcblx0aGVpZ2h0OiByZW0oMTk0KTtcclxuXHRAaW5jbHVkZSB0YWJsZXQge1xyXG5cdFx0aGVpZ2h0OiA4LjEyNXJlbTtcclxuXHR9XHJcbn1cclxuXHJcbi5zdmdfc2t5cGUsIC5zdmdfbWFpbCwgLnN2Z19waG9uZSwgLnN2Z19tYXAtbWFya2VyIHtcclxuXHRjb2xvcjogJGJyYW5kLWNvbG9yO1xyXG5cdGZsZXgtYmFzaXM6IDIwJTtcclxuXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7XHJcblx0Jjpob3ZlciB7XHJcblx0XHRvcGFjaXR5OiAwLjc7XHJcblx0fVxyXG59XHJcblxyXG4uc3ZnX3NreXBlIHtcclxuXHRAaW5jbHVkZSBzaXplKHJlbSgyNCksIHJlbSgyNCkpO1xyXG59XHJcbi5zdmdfbWFpbCB7XHJcblx0QGluY2x1ZGUgc2l6ZSgyLjVyZW0sIDEuNzVyZW0pO1xyXG59XHJcbi5zdmdfcGhvbmUge1xyXG5cdEBpbmNsdWRlIHNpemUocmVtKDIwKSwgcmVtKDE5KSk7XHJcblxyXG59XHJcbi5zdmdfbWFwLW1hcmtlciB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMTkpLCByZW0oMjQpKTtcclxufVxyXG4uc3ZnX2xvZ2luIHtcclxuXHRAaW5jbHVkZSBzaXplKHJlbSgxNSksIHJlbSgxNykpO1xyXG5cdCBjb2xvcjogcmdiKDE5NiwgMjAzLCAyMDUpO1xyXG59XHJcbi5zdmdfbGluayB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oMjApLCByZW0oMTkpKTtcclxuXHRtYXJnaW4tcmlnaHQ6IHJlbSg4KTtcclxufVxyXG4uc3ZnX3NsaWRlci1hcnJvdyB7XHJcblx0QGluY2x1ZGUgc2l6ZShyZW0oNDUpLCByZW0oMjgpKTtcclxuXHRib3gtc2hhZG93OiAwcHggMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNik7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0b3BhY2l0eTogMC43O1xyXG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19zdmcuc2NzcyIsIi5oLXRpdGxlLXNlY3Rpb24ge1xyXG5cdGZvbnQtZmFtaWx5OiAnYmVybmllcic7XHJcblx0Zm9udC1zaXplOiByZW0oNjMpO1xyXG5cdGxldHRlci1zcGFjaW5nOiAwLjJyZW07XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcblx0bWFyZ2luOiAwIDIuNSU7XHJcblx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHRmb250LXdlaWdodDogNTAwO1xyXG5cdGNvbG9yOiAkdGl0bGUtY29sb3I7XHJcblxyXG5cdCY6Zmlyc3QtbGV0dGVyIHtcclxuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0fVxyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHRmb250LXNpemU6IHJlbSg0OSk7XHJcblx0fVxyXG59XHJcblxyXG4uaC10aXRsZS1zZWN0aW9uX2NvbG9yIHtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxufVxyXG5cclxuLmgtdGl0bGUtYXJ0aWNsZSB7XHJcblx0Zm9udC1mYW1pbHk6ICdiZXJuaWVyJztcclxuXHRmb250LXNpemU6IHJlbSgzNSk7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcblx0bWFyZ2luOiAwIDIuNSU7XHJcblx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHRmb250LXdlaWdodDogNTAwO1xyXG5cdGNvbG9yOiAkdGV4dC1jb2xvcjtcclxuXHJcblx0JjpmaXJzdC1sZXR0ZXIge1xyXG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHR9XHJcblxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2gtdGl0bGUuc2NzcyIsIi5jLW5hdl9fbGlzdCB7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHR3aWR0aDogODAlO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5jLW5hdl9faXRlbSB7XHJcblx0ZmxleC1ncm93OiAxO1xyXG59XHJcblxyXG4uYy1uYXZfX2xpbmsge1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRmb250LXNpemU6IChyZW0oMTcpKTtcclxuXHRsaW5lLWhlaWdodDogMS41O1xyXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHR0cmFuc2l0aW9uOiBjb2xvciAwLjRzO1xyXG5cdCY6OmZpcnN0LWxldHRlciB7XHJcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdH1cclxuXHQmOmhvdmVyIHtcclxuXHRcdGNvbG9yOiAkYnJhbmQtY29sb3I7XHJcblx0fVxyXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2MtbmF2LnNjc3MiLCIuYy1jb3B5IHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0JiBhIHtcclxuXHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdH1cclxuXHQmIGE6aG92ZXIge1xyXG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0ZmxleC13cmFwOiB3cmFwO1xyXG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdH1cclxufVxyXG5cclxuLmMtY29weV9pdGVtIHtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0Zm9udC13ZWlnaHQ6IDMwMDtcclxuXHRmb250LXNpemU6IHJlbSgxNik7XHJcblx0bGluZS1oZWlnaHQ6IDYuMjg7XHJcblx0XHJcblx0JjphZnRlciB7XHJcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0XHRjb250ZW50OiAnfCc7XHJcblx0XHRtYXJnaW46IDAgMC4zcmVtO1xyXG5cdFx0Zm9udC1zaXplOiByZW0oMTYpO1xyXG5cdFx0Zm9udC13ZWlnaHQ6IDMwMDtcclxuXHR9XHJcblx0JjpsYXN0LWNoaWxkOmFmdGVyIHtcclxuXHRcdGRpc3BsYXk6IG5vbmU7XHJcblx0fVxyXG5cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHRcdCY6Zmlyc3QtY2hpbGQge1xyXG5cdFx0XHR3aWR0aDogMTAwJTtcclxuXHRcdH1cclxuXHRcdCY6Zmlyc3QtY2hpbGQ6YWZ0ZXIge1xyXG5cdFx0XHRkaXNwbGF5OiBub25lO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4uYy1jb3B5X2Zvb3RlciB7XHJcblx0d2lkdGg6IDUwJTtcclxuXHRoZWlnaHQ6IDUwJTtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogODAlO1xyXG5cdFx0aGVpZ2h0OiAyMiU7XHJcblx0XHRvcmRlcjogNDtcclxuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdH1cclxuXHRAaW5jbHVkZSBtb2JpbGUge1xyXG5cdFx0d2lkdGg6IDkwJTtcclxuXHR9XHJcblx0JiAuYy1jb3B5X2l0ZW0ge1xyXG5cdFx0Y29sb3I6IHJnYmEoJHByaW1hcnlDb2xvciwgMC41KTtcclxuXHR9XHJcblx0JiBhIHtcclxuXHRcdG9wYWNpdHk6IDAuNTtcclxuXHR9XHJcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL3NyYy9hc3NldHMvc3R5bGVzL0M6L1VzZXJzL1l1bGl5YS93ZWJwcm9qZWN0cy9wb3J0Zm9saW8vc3JjL2Fzc2V0cy9zdHlsZXMvY29tcG9uZW50cy9fYy1jb3B5LnNjc3MiLCJcclxuLmMtYnV0dG9uIHtcclxuXHJcblx0bWluLXdpZHRoOiByZW0oNTApO1xyXG5cdG1pbi1oZWlnaHQ6IHJlbSg0NSk7XHJcblx0Zm9udC1zaXplOiByZW0oMTYpO1xyXG5cdHBhZGRpbmc6IDAgcmVtKDI4KTtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuXHRib3JkZXI6IDFweCBzb2xpZCAkcHJpbWFyeUNvbG9yO1xyXG5cdHRyYW5zaXRpb246ICBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRib3JkZXItcmFkaXVzOiByZW0oNSk7XHJcblx0b3V0bGluZTogbm9uZTtcclxuXHJcblx0Jjpob3ZlciB7XHJcblx0XHRcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0XHRjdXJzb3I6IHBvaW50ZXI7XHJcblx0fVxyXG5cdCY6aG92ZXIgLmMtYnV0dG9uX190ZXh0IHtcclxuXHJcblx0XHRjb2xvcjogJGJyYW5kLWNvbG9yO1xyXG5cdH1cclxufVxyXG5cclxuLmMtYnV0dG9uX190ZXh0IHtcclxuXHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRsaW5lLWhlaWdodDogcmVtKDQ1KTtcclxuXHRmb250LXdlaWdodDogNTAwO1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG5cdGNvbG9yOiAkcHJpbWFyeUNvbG9yO1xyXG5cdHRyYW5zaXRpb246IGNvbG9yIDAuMnM7XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXNzZXRzL3N0eWxlcy9zcmMvYXNzZXRzL3N0eWxlcy9DOi9Vc2Vycy9ZdWxpeWEvd2VicHJvamVjdHMvcG9ydGZvbGlvL3NyYy9hc3NldHMvc3R5bGVzL2NvbXBvbmVudHMvX2MtYnV0dG9uLnNjc3MiLCIuYy1zbGlkZXIge1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRmbGV4LXdyYXA6IHdyYXA7XHJcblx0QGluY2x1ZGUgc2l6ZSgxMDAlKTtcclxufVxyXG5cclxuLmMtc2xpZGVyX19kZXNjLWZyIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRkU5O1xyXG5cdGhlaWdodDogMTAwJTtcclxuXHR3aWR0aDogNTAlO1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdGhlaWdodDogMjclO1xyXG5cdFx0b3JkZXI6IDI7XHJcblx0fVxyXG59XHJcblxyXG4uYy1zbGlkZXJfX21haW4tZnIge1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNFRkVCRTA7XHJcblx0d2lkdGg6IDUwJTtcclxuXHRoZWlnaHQ6IDcwJTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0b3JkZXI6IDE7XHJcblx0XHRoZWlnaHQ6IDUxJTtcclxuXHR9XHJcbn1cclxuXHJcbi5jLXNsaWRlcl9fY29udHJvbC1mciB7XHJcblx0d2lkdGg6IDUwJTtcclxuXHRoZWlnaHQ6IDMwJTtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdG9yZGVyOiAzO1xyXG5cdFx0aGVpZ2h0OiAyMiU7XHJcblx0fVxyXG59XHJcblxyXG4uYy1zbGlkZXJfX2Rlc2MtaGVhZGVyIHtcclxuXHRjb2xvcjogJHRpdGxlLWNvbG9yO1xyXG5cdHdpZHRoOiA2NSU7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblx0YWxpZ24taXRlbXM6IGJhc2VsaW5lO1xyXG5cdCYgLnN2Z19kYXNoIHtcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuXHR9XHJcblxyXG5cdCYgLmgtdGl0bGUtYXJ0aWNsZSB7XHJcblx0XHQgbGluZS1oZWlnaHQ6IDEuMTc7XHJcblx0XHQgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdFx0IGZvbnQtd2VpZ2h0OiA0MDA7XHJcblx0fVxyXG5cdG1hcmdpbi1ib3R0b206IDUlO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogNjglO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMiU7XHJcblx0fVxyXG59XHJcblxyXG4uYy1zbGlkZXJfX2Rlc2MtdGV4dCB7XHJcblx0QGluY2x1ZGUgc2l6ZSg4MCUsIHJlbSg2MCkpXHJcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHRjb2xvcjogcmdiKDMyLCAxODEsIDE2MSk7XHJcblx0Zm9udC13ZWlnaHQ6IDUwMDtcclxuXHRib3JkZXItdG9wOiAycHggc29saWQgcmdiYSgwLCAxNTAsIDEzNiwgMC4zKTtcclxuXHRib3JkZXItYm90dG9tOiAycHggc29saWQgcmdiYSgwLCAxNTAsIDEzNiwgMC4zKTtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0bGluZS1oZWlnaHQ6IHJlbSg2MCk7XHJcblx0bWFyZ2luLWJvdHRvbTogNSU7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiA1MCU7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAyJTtcclxuXHR9XHJcbn1cclxuXHJcbi5jLXNsaWRlcl9fZGVzYy1saW5rIHtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkYnJhbmQtY29sb3I7XHJcblx0Y29sb3I6ICRwcmltYXJ5Q29sb3I7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcclxuXHRib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHQmOmhvdmVyIHtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6ICMwMDk2ODg7XHJcblx0XHQuYy1idXR0b25fX3RleHQge1xyXG5cdFx0XHRjb2xvcjogJHByaW1hcnlDb2xvcjtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi5jLXNsaWRlcl9fbWFpbi1pbWcge1xyXG5cdG1heC13aWR0aDogOTAlO1xyXG5cdG1heC1oZWlnaHQ6IDgwJTtcclxuXHR3aWR0aDogNjAlO1xyXG5cdGhlaWdodDogYXV0bztcclxuXHQtd2Via2l0LWJveC1zaGFkb3c6IDRweCAxOHB4IDIycHggLTE1cHggcmdiYSgwLDAsMCwwLjg3KTtcclxuXHQtbW96LWJveC1zaGFkb3c6IDRweCAxOHB4IDIycHggLTE1cHggcmdiYSgwLDAsMCwwLjg3KTtcclxuXHRib3gtc2hhZG93OiA0cHggMThweCAyMnB4IC0xNXB4IHJnYmEoMCwwLDAsMC44Nyk7XHJcblx0QGluY2x1ZGUgdGFibGV0IHtcclxuXHRcdHdpZHRoOiA0NSU7XHJcblx0fVxyXG59XHJcblxyXG4uYy1zbGlkZXJfX2NvbnRyb2wtcHJldiB7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0d2lkdGg6IDUwJTtcclxuXHRoZWlnaHQ6IDEwMCU7XHJcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHQmOmFmdGVyIHtcclxuXHRcdGNvbnRlbnQ6ICcnO1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRAaW5jbHVkZSBhYnNvbHV0ZS1zdHJldGNoO1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSgxODIsIDE4MCwgMTc0LCAwLjcpO1xyXG5cdFx0ei1pbmRleDogMDtcclxuXHR9XHJcbn1cclxuXHJcbi5jLXNsaWRlcl9fY29udHJvbC1uZXh0IHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHR3aWR0aDogNTAlO1xyXG5cdGhlaWdodDogMTAwJTtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdCY6YWZ0ZXIge1xyXG5cdFx0Y29udGVudDogJyc7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdEBpbmNsdWRlIGFic29sdXRlLXN0cmV0Y2g7XHJcblx0XHQgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTM2LCAxMzEsIDExNCwgMC41KTtcclxuXHRcdCB6LWluZGV4OiAwO1xyXG5cdH1cclxufVxyXG4uYy1zbGlkZXJfX2NvbnRyb2wtaW1nIHtcclxuXHRtYXgtd2lkdGg6IDkwJTtcclxuXHRtYXgtaGVpZ2h0OiA5MCU7XHJcblx0d2lkdGg6IDY2JTtcclxuXHRoZWlnaHQ6IGF1dG87XHJcblx0LXdlYmtpdC1ib3gtc2hhZG93OiA0cHggMThweCAyMnB4IC0xNXB4IHJnYmEoMCwwLDAsMC44Nyk7XHJcblx0LW1vei1ib3gtc2hhZG93OiA0cHggMThweCAyMnB4IC0xNXB4IHJnYmEoMCwwLDAsMC44Nyk7XHJcblx0Ym94LXNoYWRvdzogNHB4IDE4cHggMjJweCAtMTVweCByZ2JhKDAsMCwwLDAuODcpO1xyXG5cdEBpbmNsdWRlIHRhYmxldCB7XHJcblx0XHR3aWR0aDogNDUlO1xyXG5cdH1cclxufVxyXG4uYy1zbGlkZXJfX2NvbnRyb2xfX2xpbmsge1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdEBpbmNsdWRlIHNpemUocmVtKDQ1KSwgcmVtKDI4KSk7XHJcblx0QGluY2x1ZGUgYWJzb2x1dGUtY2VudGVyO1xyXG5cdHotaW5kZXg6IDE7XHJcblx0Jjpob3ZlciAuc3ZnX3NsaWRlci1hcnJvdyB7XHJcblx0XHRvcGFjaXR5OiAxO1xyXG5cdH1cclxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Fzc2V0cy9zdHlsZXMvc3JjL2Fzc2V0cy9zdHlsZXMvQzovVXNlcnMvWXVsaXlhL3dlYnByb2plY3RzL3BvcnRmb2xpby9zcmMvYXNzZXRzL3N0eWxlcy9jb21wb25lbnRzL19jLXNsaWRlci5zY3NzIiwiLyohIEdlbmVyYXRlZCBieSBGb250IFNxdWlycmVsIChodHRwczovL3d3dy5mb250c3F1aXJyZWwuY29tKSBvbiBNYXJjaCA4LCAyMDE4ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdiZXJuaWVyX2Rpc3RyZXNzZWQnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2Jlcm5pZXIvYmVybmllcmRpc3RyZXNzZWQtcmVndWxhci13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJkaXN0cmVzc2VkLXJlZ3VsYXItd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdiZXJuaWVyJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJyZWd1bGFyLXJlZ3VsYXItd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvYmVybmllci9iZXJuaWVycmVndWxhci1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnYmVybmllcl9zaGFkZSc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvYmVybmllci9iZXJuaWVyc2hhZGUtcmVndWxhci13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9iZXJuaWVyL2Jlcm5pZXJzaGFkZS1yZWd1bGFyLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWJvbGQtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvcm9ib3RvL3JvYm90by1ib2xkLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogOTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWJvbGRpdGFsaWMtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvcm9ib3RvL3JvYm90by1ib2xkaXRhbGljLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogOTAwO1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWl0YWxpYy13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWl0YWxpYy13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ3JvYm90byc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvcm9ib3RvL3JvYm90by1saWdodC13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0LXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLWxpZ2h0aXRhbGljLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbGlnaHRpdGFsaWMtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdyb2JvdG8nO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbWVkaXVtLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL3JvYm90by9yb2JvdG8tbWVkaXVtLXdlYmZvbnQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncm9ib3RvJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLW1lZGl1bWl0YWxpYy13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9yb2JvdG8vcm9ib3RvLW1lZGl1bWl0YWxpYy13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ3JvYm90byc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvcm9ib3RvL3JvYm90by1yZWd1bGFyLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL3JvYm90by9yb2JvdG8tcmVndWxhci13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbi8qKlxuICogU2V0IHVwIGEgZGVjZW50IGJveCBtb2RlbCBvbiB0aGUgcm9vdCBlbGVtZW50XG4gKi9cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmJvZHksIGh0bWwge1xuICBjb2xvcjogIzQ1NWE2NDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWRlZDtcbiAgZm9udC1mYW1pbHk6IFwicm9ib3RvXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMS40MjVyZW07XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIGZvbnQtZGlzcGxheTogb3B0aW9uYWw7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxODAwcHgpIHtcbiAgICBib2R5LCBodG1sIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNjksIDkwLCAxMDAsIDAuMyk7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCkgYW5kIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgYm9keSwgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDE1cHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIGJvZHksIGh0bWwge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBib2R5LCBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3NXB4KSB7XG4gICAgYm9keSwgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuXG5ib2R5Lmhlcm8sIGh0bWwuaGVybyB7XG4gIGhlaWdodDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKipcbiAqIE1ha2UgYWxsIGVsZW1lbnRzIGZyb20gdGhlIERPTSBpbmhlcml0IGZyb20gdGhlIHBhcmVudCBib3gtc2l6aW5nXG4gKiBTaW5jZSBgKmAgaGFzIGEgc3BlY2lmaWNpdHkgb2YgMCwgaXQgZG9lcyBub3Qgb3ZlcnJpZGUgdGhlIGBodG1sYCB2YWx1ZVxuICogbWFraW5nIGFsbCBlbGVtZW50cyBpbmhlcml0aW5nIGZyb20gdGhlIHJvb3QgYm94LXNpemluZyB2YWx1ZVxuICogU2VlOiBodHRwczovL2Nzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZS9cbiAqL1xuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0OyB9XG5cbi8qKlxuICogQmFzaWMgc3R5bGVzIGZvciBsaW5rc1xuICovXG5hIHtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxudWwge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxudWwgbGkge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbmgxLCBoMiwgaDMsIHAge1xuICBtYXJnaW46IDA7IH1cblxuc3ZnIHtcbiAgZmlsbDogY3VycmVudENvbG9yO1xuICBzdHJva2U6IGN1cnJlbnRDb2xvcjsgfVxuXG5idXR0b24sIGlucHV0LCBzZWxlY3QsIHRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IFwicm9ib3RvXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjsgfVxuXG4vKipcbiAqIENsZWFyIGlubmVyIGZsb2F0c1xuICovXG4uY2xlYXJmaXg6OmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7XG4gIGNvbnRlbnQ6ICcnO1xuICBkaXNwbGF5OiB0YWJsZTsgfVxuXG4vKipcbiAqIE1haW4gY29udGVudCBjb250YWluZXJzXG4gKiAxLiBNYWtlIHRoZSBjb250YWluZXIgZnVsbC13aWR0aCB3aXRoIGEgbWF4aW11bSB3aWR0aFxuICogMi4gQ2VudGVyIGl0IGluIHRoZSB2aWV3cG9ydFxuICogMy4gTGVhdmUgc29tZSBzcGFjZSBvbiB0aGUgZWRnZXMsIGVzcGVjaWFsbHkgdmFsdWFibGUgb24gc21hbGwgc2NyZWVuc1xuICovXG4vKipcbiAqIEhpZGUgdGV4dCB3aGlsZSBtYWtpbmcgaXQgcmVhZGFibGUgZm9yIHNjcmVlbiByZWFkZXJzXG4gKiAxLiBOZWVkZWQgaW4gV2ViS2l0LWJhc2VkIGJyb3dzZXJzIGJlY2F1c2Ugb2YgYW4gaW1wbGVtZW50YXRpb24gYnVnO1xuICogICAgU2VlOiBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDU3MTQ2XG4gKi9cbi5oaWRlLXRleHQge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICAvKiAxICovXG4gIHRleHQtaW5kZW50OiAxMDElO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEhpZGUgZWxlbWVudCB3aGlsZSBtYWtpbmcgaXQgcmVhZGFibGUgZm9yIHNjcmVlbiByZWFkZXJzXG4gKiBTaGFtZWxlc3NseSBib3Jyb3dlZCBmcm9tIEhUTUw1Qm9pbGVycGxhdGU6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vaDVicC9odG1sNS1ib2lsZXJwbGF0ZS9ibG9iL21hc3Rlci9zcmMvY3NzL21haW4uY3NzI0wxMTktTDEzM1xuICovXG4udmlzdWFsbHktaGlkZGVuIHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBoZWlnaHQ6IDFweDtcbiAgLyogbWFyZ2luOiAtMXB4OyovXG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDsgfVxuXG4ubC13cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTMwMXB4KSB7XG4gICAgLmwtd3JhcHBlciB7XG4gICAgICBtaW4taGVpZ2h0OiA2NTBweDsgfSB9XG5cbi5sLXNlY3Rpb24ge1xuICB3aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogNjI4cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMzAxcHgpIHtcbiAgICAubC1zZWN0aW9uIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDY1MHB4O1xuICAgICAgd2lkdGg6IDExMi41cmVtO1xuICAgICAgbWFyZ2luOiBhdXRvOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubC1zZWN0aW9uIHtcbiAgICAgIG1pbi1oZWlnaHQ6IDEwMHZoOyB9IH1cblxuLmwtbGFzdCB7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4ubC1sYXlvdXQtZmlyc3Qge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4ubC1oZXJvIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL2RlY29yL2JnL21vbnRhaW5zLmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDsgfVxuICAubC1oZXJvOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEsIDEwMiwgMTE0LCAwLjMpO1xuICAgIHotaW5kZXg6IDA7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTMwMXB4KSB7XG4gICAgLmwtaGVybyB7XG4gICAgICBtaW4taGVpZ2h0OiA2NTBweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmwtaGVybyB7XG4gICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDsgfSB9XG5cbi5sLWhlcm9fYmxvZyB7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7IH1cbiAgLmwtaGVyb19ibG9nOmJlZm9yZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAzJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGY1NzY2OyB9XG4gIC5sLWhlcm9fYmxvZzphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICB0b3A6IDMlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMSwgMTAyLCAxMTQsIDAuMyk7XG4gICAgei1pbmRleDogMDsgfVxuXG4ubC1oZXJvX19kZXZlbG9wIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB6LWluZGV4OiAyOyB9XG5cbi5sLWhlcm9fX2RldmVsb3BfYmxvZyB7XG4gIGJvdHRvbTogMDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNzklKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNzklKTsgfVxuXG4ubC1oZXJvX19zb2NpYWwge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGxlZnQ6IDEwJTtcbiAgdG9wOiAxMCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAxMiU7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubC1oZXJvX19zb2NpYWwge1xuICAgICAgd2lkdGg6IDIwJTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmwtaGVyb19fc29jaWFsIHtcbiAgICAgIHdpZHRoOiAzMCU7IH0gfVxuXG4ubC1oZXJvX19zb2NpYWwtaXRlbSB7XG4gIGhlaWdodDogMS4zNzVyZW07IH1cblxuLmwtaGVyb19fc29jaWFsLWxpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgY29sb3I6IHdoaXRlOyB9XG4gIC5sLWhlcm9fX3NvY2lhbC1saW5rOmhvdmVyIC5zdmctdXNlIHtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi5zdmctdXNlIHtcbiAgd2lkdGg6IDEuNzVyZW07XG4gIGhlaWdodDogMS4zNzVyZW07XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cztcbiAgb3BhY2l0eTogMC41OyB9XG5cbi5sLWNvbnRhaW5lciB7XG4gIHdpZHRoOiA5NSU7XG4gIGhlaWdodDogOS4xODc1cmVtO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW46IGF1dG87XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtZmxleC13cmFwOiB3cmFwO1xuICAgICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubC1jb250YWluZXIge1xuICAgICAgaGVpZ2h0OiAxNC43NXJlbTtcbiAgICAgIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAubC1jb250YWluZXIge1xuICAgICAgaGVpZ2h0OiAxNi44NzVyZW07IH0gfVxuXG4ubC1oYW1idXJnZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMyU7XG4gIHJpZ2h0OiAxMCU7XG4gIHotaW5kZXg6IDE7IH1cblxuLmwtbWFpbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRkU5OyB9XG5cbi5sLW1haW5fX3RvcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHotaW5kZXg6IDA7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfVxuXG4ubC1tYWluX190b3BfYmxvZyB7XG4gIHRvcDogNTAlO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNjAlKTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTYwJSk7IH1cblxuLmwtbWFpbl9fd3JhcHBlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBiYXNlbGluZTtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBiYXNlbGluZTtcbiAgICAgICAgICBhbGlnbi1pdGVtczogYmFzZWxpbmU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTMwMXB4KSB7XG4gICAgLmwtbWFpbl9fd3JhcHBlciB7XG4gICAgICB3aWR0aDogMTEyLjVyZW07XG4gICAgICBtYXJnaW46IGF1dG87IH0gfVxuICAubC1tYWluX193cmFwcGVyLmwtbWFpbl9fd3JhcHBlcl9kaXNwbGF5LWJsIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4ubC1tYWluX19oZWFkZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMi4xODc1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmOGYwO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLmwtbWFpbl9faGVhZGVyLXRpdGxlIHtcbiAgd2lkdGg6IDQwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjb2xvcjogIzM3M2U0MjtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5sLW1haW5fX2hlYWRlci10aXRsZSAuaC10aXRsZS1zZWN0aW9uIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmwtbWFpbl9faGVhZGVyLXRpdGxlOjpmaXJzdC1sZXR0ZXIge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubC1tYWluX19oZWFkZXItdGl0bGUge1xuICAgICAgd2lkdGg6IDQzJTsgfSB9XG5cbi5sLW1haW5fX3NsaWRlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDc1MHB4O1xuICBkaXNwbGF5OiBibG9jazsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLW1haW5fX3NsaWRlciB7XG4gICAgICBoZWlnaHQ6IDEwMzBweDsgfSB9XG5cbi5sLW1haW5fX2NvbHVtbi1vbmUsIC5sLW1haW5fX2NvbHVtbi10d28ge1xuICAtd2Via2l0LWZsZXg6IDE7XG4gICAgICAtbXMtZmxleDogMTtcbiAgICAgICAgICBmbGV4OiAxO1xuICB3aWR0aDogNTAlO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmwtbWFpbl9fY29sdW1uLW9uZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGMEVGRTk7IH1cblxuLmwtbWFpbl9fY29sdW1uLXR3byB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRkVCRTA7IH1cblxuLmwtbWFwLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuLmwtY29udGFjdHMge1xuICAtd2Via2l0LWZsZXgtZ3JvdzogMTtcbiAgICAgIC1tcy1mbGV4LXBvc2l0aXZlOiAxO1xuICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5sLWZvb3RlciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1pbi1oZWlnaHQ6IDkuMTg3NXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1NSwgNjIsIDY2LCAwLjg1KTtcbiAgcGFkZGluZzogMC41JSAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmwtZm9vdGVyOmFmdGVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiA1MCU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubC1mb290ZXIge1xuICAgICAgbWluLWhlaWdodDogMTQuNzVyZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5sLWZvb3RlciB7XG4gICAgICBtaW4taGVpZ2h0OiAxNi44NzVyZW07IH0gfVxuXG4ubC1mb290ZXJfX25hdiB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogNTAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubC1mb290ZXJfX25hdiB7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgaGVpZ2h0OiAyMiU7XG4gICAgICAtd2Via2l0LW9yZGVyOiAxO1xuICAgICAgICAgIC1tcy1mbGV4LW9yZGVyOiAxO1xuICAgICAgICAgICAgICBvcmRlcjogMTtcbiAgICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmwtZm9vdGVyX19uYXYge1xuICAgICAgd2lkdGg6IDkwJTsgfSB9XG5cbi5sLWZvb3Rlcl9fdGV4dCB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogNTAlO1xuICBmb250LXNpemU6IDEuMDYyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5sLWZvb3Rlcl9fdGV4dCBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgb3BhY2l0eTogMC41OyB9XG4gIC5sLWZvb3Rlcl9fdGV4dCBhOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubC1mb290ZXJfX3RleHQge1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIGhlaWdodDogMjglO1xuICAgICAgLXdlYmtpdC1vcmRlcjogMztcbiAgICAgICAgICAtbXMtZmxleC1vcmRlcjogMztcbiAgICAgICAgICAgICAgb3JkZXI6IDM7XG4gICAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIC5sLWZvb3Rlcl9fdGV4dCB7XG4gICAgICB3aWR0aDogOTAlOyB9IH1cblxuLmwtZm9vdGVyX19zb2NpYWwge1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDUwJTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5sLWZvb3Rlcl9fc29jaWFsIHtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBoZWlnaHQ6IDI4JTtcbiAgICAgIC13ZWJraXQtb3JkZXI6IDI7XG4gICAgICAgICAgLW1zLWZsZXgtb3JkZXI6IDI7XG4gICAgICAgICAgICAgIG9yZGVyOiAyO1xuICAgICAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAubC1mb290ZXJfX3NvY2lhbCB7XG4gICAgICB3aWR0aDogOTAlOyB9IH1cblxuLmwtZm9vdGVyX19zb2NpYWwtaXRlbSB7XG4gIHdpZHRoOiAyLjFyZW07XG4gIGhlaWdodDogMi4xcmVtO1xuICBib3JkZXI6IDAuNXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBtYXJnaW4tcmlnaHQ6IDIlO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7IH1cbiAgLmwtZm9vdGVyX19zb2NpYWwtaXRlbTpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg1KTsgfVxuICAgIC5sLWZvb3Rlcl9fc29jaWFsLWl0ZW06aG92ZXIgLmwtZm9vdGVyX19zb2NpYWwtbGluayB7XG4gICAgICBjb2xvcjogIzQ1NWE2NDsgfVxuICAgIC5sLWZvb3Rlcl9fc29jaWFsLWl0ZW06aG92ZXIgLnN2Zy11c2Uge1xuICAgICAgb3BhY2l0eTogMTsgfVxuXG4ubC1mb290ZXJfX3NvY2lhbC1saW5rIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBjb2xvcjogd2hpdGU7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zczsgfVxuICAubC1mb290ZXJfX3NvY2lhbC1saW5rIC5zdmctdXNlIHtcbiAgICB3aWR0aDogMS4ycmVtO1xuICAgIGhlaWdodDogMS41NXJlbTtcbiAgICBvcGFjaXR5OiAwLjU7XG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzOyB9XG5cbi5jLWhhbWJ1cmdlci1uYXYge1xuICB3aWR0aDogMi4zNzVyZW07XG4gIGhlaWdodDogMi4wNjI1cmVtOyB9XG5cbi5jLWhhbWJ1cmdlci1uYXZfX3RhcmdldCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLmMtaGFtYnVyZ2VyLW5hdl9fZmFrZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMi4zNzVyZW07XG4gIGhlaWdodDogMC4zMTI1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogMTUlO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgdHJhbnNpdGlvbjogMC4zczsgfVxuICAuYy1oYW1idXJnZXItbmF2X19mYWtlOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMi4zNzVyZW07XG4gICAgaGVpZ2h0OiAwLjMxMjVyZW07XG4gICAgYm9yZGVyLXJhZGl1czogMTUlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDEwMCU7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcbiAgICBsZWZ0OiAwOyB9XG4gIC5jLWhhbWJ1cmdlci1uYXZfX2Zha2U6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDIuMzc1cmVtO1xuICAgIGhlaWdodDogMC4zMTI1cmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDE1JTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAxMDAlO1xuICAgIGxlZnQ6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAwJSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTAwJSk7IH1cblxuLmMtaGFtYnVyZ2VyLW5hdl9fbGlzdCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uYy1oYW1idXJnZXItbmF2X19pdGVtIHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuICAuYy1oYW1idXJnZXItbmF2X19pdGVtOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMC4zMTI1cmVtO1xuICAgIGhlaWdodDogMC4zMTI1cmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBtYXJnaW46IDAuOTM3NXJlbTsgfVxuICAuYy1oYW1idXJnZXItbmF2X19pdGVtOmZpcnN0LWNoaWxkOmJlZm9yZSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG4uYy1kZXZlbG9wZXIge1xuICB3aWR0aDogMjMuNzVyZW07XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uYy1kZXZlbG9wZXJfX2ltZy13cmFwIHtcbiAgd2lkdGg6IDguODEyNXJlbTtcbiAgaGVpZ2h0OiA4LjgxMjVyZW07XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWJvdHRvbTogNCU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuXG4uYy1kZXZlbG9wZXJfX2ltZyB7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG4uYy1kZXZlbG9wZXJfX2NvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5jLWRldmVsb3BfYmxvZy1oZWFkZXIge1xuICBjb2xvcjogd2hpdGU7IH1cblxuLmMtZGV2ZWxvcGVyX19oZWFkZXIge1xuICBmb250LXNpemU6IDIuMTg3NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgbWFyZ2luLWJvdHRvbTogMC4zJTtcbiAgY29sb3I6IHdoaXRlOyB9XG5cbi5jLWRldmVsb3Blcl9fZGVzYyB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC13ZWlnaHQ6IDMwMDsgfVxuXG4uYy1kZXZlbG9wZXJfX2Rlc2NfYmxvZyB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTAwJTsgfVxuXG4uYy1uZXh0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxLjc1cmVtO1xuICBoZWlnaHQ6IDEuMTI1cmVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMTUlO1xuICBsZWZ0OiA1MCU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgei1pbmRleDogMjtcbiAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC4zcztcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzLCAtd2Via2l0LXRyYW5zZm9ybSAwLjNzO1xuICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtOyB9XG4gIC5jLW5leHQ6aG92ZXIge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHNjYWxlKDEuMik7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgc2NhbGUoMS4yKTsgfVxuICAgIC5jLW5leHQ6aG92ZXIgLnN2Z19uZXh0IHtcbiAgICAgIG9wYWNpdHk6IDE7IH1cblxuLnN2Z19oZXJvIHtcbiAgb3BhY2l0eTogMC4wNjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzclO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGZpbGw6IHdoaXRlO1xuICB6LWluZGV4OiAxOyB9XG5cbi5zdmdfbmV4dCB7XG4gIG9wYWNpdHk6IDAuNztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZmlsbDogd2hpdGU7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zczsgfVxuXG4uc3ZnX2Rhc2gge1xuICB3aWR0aDogMS42cmVtO1xuICBoZWlnaHQ6IDAuOHJlbTtcbiAgb3BhY2l0eTogMC4yNTtcbiAgZmlsbDogY3VycmVudENvbG9yO1xuICBzdHJva2U6IGN1cnJlbnRDb2xvcjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi5zdmctbWFpbi10b3BfdHdvLWNvbG9yIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMjByZW07IH1cblxuLnN2Z19tYWluLXRvcF9vbmUtY29sb3Ige1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyMHJlbTtcbiAgY29sb3I6ICNmYWY4ZjA7IH1cblxuLnN2Zy1tYWluLWljb24ge1xuICBvcGFjaXR5OiAwLjA3O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogNTAlO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0yNSUpO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0yNSUpO1xuICB6LWluZGV4OiAwOyB9XG5cbi5zdmctbWFpbi1pY29uX2Fib3V0IHtcbiAgd2lkdGg6IDgwJTsgfVxuXG4uc3ZnLW1haW4taWNvbl93b3JrcyB7XG4gIHdpZHRoOiAxMzQlO1xuICBoZWlnaHQ6IDEyLjEyNXJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5zdmctbWFpbi1pY29uX3dvcmtzIHtcbiAgICAgIGhlaWdodDogOC4xMjVyZW07IH0gfVxuXG4uc3ZnX3NreXBlLCAuc3ZnX21haWwsIC5zdmdfcGhvbmUsIC5zdmdfbWFwLW1hcmtlciB7XG4gIGNvbG9yOiAjMDBiZmE1O1xuICAtd2Via2l0LWZsZXgtYmFzaXM6IDIwJTtcbiAgICAgIC1tcy1mbGV4LXByZWZlcnJlZC1zaXplOiAyMCU7XG4gICAgICAgICAgZmxleC1iYXNpczogMjAlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7IH1cbiAgLnN2Z19za3lwZTpob3ZlciwgLnN2Z19tYWlsOmhvdmVyLCAuc3ZnX3Bob25lOmhvdmVyLCAuc3ZnX21hcC1tYXJrZXI6aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuNzsgfVxuXG4uc3ZnX3NreXBlIHtcbiAgd2lkdGg6IDEuNXJlbTtcbiAgaGVpZ2h0OiAxLjVyZW07IH1cblxuLnN2Z19tYWlsIHtcbiAgd2lkdGg6IDIuNXJlbTtcbiAgaGVpZ2h0OiAxLjc1cmVtOyB9XG5cbi5zdmdfcGhvbmUge1xuICB3aWR0aDogMS4yNXJlbTtcbiAgaGVpZ2h0OiAxLjE4NzVyZW07IH1cblxuLnN2Z19tYXAtbWFya2VyIHtcbiAgd2lkdGg6IDEuMTg3NXJlbTtcbiAgaGVpZ2h0OiAxLjVyZW07IH1cblxuLnN2Z19sb2dpbiB7XG4gIHdpZHRoOiAwLjkzNzVyZW07XG4gIGhlaWdodDogMS4wNjI1cmVtO1xuICBjb2xvcjogI2M0Y2JjZDsgfVxuXG4uc3ZnX2xpbmsge1xuICB3aWR0aDogMS4yNXJlbTtcbiAgaGVpZ2h0OiAxLjE4NzVyZW07XG4gIG1hcmdpbi1yaWdodDogMC41cmVtOyB9XG5cbi5zdmdfc2xpZGVyLWFycm93IHtcbiAgd2lkdGg6IDIuODEyNXJlbTtcbiAgaGVpZ2h0OiAxLjc1cmVtO1xuICBib3gtc2hhZG93OiAwcHggMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNik7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgb3BhY2l0eTogMC43O1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3M7IH1cblxuLmgtdGl0bGUtc2VjdGlvbiB7XG4gIGZvbnQtZmFtaWx5OiAnYmVybmllcic7XG4gIGZvbnQtc2l6ZTogMy45Mzc1cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4ycmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIG1hcmdpbjogMCAyLjUlO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXdlaWdodDogNTAwO1xuICBjb2xvcjogIzM3M2U0MjsgfVxuICAuaC10aXRsZS1zZWN0aW9uOmZpcnN0LWxldHRlciB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5oLXRpdGxlLXNlY3Rpb24ge1xuICAgICAgZm9udC1zaXplOiAzLjA2MjVyZW07IH0gfVxuXG4uaC10aXRsZS1zZWN0aW9uX2NvbG9yIHtcbiAgY29sb3I6IHdoaXRlOyB9XG5cbi5oLXRpdGxlLWFydGljbGUge1xuICBmb250LWZhbWlseTogJ2Jlcm5pZXInO1xuICBmb250LXNpemU6IDIuMTg3NXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBtYXJnaW46IDAgMi41JTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgY29sb3I6ICM0NTVhNjQ7IH1cbiAgLmgtdGl0bGUtYXJ0aWNsZTpmaXJzdC1sZXR0ZXIge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuLmMtbmF2X19saXN0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDgwJTtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5jLW5hdl9faXRlbSB7XG4gIC13ZWJraXQtZmxleC1ncm93OiAxO1xuICAgICAgLW1zLWZsZXgtcG9zaXRpdmU6IDE7XG4gICAgICAgICAgZmxleC1ncm93OiAxOyB9XG5cbi5jLW5hdl9fbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiAxLjA2MjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC40czsgfVxuICAuYy1uYXZfX2xpbms6OmZpcnN0LWxldHRlciB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAuYy1uYXZfX2xpbms6aG92ZXIge1xuICAgIGNvbG9yOiAjMDBiZmE1OyB9XG5cbi5jLWNvcHkge1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmMtY29weSBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgLmMtY29weSBhOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAuYy1jb3B5IHtcbiAgICAgIC13ZWJraXQtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XG5cbi5jLWNvcHlfaXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiA2LjI4OyB9XG4gIC5jLWNvcHlfaXRlbTphZnRlciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGNvbnRlbnQ6ICd8JztcbiAgICBtYXJnaW46IDAgMC4zcmVtO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBmb250LXdlaWdodDogMzAwOyB9XG4gIC5jLWNvcHlfaXRlbTpsYXN0LWNoaWxkOmFmdGVyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmMtY29weV9pdGVtIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7IH1cbiAgICAgIC5jLWNvcHlfaXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAuYy1jb3B5X2l0ZW06Zmlyc3QtY2hpbGQ6YWZ0ZXIge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmMtY29weV9mb290ZXIge1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDUwJTtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgICAgLW1zLWZsZXgtcGFjazogZW5kO1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuYy1jb3B5X2Zvb3RlciB7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgaGVpZ2h0OiAyMiU7XG4gICAgICAtd2Via2l0LW9yZGVyOiA0O1xuICAgICAgICAgIC1tcy1mbGV4LW9yZGVyOiA0O1xuICAgICAgICAgICAgICBvcmRlcjogNDtcbiAgICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgLmMtY29weV9mb290ZXIge1xuICAgICAgd2lkdGg6IDkwJTsgfSB9XG4gIC5jLWNvcHlfZm9vdGVyIC5jLWNvcHlfaXRlbSB7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTsgfVxuICAuYy1jb3B5X2Zvb3RlciBhIHtcbiAgICBvcGFjaXR5OiAwLjU7IH1cblxuLmMtYnV0dG9uIHtcbiAgbWluLXdpZHRoOiAzLjEyNXJlbTtcbiAgbWluLWhlaWdodDogMi44MTI1cmVtO1xuICBmb250LXNpemU6IDFyZW07XG4gIHBhZGRpbmc6IDAgMS43NXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm9yZGVyLXJhZGl1czogMC4zMTI1cmVtO1xuICBvdXRsaW5lOiBub25lOyB9XG4gIC5jLWJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5jLWJ1dHRvbjpob3ZlciAuYy1idXR0b25fX3RleHQge1xuICAgIGNvbG9yOiAjMDBiZmE1OyB9XG5cbi5jLWJ1dHRvbl9fdGV4dCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAyLjgxMjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBjb2xvcjogd2hpdGU7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuMnM7IH1cblxuLmMtc2xpZGVyIHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLXdlYmtpdC1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4uYy1zbGlkZXJfX2Rlc2MtZnIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjBFRkU5O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiA1MCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jLXNsaWRlcl9fZGVzYy1mciB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMjclO1xuICAgICAgLXdlYmtpdC1vcmRlcjogMjtcbiAgICAgICAgICAtbXMtZmxleC1vcmRlcjogMjtcbiAgICAgICAgICAgICAgb3JkZXI6IDI7IH0gfVxuXG4uYy1zbGlkZXJfX21haW4tZnIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUZFQkUwO1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDcwJTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtc2xpZGVyX19tYWluLWZyIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgLXdlYmtpdC1vcmRlcjogMTtcbiAgICAgICAgICAtbXMtZmxleC1vcmRlcjogMTtcbiAgICAgICAgICAgICAgb3JkZXI6IDE7XG4gICAgICBoZWlnaHQ6IDUxJTsgfSB9XG5cbi5jLXNsaWRlcl9fY29udHJvbC1mciB7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogMzAlO1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtc2xpZGVyX19jb250cm9sLWZyIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgLXdlYmtpdC1vcmRlcjogMztcbiAgICAgICAgICAtbXMtZmxleC1vcmRlcjogMztcbiAgICAgICAgICAgICAgb3JkZXI6IDM7XG4gICAgICBoZWlnaHQ6IDIyJTsgfSB9XG5cbi5jLXNsaWRlcl9fZGVzYy1oZWFkZXIge1xuICBjb2xvcjogIzM3M2U0MjtcbiAgd2lkdGg6IDY1JTtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogYmFzZWxpbmU7XG4gICAgICAtbXMtZmxleC1hbGlnbjogYmFzZWxpbmU7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xuICBtYXJnaW4tYm90dG9tOiA1JTsgfVxuICAuYy1zbGlkZXJfX2Rlc2MtaGVhZGVyIC5zdmdfZGFzaCB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7IH1cbiAgLmMtc2xpZGVyX19kZXNjLWhlYWRlciAuaC10aXRsZS1hcnRpY2xlIHtcbiAgICBsaW5lLWhlaWdodDogMS4xNztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jLXNsaWRlcl9fZGVzYy1oZWFkZXIge1xuICAgICAgd2lkdGg6IDY4JTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDIlOyB9IH1cblxuLmMtc2xpZGVyX19kZXNjLXRleHQge1xuICB3aWR0aDogODAlO1xuICBoZWlnaHQ6IDMuNzVyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjMjBiNWExO1xuICBmb250LXdlaWdodDogNTAwO1xuICBib3JkZXItdG9wOiAycHggc29saWQgcmdiYSgwLCAxNTAsIDEzNiwgMC4zKTtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHJnYmEoMCwgMTUwLCAxMzYsIDAuMyk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGluZS1oZWlnaHQ6IDMuNzVyZW07XG4gIG1hcmdpbi1ib3R0b206IDUlOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtc2xpZGVyX19kZXNjLXRleHQge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDIlOyB9IH1cblxuLmMtc2xpZGVyX19kZXNjLWxpbmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBiZmE1O1xuICBjb2xvcjogd2hpdGU7XG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzO1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDsgfVxuICAuYy1zbGlkZXJfX2Rlc2MtbGluazpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwOTY4ODsgfVxuICAgIC5jLXNsaWRlcl9fZGVzYy1saW5rOmhvdmVyIC5jLWJ1dHRvbl9fdGV4dCB7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cblxuLmMtc2xpZGVyX19tYWluLWltZyB7XG4gIG1heC13aWR0aDogOTAlO1xuICBtYXgtaGVpZ2h0OiA4MCU7XG4gIHdpZHRoOiA2MCU7XG4gIGhlaWdodDogYXV0bztcbiAgYm94LXNoYWRvdzogNHB4IDE4cHggMjJweCAtMTVweCByZ2JhKDAsIDAsIDAsIDAuODcpOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmMtc2xpZGVyX19tYWluLWltZyB7XG4gICAgICB3aWR0aDogNDUlOyB9IH1cblxuLmMtc2xpZGVyX19jb250cm9sLXByZXYge1xuICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiA1MCU7XG4gIGhlaWdodDogMTAwJTtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1hbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5jLXNsaWRlcl9fY29udHJvbC1wcmV2OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTgyLCAxODAsIDE3NCwgMC43KTtcbiAgICB6LWluZGV4OiAwOyB9XG5cbi5jLXNsaWRlcl9fY29udHJvbC1uZXh0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogNTAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAuYy1zbGlkZXJfX2NvbnRyb2wtbmV4dDphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEzNiwgMTMxLCAxMTQsIDAuNSk7XG4gICAgei1pbmRleDogMDsgfVxuXG4uYy1zbGlkZXJfX2NvbnRyb2wtaW1nIHtcbiAgbWF4LXdpZHRoOiA5MCU7XG4gIG1heC1oZWlnaHQ6IDkwJTtcbiAgd2lkdGg6IDY2JTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBib3gtc2hhZG93OiA0cHggMThweCAyMnB4IC0xNXB4IHJnYmEoMCwgMCwgMCwgMC44Nyk7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuYy1zbGlkZXJfX2NvbnRyb2wtaW1nIHtcbiAgICAgIHdpZHRoOiA0NSU7IH0gfVxuXG4uYy1zbGlkZXJfX2NvbnRyb2xfX2xpbmsge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDIuODEyNXJlbTtcbiAgaGVpZ2h0OiAxLjc1cmVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIHotaW5kZXg6IDE7IH1cbiAgLmMtc2xpZGVyX19jb250cm9sX19saW5rOmhvdmVyIC5zdmdfc2xpZGVyLWFycm93IHtcbiAgICBvcGFjaXR5OiAxOyB9XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk55WXk5aGMzTmxkSE12YzNSNWJHVnpMME02WEZ4VmMyVnljMXhjV1hWc2FYbGhYRngzWldKd2NtOXFaV04wYzF4Y2NHOXlkR1p2YkdsdkwzTnlZMXhjWVhOelpYUnpYRnh6ZEhsc1pYTmNYR0poYzJWY1hGOW1iMjUwY3k1elkzTnpJaXdpYzNKakwyRnpjMlYwY3k5emRIbHNaWE12UXpwY1hGVnpaWEp6WEZ4WmRXeHBlV0ZjWEhkbFluQnliMnBsWTNSelhGeHdiM0owWm05c2FXOHZjM0pqWEZ4aGMzTmxkSE5jWEhOMGVXeGxjMXhjWW1GelpWeGNYMkpoYzJVdWMyTnpjeUlzSW5OeVl5OWhjM05sZEhNdmMzUjViR1Z6TDBNNlhGeFZjMlZ5YzF4Y1dYVnNhWGxoWEZ4M1pXSndjbTlxWldOMGMxeGNjRzl5ZEdadmJHbHZMM055WTF4Y1lYTnpaWFJ6WEZ4emRIbHNaWE5jWEhWMGFXeHpYRnhmZG1GeWFXRmliR1Z6TG5OamMzTWlMQ0p6Y21NdllYTnpaWFJ6TDNOMGVXeGxjeTlET2x4Y1ZYTmxjbk5jWEZsMWJHbDVZVnhjZDJWaWNISnZhbVZqZEhOY1hIQnZjblJtYjJ4cGJ5OXpjbU5jWEdGemMyVjBjMXhjYzNSNWJHVnpYRngxZEdsc2MxeGNYMjFwZUdsdWN5NXpZM056SWl3aWMzSmpMMkZ6YzJWMGN5OXpkSGxzWlhNdlF6cGNYRlZ6WlhKelhGeFpkV3hwZVdGY1hIZGxZbkJ5YjJwbFkzUnpYRnh3YjNKMFptOXNhVzh2YzNKalhGeGhjM05sZEhOY1hITjBlV3hsYzF4Y1ltRnpaVnhjWDJobGJIQmxjbk11YzJOemN5SXNJbk55WXk5aGMzTmxkSE12YzNSNWJHVnpMME02WEZ4VmMyVnljMXhjV1hWc2FYbGhYRngzWldKd2NtOXFaV04wYzF4Y2NHOXlkR1p2YkdsdkwzTnlZMXhjWVhOelpYUnpYRnh6ZEhsc1pYTmNYR3hoZVc5MWRGeGNYMnd0ZDNKaGNIQmxjaTV6WTNOeklpd2ljM0pqTDJGemMyVjBjeTl6ZEhsc1pYTXZRenBjWEZWelpYSnpYRnhaZFd4cGVXRmNYSGRsWW5CeWIycGxZM1J6WEZ4d2IzSjBabTlzYVc4dmMzSmpYRnhoYzNObGRITmNYSE4wZVd4bGMxeGNiR0Y1YjNWMFhGeGZiQzF6WldOMGFXOXVMbk5qYzNNaUxDSnpjbU12WVhOelpYUnpMM04wZVd4bGN5OURPbHhjVlhObGNuTmNYRmwxYkdsNVlWeGNkMlZpY0hKdmFtVmpkSE5jWEhCdmNuUm1iMnhwYnk5emNtTmNYR0Z6YzJWMGMxeGNjM1I1YkdWelhGeDFkR2xzYzF4Y1gyWjFibU4wYVc5dWN5NXpZM056SWl3aWMzSmpMMkZ6YzJWMGN5OXpkSGxzWlhNdlF6cGNYRlZ6WlhKelhGeFpkV3hwZVdGY1hIZGxZbkJ5YjJwbFkzUnpYRnh3YjNKMFptOXNhVzh2YzNKalhGeGhjM05sZEhOY1hITjBlV3hsYzF4Y2JHRjViM1YwWEZ4ZmJDMW9aWEp2TG5OamMzTWlMQ0p6Y21NdllYTnpaWFJ6TDNOMGVXeGxjeTlET2x4Y1ZYTmxjbk5jWEZsMWJHbDVZVnhjZDJWaWNISnZhbVZqZEhOY1hIQnZjblJtYjJ4cGJ5OXpjbU5jWEdGemMyVjBjMXhjYzNSNWJHVnpYRnhzWVhsdmRYUmNYRjlzTFdobGNtOWZYM052WTJsaGJDNXpZM056SWl3aWMzSmpMMkZ6YzJWMGN5OXpkSGxzWlhNdlF6cGNYRlZ6WlhKelhGeFpkV3hwZVdGY1hIZGxZbkJ5YjJwbFkzUnpYRnh3YjNKMFptOXNhVzh2YzNKalhGeGhjM05sZEhOY1hITjBlV3hsYzF4Y2JHRjViM1YwWEZ4ZmJDMWpiMjUwWVdsdVpYSXVjMk56Y3lJc0luTnlZeTloYzNObGRITXZjM1I1YkdWekwwTTZYRnhWYzJWeWMxeGNXWFZzYVhsaFhGeDNaV0p3Y205cVpXTjBjMXhjY0c5eWRHWnZiR2x2TDNOeVkxeGNZWE56WlhSelhGeHpkSGxzWlhOY1hHeGhlVzkxZEZ4Y1gyd3RhR0Z0WW5WeVoyVnlMbk5qYzNNaUxDSnpjbU12WVhOelpYUnpMM04wZVd4bGN5OURPbHhjVlhObGNuTmNYRmwxYkdsNVlWeGNkMlZpY0hKdmFtVmpkSE5jWEhCdmNuUm1iMnhwYnk5emNtTmNYR0Z6YzJWMGMxeGNjM1I1YkdWelhGeHNZWGx2ZFhSY1hGOXNMVzFoYVc0dWMyTnpjeUlzSW5OeVl5OWhjM05sZEhNdmMzUjViR1Z6TDBNNlhGeFZjMlZ5YzF4Y1dYVnNhWGxoWEZ4M1pXSndjbTlxWldOMGMxeGNjRzl5ZEdadmJHbHZMM055WTF4Y1lYTnpaWFJ6WEZ4emRIbHNaWE5jWEd4aGVXOTFkRnhjWDJ3dGJXRndMV052Ym5SaGFXNWxjaTV6WTNOeklpd2ljM0pqTDJGemMyVjBjeTl6ZEhsc1pYTXZRenBjWEZWelpYSnpYRnhaZFd4cGVXRmNYSGRsWW5CeWIycGxZM1J6WEZ4d2IzSjBabTlzYVc4dmMzSmpYRnhoYzNObGRITmNYSE4wZVd4bGMxeGNiR0Y1YjNWMFhGeGZiQzFqYjI1MFlXTjBjeTV6WTNOeklpd2ljM0pqTDJGemMyVjBjeTl6ZEhsc1pYTXZRenBjWEZWelpYSnpYRnhaZFd4cGVXRmNYSGRsWW5CeWIycGxZM1J6WEZ4d2IzSjBabTlzYVc4dmMzSmpYRnhoYzNObGRITmNYSE4wZVd4bGMxeGNiR0Y1YjNWMFhGeGZiQzFtYjI5MFpYSXVjMk56Y3lJc0luTnlZeTloYzNObGRITXZjM1I1YkdWekwwTTZYRnhWYzJWeWMxeGNXWFZzYVhsaFhGeDNaV0p3Y205cVpXTjBjMXhjY0c5eWRHWnZiR2x2TDNOeVkxeGNZWE56WlhSelhGeHpkSGxzWlhOY1hHTnZiWEJ2Ym1WdWRITmNYRjlqTFdoaGJXSjFjbWRsY2kxdVlYWXVjMk56Y3lJc0luTnlZeTloYzNObGRITXZjM1I1YkdWekwwTTZYRnhWYzJWeWMxeGNXWFZzYVhsaFhGeDNaV0p3Y205cVpXTjBjMXhjY0c5eWRHWnZiR2x2TDNOeVkxeGNZWE56WlhSelhGeHpkSGxzWlhOY1hHTnZiWEJ2Ym1WdWRITmNYRjlqTFdSbGRtVnNiM0JsY2k1elkzTnpJaXdpYzNKakwyRnpjMlYwY3k5emRIbHNaWE12UXpwY1hGVnpaWEp6WEZ4WmRXeHBlV0ZjWEhkbFluQnliMnBsWTNSelhGeHdiM0owWm05c2FXOHZjM0pqWEZ4aGMzTmxkSE5jWEhOMGVXeGxjMXhjWTI5dGNHOXVaVzUwYzF4Y1gyTXRibVY0ZEM1elkzTnpJaXdpYzNKakwyRnpjMlYwY3k5emRIbHNaWE12UXpwY1hGVnpaWEp6WEZ4WmRXeHBlV0ZjWEhkbFluQnliMnBsWTNSelhGeHdiM0owWm05c2FXOHZjM0pqWEZ4aGMzTmxkSE5jWEhOMGVXeGxjMXhjWTI5dGNHOXVaVzUwYzF4Y1gzTjJaeTV6WTNOeklpd2ljM0pqTDJGemMyVjBjeTl6ZEhsc1pYTXZRenBjWEZWelpYSnpYRnhaZFd4cGVXRmNYSGRsWW5CeWIycGxZM1J6WEZ4d2IzSjBabTlzYVc4dmMzSmpYRnhoYzNObGRITmNYSE4wZVd4bGMxeGNZMjl0Y0c5dVpXNTBjMXhjWDJndGRHbDBiR1V1YzJOemN5SXNJbk55WXk5aGMzTmxkSE12YzNSNWJHVnpMME02WEZ4VmMyVnljMXhjV1hWc2FYbGhYRngzWldKd2NtOXFaV04wYzF4Y2NHOXlkR1p2YkdsdkwzTnlZMXhjWVhOelpYUnpYRnh6ZEhsc1pYTmNYR052YlhCdmJtVnVkSE5jWEY5akxXNWhkaTV6WTNOeklpd2ljM0pqTDJGemMyVjBjeTl6ZEhsc1pYTXZRenBjWEZWelpYSnpYRnhaZFd4cGVXRmNYSGRsWW5CeWIycGxZM1J6WEZ4d2IzSjBabTlzYVc4dmMzSmpYRnhoYzNObGRITmNYSE4wZVd4bGMxeGNZMjl0Y0c5dVpXNTBjMXhjWDJNdFkyOXdlUzV6WTNOeklpd2ljM0pqTDJGemMyVjBjeTl6ZEhsc1pYTXZRenBjWEZWelpYSnpYRnhaZFd4cGVXRmNYSGRsWW5CeWIycGxZM1J6WEZ4d2IzSjBabTlzYVc4dmMzSmpYRnhoYzNObGRITmNYSE4wZVd4bGMxeGNZMjl0Y0c5dVpXNTBjMXhjWDJNdFluVjBkRzl1TG5OamMzTWlMQ0p6Y21NdllYTnpaWFJ6TDNOMGVXeGxjeTlET2x4Y1ZYTmxjbk5jWEZsMWJHbDVZVnhjZDJWaWNISnZhbVZqZEhOY1hIQnZjblJtYjJ4cGJ5OXpjbU5jWEdGemMyVjBjMXhjYzNSNWJHVnpYRnhqYjIxd2IyNWxiblJ6WEZ4Zll5MXpiR2xrWlhJdWMyTnpjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4cFJrRkJhVVk3UVVGRmFrWTdSVUZEU1N4clEwRkJhVU03UlVGRGFrTXNiMHRCUTJ0R08wVkJRMnhHTEc5Q1FVRnRRanRGUVVOdVFpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGSmRFSTdSVUZEU1N4MVFrRkJjMEk3UlVGRGRFSXNPRXBCUXl0Rk8wVkJReTlGTEc5Q1FVRnRRanRGUVVOdVFpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGSmRFSTdSVUZEU1N3MlFrRkJORUk3UlVGRE5VSXNNRXBCUXpaRk8wVkJRemRGTEc5Q1FVRnRRanRGUVVOdVFpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGTGRFSTdSVUZEU1N4elFrRkJjVUk3UlVGRGNrSXNjMGxCUTIxRk8wVkJRMjVGTEdsQ1FVRm5RanRGUVVOb1FpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGSmRFSTdSVUZEU1N4elFrRkJjVUk3UlVGRGNrSXNhMHBCUTNsRk8wVkJRM3BGTEdsQ1FVRm5RanRGUVVOb1FpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGSmRFSTdSVUZEU1N4elFrRkJjVUk3UlVGRGNrSXNNRWxCUTNGRk8wVkJRM0pGTEdsQ1FVRm5RanRGUVVOb1FpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGSmRFSTdSVUZEU1N4elFrRkJjVUk3UlVGRGNrSXNkMGxCUTI5Rk8wVkJRM0JGTEdsQ1FVRm5RanRGUVVOb1FpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGSmRFSTdSVUZEU1N4elFrRkJjVUk3UlVGRGNrSXNiMHBCUXpCRk8wVkJRekZGTEdsQ1FVRm5RanRGUVVOb1FpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGSmRFSTdSVUZEU1N4elFrRkJjVUk3UlVGRGNrSXNNRWxCUTNGRk8wVkJRM0pGTEdsQ1FVRm5RanRGUVVOb1FpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGSmRFSTdSVUZEU1N4elFrRkJjVUk3UlVGRGNrSXNjMHBCUXpKRk8wVkJRek5GTEdsQ1FVRm5RanRGUVVOb1FpeHRRa0ZCYTBJc1JVRkJRVHM3UVVGSmRFSTdSVUZEU1N4elFrRkJjVUk3UlVGRGNrSXNORWxCUTNORk8wVkJRM1JGTEdsQ1FVRm5RanRGUVVOb1FpeHRRa0ZCYTBJc1JVRkJRVHM3UVVNNVJuUkNPenRIUVVWSE8wRkJRMGc3UlVGRFF5eDFRa0ZCYzBJc1JVRkRkRUk3TzBGQlJVUTdSVUZGUnl4bFEwZ3dRanRGUkVrelFpd3dRa050UWpaQ08wVkViRUkxUWl3eVEwUjFSalpETzBWRGRFWXZReXhWUVVGVE8wVkJRMVFzVjBGQlZUdEZRVU5XTEZsQlFWYzdSVUZEV0N4cFFrRkJaMEk3UlVGRGFFSXNaMEpCUVdVN1JVRkRaaXh6UWtGQmNVSTdSVUZEY2tJc2JVSkJRV3RDTzBWQlEyeENMRzlEUVVGdFF6dEZRVU51UXl4dFEwRkJhME03UlVGRGJFTXNkVUpCUVhOQ08wVkJRM1JDTEcxQ1FVRnJRaXhGUVhkQ2JFSTdSVVV4UTBNN1NVWkhSanROUVdsQ1JTeDVRME5zUWpKQ0xFVkVkME0xUWl4RlFVRkJPMFZGZUVKQk8wbEdaa1E3VFVGelFrVXNaMEpCUVdVc1JVRnBRbWhDTEVWQlFVRTdSVVZzUWtFN1NVWnlRa1E3VFVFeVFrVXNaMEpCUVdVc1JVRlphRUlzUlVGQlFUdEZSVnBCTzBsR00wSkVPMDFCWjBORkxHZENRVUZsTEVWQlQyaENMRVZCUVVFN1JVVk9RVHRKUm1wRFJEdE5RWEZEUlN4blFrRkJaU3hGUVVWb1FpeEZRVUZCT3p0QlFVTkVPMFZCUTBNc1lVRkJXVHRGUVVOYUxHbENRVUZuUWl4RlFVTm9RanM3UVVGRlJEczdPenM3UjBGTFJ6dEJRVU5JT3p0RlFVVkZMRzlDUVVGdFFpeEZRVU53UWpzN1FVRkZSRHM3UjBGRlJ6dEJRVU5JTzBWQlEwVXNZVU5xUlN0Q08wVkVhMFV2UWl4elFrRkJjVUlzUlVGRGRFSTdPMEZCUlVRN1JVRkRReXhWUVVGVE8wVkJRMVFzVjBGQlZTeEZRVU5XT3p0QlFVVkVPMFZCUTBNc2FVSkJRV2RDTEVWQlEyaENPenRCUVVWRU8wVkJRME1zVlVGQlV5eEZRVU5VT3p0QlFVVkVPMFZCUTBNc2JVSkJRV3RDTzBWQlEyeENMSEZDUVVGdlFpeEZRVU53UWpzN1FVRkZSRHRGUVVORkxESkRSRkU0UXl4RlExQTVRenM3UVVjelJrWTdPMGRCUlVjN1FVRkRTRHRGUVVORkxGbEJRVmM3UlVGRFdDeFpRVUZYTzBWQlExZ3NaVUZCWXl4RlFVTm1PenRCUVVWRU96czdPenRIUVV0SE8wRkJSMGc3T3pzN1IwRkpSenRCUVVOSU8wVkJRMFVzYVVKQlFXZENPMFZCUTJoQ0xGZEJRVlU3UlVGQlJ5eFBRVUZQTzBWQlEzQkNMR3RDUVVGcFFqdEZRVU5xUWl4dlFrRkJiVUk3UlVGRGJrSXNaVUZCWXl4RlFVTm1PenRCUVVWRU96czdPMGRCU1VjN1FVRkRTRHRGUVVORkxGVkJRVk03UlVGRFZDeHZRa0ZCYlVJN1JVRkRia0lzV1VGQlZ6dEZRVU5hTEd0Q1FVRnJRanRGUVVOcVFpeHBRa0ZCWjBJN1JVRkRhRUlzVjBGQlZUdEZRVU5XTEcxQ1FVRnJRanRGUVVOc1FpeFhRVUZWTEVWQlExZzdPMEZETDBORU8wVkdRMFVzV1VWRGFVSTdSVVpCYWtJc1lVVkJhVUk3UlVGRGJFSXNWVUZCVXp0RlFVTlVMRzFDUVVGclFqdEZRVU5zUWl4cFFrRkJaMElzUlVGSmFFSTdSVVpKUXp0SlJXSkdPMDFCVDBVc2EwSkJRV2xDTEVWQlJXeENMRVZCUVVFN08wRkRWRVE3UlVGRFF5eFpRVUZYTzBWQlExZ3NhMEpCUVdsQ08wVkJRMnBDTEcxQ1FVRnJRaXhGUVZOc1FqdEZTRU5ETzBsSFlrWTdUVUZMUnl4clFrRkJhVUk3VFVGRGFrSXNaMEpEVTJkRE8wMUVVbWhETEdGQlFWa3NSVUZMWkN4RlFVRkJPMFZJYlVKQk8wbEhMMEpFTzAxQlZVY3NhMEpCUVdsQ0xFVkJSVzVDTEVWQlFVRTdPMEZCUlVRN1JVRkRReXhoUVVGWk8wVkJRMW9zYzBKQlFXRTdSVUZCWWl4eFFrRkJZVHRGUVVGaUxHTkJRV0VzUlVGRFlqczdRVUZGUkR0RlNIVkZSU3h0UWtGQmEwSTdSVUZEYkVJc1QwRkJUVHRGUVVOT0xGRkJRVTg3UlVGRFVDeFRRVUZSTzBWQlExSXNWVUZCVXp0RlIzcEZWaXh6UWtGQllUdEZRVUZpTEhGQ1FVRmhPMFZCUVdJc1kwRkJZVHRGUVVOaUxDdENRVUZ6UWp0TlFVRjBRaXd5UWtGQmMwSTdWVUZCZEVJc2RVSkJRWE5DTEVWQlEzUkNPenRCUlhaQ1JEdEZRVU5ETEdOQlFXRTdSVUZEWWl3MlFrRkJORUk3UlVGRE5VSXNkVUpCUVhOQ08wVkJRM1JDTEcxRFFVRnJRenRGUVVOc1F5eDVSRUZCZDBRN1JVRkRlRVFzTmtKQlFUUkNMRVZCYVVJMVFqdEZRWFpDUkR0SlFWTkhMRmxCUVZjN1NVRkRXQ3hsUVVGak8wbE1aMFptTEcxQ1FVRnJRanRKUVVOc1FpeFBRVUZOTzBsQlEwNHNVVUZCVHp0SlFVTlFMRk5CUVZFN1NVRkRVaXhWUVVGVE8wbExiRVpTTEhsRFFVRjNRenRKUVVONFF5eFhRVUZWTEVWQlExWTdSVXhFUkR0SlMySkdPMDFCYVVKRkxHdENRVUZwUWl4RlFVMXNRaXhGUVVGQk8wVk1ZMEU3U1V0eVEwUTdUVUZ4UWtVc09FSkJRVFpDTEVWQlJUbENMRVZCUVVFN08wRkJSVVE3UlVGRFF5eG5RMEZCSzBJc1JVRnJRaTlDTzBWQmJrSkVPMGxCU1VVc1pVRkJZenRKUVVOa0xGbEJRVmM3U1VGRFdDeFpRVUZYTzBsQlExZ3NWMEZCVlR0SlFVTldMREJDUVVGdFF5eEZRVU51UXp0RlFWUkdPMGxCV1Vjc1dVRkJWenRKUVVOWUxHVkJRV003U1V4dlJHWXNiVUpCUVd0Q08wbEJRMnhDTEU5QlFVMDdTVUZEVGl4UlFVRlBPMGxCUTFBc1UwRkJVVHRKUVVOU0xGVkJRVk03U1V0MFJGSXNVVUZCVHp0SlFVTlFMSGxEUVVGM1F6dEpRVU40UXl4WFFVRlZMRVZCUTFZN08wRkJSMGc3UlV4dlJFVXNiVUpCUVd0Q08wVkJRMnhDTEZOQlFWRTdSVUZEVWl4VlFVRlRPMFZCUTFRc2VVTkJRV2RETzFWQlFXaERMR2xEUVVGblF6dEZTM0pFYWtNc1YwRkJWU3hGUVVOV096dEJRVVZFTzBWQlEwTXNWVUZCVXp0RlFVTlVMSGxEUVVGblF6dFZRVUZvUXl4cFEwRkJaME1zUlVGRGFFTTdPMEZEZEVSRU8wVkJRME1zYlVKQlFXdENPMFZCUTJ4Q0xGZEJRVlU3UlVGRFZpeFZRVUZUTzBWQlExUXNVMEZCVVR0RlFVTlNMSE5DUVVGaE8wVkJRV0lzY1VKQlFXRTdSVUZCWWl4alFVRmhPMFZCUTJJc1YwRkJWVHRGUVVOV0xIVkRRVUU0UWp0TlFVRTVRaXgxUWtGQk9FSTdWVUZCT1VJc0swSkJRVGhDTEVWQlR6bENPMFZPYVVKQk8wbE5MMEpFTzAxQlUwVXNWMEZCVlN4RlFVdFlMRVZCUVVFN1JVNTFRa0U3U1UxeVEwUTdUVUZaUlN4WFFVRlZMRVZCUlZnc1JVRkJRVHM3UVVGRlJEdEZRVVZETEdsQ1JraHJReXhGUlVsc1F6czdRVUZGUkR0RlFVVkRMSE5DUVVGeFFqdEZRVU55UWl4aFFVRlpPMFZCUTFvc1lWQndRbWRETEVWUE1FSm9RenRGUVZaRU8wbEJVVVVzVjBGQlZTeEZRVU5XT3p0QlFVZEdPMFZPYUVORkxHVkpZMmxETzBWS1ltcERMR2xDU1dGcFF6dEZSWEZDYkVNc2VVSkJRWGRDTzBWQlEzaENMR0ZCUVZrc1JVRkRXanM3UVVOMlEwUTdSVUZEUXl4WFFVRlZPMFZCUTFZc2EwSklZMnRETzBWSFlteERMSE5DUVVGaE8wVkJRV0lzY1VKQlFXRTdSVUZCWWl4alFVRmhPMFZCUTJJc1lVRkJXVHRGUVVOYUxDdENRVUZ6UWp0TlFVRjBRaXd5UWtGQmMwSTdWVUZCZEVJc2RVSkJRWE5DTzBWQlEzUkNMSGRDUVVGbE8wMUJRV1lzYjBKQlFXVTdWVUZCWml4blFrRkJaU3hGUVZGbU8wVlFhMEpCTzBsUGFFTkVPMDFCVVVVc2FVSklVV2xETzAxSFVHcERMRFJDUVVGdFFqdFZRVUZ1UWl4MVFrRkJiVUk3WTBGQmJrSXNiMEpCUVcxQ0xFVkJTM0JDTEVWQlFVRTdSVkIzUWtFN1NVOTBRMFE3VFVGWlJTeHJRa2hKYVVNc1JVZEdiRU1zUlVGQlFUczdRVU5pUkR0RlFVVkRMRzFDUVVGclFqdEZRVU5zUWl4UlFVRlBPMFZCUTFBc1YwRkJWVHRGUVVOV0xGZEJRVlVzUlVGRlZqczdRVU5TUkR0RlFVTkRMRmxCUVZjN1JVRkRXQ3d3UWtGQmVVSXNSVUZEZWtJN08wRkJUVVE3UlVGRFF5eFpRVUZYTzBWQlExZ3NiVUpCUVd0Q08wVkJRMnhDTEU5QlFVMDdSVUZEVGl4UlFVRlBPMFZCUTFBc1UwRkJVVHRGUVVOU0xGZEJRVlU3UlVGRFZpeHZRMEZCTWtJN1ZVRkJNMElzTkVKQlFUSkNMRVZCUXpOQ096dEJRVVZFTzBWQlEwTXNVMEZCVVR0RlFVTlNMRzlEUVVFeVFqdFZRVUV6UWl3MFFrRkJNa0lzUlVGRE0wSTdPMEZCUlVRN1JVRkRReXhaUVVGWE8wVkJRMWdzYVVKQlFXZENPMFZCUTJoQ0xITkNRVUZoTzBWQlFXSXNjVUpCUVdFN1JVRkJZaXhqUVVGaE8wVkJRMklzT0VKQlFYRkNPMDFCUVhKQ0xIbENRVUZ4UWp0VlFVRnlRaXh6UWtGQmNVSXNSVUZSY2tJN1JWUjBRa003U1ZOVlJqdE5RVTFITEdkQ1RHUm5RenROUzJWb1F5eGhRVUZaTEVWQlMyUXNSVUZCUVR0RlFWcEVPMGxCVlVVc1pVRkJZeXhGUVVOa096dEJRVWRHTzBWVWNFTkZMRmxUY1VOcFFqdEZWSEJEYWtJc2JVSkpZV2xETzBWTGQwSnNReXd3UWtGQmIwTTdSVUZEY0VNc2MwSkJRV0U3UlVGQllpeHhRa0ZCWVR0RlFVRmlMR05CUVdFN1JVRkRZaXhuUTBGQmRVSTdUVUZCZGtJc2MwSkJRWFZDTzFWQlFYWkNMSGRDUVVGMVFqdEZRVU4yUWl3MFFrRkJiVUk3VFVGQmJrSXNkVUpCUVcxQ08xVkJRVzVDTEc5Q1FVRnRRaXhGUVVOdVFqczdRVUZGUkR0RlFVTkRMRmRCUVZVN1JVRkRWaXh0UWtGQmEwSTdSVUZEYkVJc1pWWjBRelJDTzBWVmRVTTFRaXh6UWtGQllUdEZRVUZpTEhGQ1FVRmhPMFZCUVdJc1kwRkJZVHRGUVVOaUxIVkRRVUU0UWp0TlFVRTVRaXgxUWtGQk9FSTdWVUZCT1VJc0swSkJRVGhDTzBWQlF6bENMRFJDUVVGdFFqdE5RVUZ1UWl4MVFrRkJiVUk3VlVGQmJrSXNiMEpCUVcxQ0xFVkJWVzVDTzBWQmFFSkVPMGxCVVVjc2JVSkJRV3RDTEVWQlEyNUNPMFZCVkVZN1NVRlhSU3d3UWtGQmVVSXNSVUZEZWtJN1JWUXhRa1E3U1ZOalJEdE5RV05GTEZkQlFWVXNSVUZGV0N4RlFVRkJPenRCUVVWRU8wVkJRME1zV1VGQlZ6dEZRVU5ZTEdOQlFXRTdSVUZEWWl4bFFVRmpMRVZCU1dRN1JWUjJRMEU3U1ZOblEwUTdUVUZMUlN4bFFVRmpMRVZCUldZc1JVRkJRVHM3UVVGRlJEdEZRVU5ETEdkQ1FVRlBPMDFCUVZBc1dVRkJUenRWUVVGUUxGRkJRVTg3UlVGRFVDeFhRVUZWTzBWQlExWXNhVUpCUVdkQ08wVkJRMmhDTEcxQ1FVRnJRaXhGUVVOc1FqczdRVUZGUkR0RlFVTkRMREJDUVVGNVFpeEZRVU42UWpzN1FVRkZSRHRGUVVORExEQkNRVUY1UWl4RlFVTjZRanM3UVVOMFJrUTdSVlpGUlN4WlZVUnBRanRGVmtWcVFpeGhWVVpwUWl4RlFVTnNRanM3UVVOR1JEdEZRVU5ETEhGQ1FVRlpPMDFCUVZvc2NVSkJRVms3VlVGQldpeGhRVUZaTzBWQlExb3NjMEpCUVdFN1JVRkJZaXh4UWtGQllUdEZRVUZpTEdOQlFXRTdSVUZEWWl4blEwRkJkVUk3VFVGQmRrSXNjMEpCUVhWQ08xVkJRWFpDTEhkQ1FVRjFRanRGUVVOMlFpdzBRa0ZCYlVJN1RVRkJia0lzZFVKQlFXMUNPMVZCUVc1Q0xHOUNRVUZ0UWl4RlFVTnVRanM3UVVOTVJEdEZRVU5ETEhOQ1FVRmhPMFZCUVdJc2NVSkJRV0U3UlVGQllpeGpRVUZoTzBWQlEySXNjMEpTWTJ0RE8wVlJZbXhETEhsRFFVRjFRenRGUVVOMlF5eG5Ra0ZCWlR0RlFVTm1MRzFDUVVGclFpeEZRV2xDYkVJN1JVRjBRa1E3U1VGUFJTeGxRVUZqTzBsQlEyUXNXVUZCVnp0SlFVTllMRmxCUVZjN1NVRkRXQ3haUVVGWE8wbEJRMWdzTWtOaVRDdENPMGxoVFM5Q0xHMUNRVUZyUWp0SlFVTnNRaXhSUVVGUE8wbEJRMUFzVTBGQlVTeEZRVU5TTzBWYWFVSkVPMGxaYUVORU8wMUJhVUpGTEhGQ1VrUnBReXhGVVUxc1F5eEZRVUZCTzBWYVowSkJPMGxaZEVORU8wMUJiMEpGTEhOQ1VrcHBReXhGVVUxc1F5eEZRVUZCT3p0QlFVVkVPMFZCUTBNc1YwRkJWVHRGUVVOV0xGbEJRVmM3UlVGRFdDeHpRa0ZCWVR0RlFVRmlMSEZDUVVGaE8wVkJRV0lzWTBGQllUdEZRVU5pTERSQ1FVRnRRanROUVVGdVFpeDFRa0ZCYlVJN1ZVRkJia0lzYjBKQlFXMUNMRVZCVlc1Q08wVmFUa0U3U1ZsU1JEdE5RVTFGTEZkQlFWVTdUVUZEVml4WlFVRlhPMDFCUTFnc2FVSkJRVkU3VlVGQlVpeHJRa0ZCVVR0alFVRlNMRk5CUVZFN1RVRkRVaXhuUTBGQmRVSTdWVUZCZGtJc2MwSkJRWFZDTzJOQlFYWkNMSGRDUVVGMVFpeEZRVXQ0UWl4RlFVRkJPMFZhUVVFN1NWbGtSRHROUVZsRkxGZEJRVlVzUlVGRldDeEZRVUZCT3p0QlFVVkVPMFZCUTBNc1YwRkJWVHRGUVVOV0xGbEJRVmM3UlVGRFdDeHhRbEl6UW10RE8wVlJORUpzUXl4cFFrRkJaMEk3UlVGRGFFSXNaME5pZGtOblF6dEZZWGREYUVNc2FVSkJRV2RDTzBWQlEyaENMR2xDUVVGblFqdEZRVU5vUWl4elFrRkJZVHRGUVVGaUxIRkNRVUZoTzBWQlFXSXNZMEZCWVR0RlFVTmlMRFJDUVVGdFFqdE5RVUZ1UWl4MVFrRkJiVUk3VlVGQmJrSXNiMEpCUVcxQ0xFVkJiVUp1UWp0RlFUVkNSRHRKUVZkRkxESkNRVUV3UWp0SlFVTXhRaXhuUWtGQlpUdEpRVU5tTEdGQlFWa3NSVUZEV2p0RlFXUkdPMGxCWjBKRkxITkNRVUZ4UWl4RlFVTnlRanRGV25wQ1JEdEpXVkZFTzAxQmJVSkZMRmRCUVZVN1RVRkRWaXhaUVVGWE8wMUJRMWdzYVVKQlFWRTdWVUZCVWl4clFrRkJVVHRqUVVGU0xGTkJRVkU3VFVGRFVpeG5RMEZCZFVJN1ZVRkJka0lzYzBKQlFYVkNPMk5CUVhaQ0xIZENRVUYxUWp0TlFVTjJRaXh0UWtGQmEwSXNSVUZMYmtJc1JVRkJRVHRGV2psQ1FUdEpXVVZFTzAxQk1FSkZMRmRCUVZVc1JVRkZXQ3hGUVVGQk96dEJRVVZFTzBWQlEwTXNWMEZCVXp0RlFVTlVMRmxCUVZjN1JVRkRXQ3h6UWtGQllUdEZRVUZpTEhGQ1FVRmhPMFZCUVdJc1kwRkJZVHRGUVVOaUxHdERRVUY1UWp0TlFVRjZRaXh0UWtGQmVVSTdWVUZCZWtJc01FSkJRWGxDTzBWQlEzcENMRFJDUVVGdFFqdE5RVUZ1UWl4MVFrRkJiVUk3VlVGQmJrSXNiMEpCUVcxQ0xFVkJWVzVDTzBWYWNrUkJPMGxaYzBORU8wMUJUMFVzVjBGQlZUdE5RVU5XTEZsQlFWYzdUVUZEV0N4cFFrRkJVVHRWUVVGU0xHdENRVUZSTzJOQlFWSXNVMEZCVVR0TlFVTlNMR2REUVVGMVFqdFZRVUYyUWl4elFrRkJkVUk3WTBGQmRrSXNkMEpCUVhWQ0xFVkJTM2hDTEVWQlFVRTdSVm92UTBFN1NWbG5RMFE3VFVGaFJTeFhRVUZWTEVWQlJWZ3NSVUZCUVRzN1FVRkZSRHRGV25KR1JTeGpXWE5HYlVJN1JWcHlSbTVDTEdWWmNVWnRRanRGUVVOd1FpdzJRMkp1Um1kRE8wVmhiMFpvUXl4dFFrRkJhMEk3UlVGRGJFSXNhVUpCUVdkQ08wVkJRMmhDTEd0RFFVRnBReXhGUVZWcVF6dEZRV1pFTzBsQlQwVXNORU5pZUVZclFpeEZZU3RHTDBJN1NVRmtSanROUVZOSExHVmlkRVl3UWl4RllYVkdNVUk3U1VGV1NEdE5RVmxGTEZkQlFWVXNSVUZEVkRzN1FVRkpTRHRGUVVORExITkNRVUZ4UWp0RlduWkhjRUlzV1ZsM1IybENPMFZhZGtkcVFpeGhXWFZIYVVJN1JVRkRiRUlzWVdKeVIyZERPMFZoYzBkb1F5eHpRa0ZCWVR0RlFVRmlMSEZDUVVGaE8wVkJRV0lzWTBGQllUdEZRVU5pTEdkRFFVRjFRanROUVVGMlFpeHpRa0ZCZFVJN1ZVRkJka0lzZDBKQlFYVkNPMFZCUTNaQ0xEUkNRVUZ0UWp0TlFVRnVRaXgxUWtGQmJVSTdWVUZCYmtJc2IwSkJRVzFDTzBWQlEyNUNMSFZDUVVGelFpeEZRVTEwUWp0RlFXSkVPMGxhZEVkRkxHTlpLMGR2UWp0SldqbEhjRUlzWjBKWk9FYzJRanRKUVVNM1FpeGhRVUZaTzBsQlExb3NlVUpCUVhkQ0xFVkJRM2hDT3p0QlEyNUlSanRGWWtORkxHZENTV05wUXp0RlNtSnFReXhyUWtsaGFVTXNSVk5hYkVNN08wRkJSVVE3UlVGRlF5eGxRVUZqTzBWaVRtSXNXV0ZQYVVJN1JXSk9ha0lzWVdGTmFVSTdSVUZEYkVJc2MwSkJRV0U3UlVGQllpeHhRa0ZCWVR0RlFVRmlMR05CUVdFN1JVRkRZaXcwUWtGQmJVSTdUVUZCYmtJc2RVSkJRVzFDTzFWQlFXNUNMRzlDUVVGdFFpeEZRVU51UWpzN1FVRkZSRHRGUVVWRExHVkJRV003UldKa1lpeG5Ra2xqYVVNN1JVcGlha01zYTBKSllXbERPMFZUUld4RExIZENaRnBuUXp0RlkyRm9ReXh0UWtGQmEwSTdSVUZEYkVJc2EwSkJRV2xDTzBWQlEycENMR2xDUVVGblFpeEZRVEpDYUVJN1JVRnNRMFE3U1VGWFJ5eFpRVUZYTzBsQlExZ3NaVUZCWXp0SlluaENaaXhuUWtsamFVTTdTVXBpYWtNc2EwSkpZV2xETzBsVFdXaERMRzFDUVVGclFqdEpRVU5zUWl4M1FtUjJRamhDTzBsamQwSTVRaXh0UWtGQmEwSTdTVUZEYkVJc1ZVRkJVenRKUVVOVUxIRkRRVUUwUWp0WlFVRTFRaXcyUWtGQk5FSTdTVUZETlVJc1VVRkJUeXhGUVVOU08wVkJjRUpHTzBsQmQwSkhMRmxCUVZjN1NVRkRXQ3hsUVVGak8wbGlja05tTEdkQ1NXTnBRenRKU21KcVF5eHJRa2xoYVVNN1NWTjVRbWhETEcxQ1FVRnJRanRKUVVOc1FpeDNRbVJ3UXpoQ08wbGpjVU01UWl4dFFrRkJhMEk3U1VGRGJFSXNZVUZCV1R0SlFVTmFMRkZCUVU4N1NVRkRVQ3h2UTBGQk1rSTdXVUZCTTBJc05FSkJRVEpDTEVWQlF6VkNPenRCUVVkR08wVkJSVU1zYzBKQlFXRTdSVUZCWWl4eFFrRkJZVHRGUVVGaUxHTkJRV0U3UlVGRFlpd3JRa0ZCYzBJN1RVRkJkRUlzTWtKQlFYTkNPMVZCUVhSQ0xIVkNRVUZ6UWp0RlFVTjBRaXhuUTBGQmRVSTdUVUZCZGtJc2MwSkJRWFZDTzFWQlFYWkNMSGRDUVVGMVFqdEZRVU4yUWl3MFFrRkJiVUk3VFVGQmJrSXNkVUpCUVcxQ08xVkJRVzVDTEc5Q1FVRnRRaXhGUVVOdVFqczdRVUZGUkR0RlFVVkRMSE5DUVVGaE8wVkJRV0lzY1VKQlFXRTdSVUZCWWl4alFVRmhPMFZCUTJJc0swSkJRWE5DTzAxQlFYUkNMREpDUVVGelFqdFZRVUYwUWl4MVFrRkJjMEk3UlVGRGRFSXNORUpCUVcxQ08wMUJRVzVDTEhWQ1FVRnRRanRWUVVGdVFpeHZRa0ZCYlVJN1JVRkRia0lzTUVKQlFYbENPMFZCUTNwQ0xHdENWR2hFYTBNN1JWTnBSR3hETEdsQ1FVRm5RaXhGUVdkQ2FFSTdSVUYyUWtRN1NVRlhSU3haUVVGWE8wbEJRMWdzWlVGQll6dEpZbkJGWkN4cFFrbGphVU03U1VwaWFrTXNhMEpKWVdsRE8wbFRkMFJxUXl4dFFrRkJhMEk3U1VGRGJFSXNkMEprYmtVclFqdEpZMjlGTDBJc2EwSlVNVVJwUXl4RlV6SkVha003UlVGcVFrWTdTVUZ4UWtVc1kwRkJZU3hGUVVOaU96dEJRMmhHUmp0RlFVTkRMR2RDVm1WclF6dEZWV1JzUXl4elFrRkJZVHRGUVVGaUxIRkNRVUZoTzBWQlFXSXNZMEZCWVR0RlFVTmlMQ3RDUVVGelFqdE5RVUYwUWl3eVFrRkJjMEk3VlVGQmRFSXNkVUpCUVhOQ08wVkJRM1JDTERSQ1FVRnRRanROUVVGdVFpeDFRa0ZCYlVJN1ZVRkJia0lzYjBKQlFXMUNMRVZCUTI1Q096dEJRVVZFTzBWa1RFVXNhVUpKWTJsRE8wVktZbXBETEd0Q1NXRnBRenRGVlZCc1F5dzJRa0ZCTkVJN1JVRkROVUlzTkVKQlFUSkNPMFZCUXpOQ0xIVkNRVUZ6UWp0RlFVTjBRaXhwUWtGQlowSTdSVUZEYUVJc2EwSkJRV2xDTzBWQlEycENMRzFDUVVGclFpeEZRVU5zUWpzN1FVRkZSRHRGUVVORExHZENRVUZsTEVWQlEyWTdPMEZCUlVRN1JVRkRReXhaUVVGWE8wVkJRMWdzYlVKQlFXdENMRVZCUTJ4Q096dEJRVVZFTzBWQlEwTXNZV1p5UW1kRExFVmxjMEpvUXpzN1FVRkZSRHRGUVVWRExIRkNWbWhDYTBNN1JWVnBRbXhETEdsQ1FVRm5RanRGUVVOb1FpeHBRa0ZCWjBJN1JVRkRhRUlzYjBKQlFXMUNPMFZCUTI1Q0xHRm1PVUpuUXl4RlpTdENhRU03TzBGQlJVUTdSVUZEUXl4blFsWjRRbXRETzBWVmVVSnNReXhuUTJadVEyZERPMFZsYjBOb1F5eHBRa0ZCWjBJN1JVRkRhRUlzYVVKQlFXZENMRVZCUTJoQ096dEJRVVZFTzBWQlEwTXNZV1o2UTJkRE8wVmxNRU5vUXl4cFFrRkJaMEk3UlVGRGFFSXNjMEpCUVhGQ08wVkJRM0pDTEZsQlFWY3NSVUZEV0RzN1FVTnVSRVE3UlVGRlF5eGxRVUZqTzBWbVFXSXNaVWxqYVVNN1JVcGlha01zYVVKSllXbERPMFZYV214RExHMUNRVUZyUWp0RlFVTnNRaXhaUVVGWE8wVkJRMWdzVlVGQlV6dEZRVU5VTEc5RFFVRXlRanRWUVVFelFpdzBRa0ZCTWtJN1JVRkRNMElzVjBGQlZUdEZRVU5XTEcxRFFVRXdRanRGUVVFeFFpd3lRa0ZCTUVJN1JVRkJNVUlzYlVSQlFUQkNPMFZCUXpGQ0xIVkNRVUZ6UWl4RlFWTjBRanRGUVc1Q1JEdEpRV05GTEN0RFFVRnpRenRaUVVGMFF5eDFRMEZCYzBNc1JVRkpkRU03U1VGc1FrWTdUVUZuUWtjc1YwRkJWU3hGUVVOV096dEJRMmhDU0R0RlFVTkRMR05CUVdFN1JXaENRVm9zV1dkQ1EybENPMFZvUWtGcVFpeFpaMEpCYzBJN1JXaENaMGQwUWl4dFFrRkJhMEk3UlVGRGJFSXNVMEZCVVR0RlFVTlNMRlZCUVZNN1JVRkRWQ3g1UTBGQlowTTdWVUZCYUVNc2FVTkJRV2RETzBWblFtcEhha01zV1dwQ1EyZERPMFZwUWtGb1F5eFhRVUZWTEVWQlExWTdPMEZCUlVRN1JVRkRReXhoUVVGWk8wVm9RbEpZTEZsblFsTnBRanRGYUVKU2FrSXNZV2RDVVdsQ08wVkJRMnhDTEZscVFrNW5RenRGYVVKUGFFTXNlVUpCUVhkQ0xFVkJRM2hDT3p0QlFVVkVPMFZvUW1SRkxHTm5RbVZ0UWp0RmFFSmtia0lzWldkQ1l6SkNPMFZCUXpWQ0xHTkJRV0U3UlVGRFlpeHRRa0ZCYTBJN1JVRkRiRUlzY1VKQlFXOUNPMFZCUTNCQ0xITkNRVUZ4UWp0RlFVTnlRaXgxUWtGQmMwSXNSVUZEZEVJN08wRkJSVVE3UlVGRFF5eFpRVUZYTzBWQlExZ3NZMEZCWVN4RlFVTmlPenRCUVVWRU8wVkJRME1zV1VGQlZ6dEZRVU5ZTEdOQlFXRTdSVUZEWWl4bFFVRjVRaXhGUVVONlFqczdRVUZGUkR0RlFVTkRMR05CUVdFN1JVRkRZaXh0UWtGQmEwSTdSVUZEYkVJc1QwRkJUVHRGUVVOT0xGVkJRVk03UlVGRFZDeFRRVUZSTzBWQlExSXNWVUZCVXp0RlFVTlVMSGxEUVVGblF6dFZRVUZvUXl4cFEwRkJaME03UlVGRGFFTXNWMEZCVlN4RlFVTldPenRCUVVORU8wVkJRME1zVjBGQlZTeEZRVU5XT3p0QlFVVkVPMFZCUTBNc1dVRkJWenRGUVVOWUxHdENXbkJEYTBNc1JWbDNRMnhETzBWb1FuaENRVHRKWjBKclFrUTdUVUZKUlN4cFFrRkJaMElzUlVGRmFrSXNSVUZCUVRzN1FVRkZSRHRGUVVORExHVnFRbnBETmtJN1JXbENNRU0zUWl4M1FrRkJaVHROUVVGbUxEWkNRVUZsTzFWQlFXWXNaMEpCUVdVN1JVRkRaaXg1UWtGQmQwSXNSVUZKZUVJN1JVRlFSRHRKUVV0RkxHRkJRVmtzUlVGRFdqczdRVUZIUmp0RmFFSnFSVVVzWTBsamFVTTdSVXBpYWtNc1pVbGhhVU1zUlZseFJHeERPenRCUVVORU8wVm9RbkJGUlN4alowSnhSVzFDTzBWb1FuQkZia0lzWjBKblFtOUZORUlzUlVGRE4wSTdPMEZCUTBRN1JXaENka1ZGTEdWSlkybERPMFZLWW1wRExHdENTV0ZwUXl4RldUUkViRU03TzBGQlEwUTdSV2hDTTBWRkxHbENTV05wUXp0RlNtSnFReXhsU1dGcFF5eEZXU3RFYkVNN08wRkJRMFE3UldoQ09VVkZMR2xDU1dOcFF6dEZTbUpxUXl4clFrbGhhVU03UlZsclJXcERMR1ZCUVhsQ0xFVkJRekZDT3p0QlFVTkVPMFZvUW14R1JTeGxTV05wUXp0RlNtSnFReXhyUWtsaGFVTTdSVmx6Uld4RExIRkNXblJGYTBNc1JWbDFSV3hET3p0QlFVTkVPMFZvUW5SR1JTeHBRa2xqYVVNN1JVcGlha01zWjBKSllXbERPMFZaTUVWc1F5dzRRMEZCTmtNN1JVRkROME1zWVdwQ2NrWm5RenRGYVVKelJtaERMR0ZCUVZrN1JVRkRXaXg1UWtGQmQwSXNSVUZEZUVJN08wRkRPVVpFTzBWQlEwTXNkVUpCUVhOQ08wVkJRM1JDTEhGQ1ltTnJRenRGWVdKc1F5eDFRa0ZCYzBJN1JVRkRkRUlzYzBKQlFYRkNPMFZCUTNKQ0xIVkNRVUZ6UWp0RlFVTjBRaXhsUVVGak8wVkJRMlFzYVVKQlFXZENPMFZCUTJoQ0xHbENRVUZuUWp0RlFVTm9RaXhsYkVKRk5FSXNSV3RDVFRWQ08wVkJha0pFTzBsQldVVXNNRUpCUVhsQ0xFVkJRM3BDTzBWcVFtMUNSRHRKYVVKb1EwUTdUVUZsUlN4eFFtSkRhVU1zUldGRGJFTXNSVUZCUVRzN1FVRkZSRHRGUVVORExHRnNRbVJuUXl4RmEwSmxhRU03TzBGQlJVUTdSVUZEUXl4MVFrRkJjMEk3UlVGRGRFSXNjVUppVkd0RE8wVmhWV3hETEhOQ1FVRnhRanRGUVVOeVFpeDFRa0ZCYzBJN1JVRkRkRUlzWlVGQll6dEZRVU5rTEdsQ1FVRm5RanRGUVVOb1FpeHBRa0ZCWjBJN1JVRkRhRUlzWld4Q2NrSTBRaXhGYTBJeVFqVkNPMFZCWkVRN1NVRlhSU3d3UWtGQmVVSXNSVUZEZWtJN08wRkRia05HTzBWQlEwTXNjMEpCUVdFN1JVRkJZaXh4UWtGQllUdEZRVUZpTEdOQlFXRTdSVUZEWWl4WFFVRlZPMFZCUTFZc05FSkJRVzFDTzAxQlFXNUNMSFZDUVVGdFFqdFZRVUZ1UWl4dlFrRkJiVUlzUlVGRGJrSTdPMEZCUlVRN1JVRkRReXh4UWtGQldUdE5RVUZhTEhGQ1FVRlpPMVZCUVZvc1lVRkJXU3hGUVVOYU96dEJRVVZFTzBWQlEwTXNjMEpCUVhGQ08wVkJRM0pDTEhGQ1pFbHJRenRGWTBoc1F5eHBRa0ZCWjBJN1JVRkRhRUlzYVVKQlFXZENPMFZCUTJoQ0xHOUNRVUZ0UWp0RlFVTnVRaXhoYmtKV1owTTdSVzFDVjJoRExIVkNRVUZ6UWl4RlFVOTBRanRGUVdSRU8wbEJVMFVzTUVKQlFYbENMRVZCUTNwQ08wVkJWa1k3U1VGWlJTeGxia0pLTkVJc1JXMUNTelZDT3p0QlEzWkNSanRGUVVORExITkNRVUZoTzBWQlFXSXNjVUpCUVdFN1JVRkJZaXhqUVVGaE8wVkJRMklzTkVKQlFXMUNPMDFCUVc1Q0xIVkNRVUZ0UWp0VlFVRnVRaXh2UWtGQmJVSTdSVUZEYmtJc1owTkJRWFZDTzAxQlFYWkNMSE5DUVVGMVFqdFZRVUYyUWl4M1FrRkJkVUlzUlVGWmRrSTdSVUZtUkR0SlFVdEZMREpDUVVFd1FqdEpRVU14UWl4blFrRkJaU3hGUVVObU8wVkJVRVk3U1VGVFJTeHpRa0ZCY1VJc1JVRkRja0k3Ulc1Q05FSkVPMGx0UW5SRFJEdE5RVmxGTEhkQ1FVRmxPMVZCUVdZc2IwSkJRV1U3WTBGQlppeG5Ra0ZCWlR0TlFVTm1MRzFDUVVGclFpeEZRVVZ1UWl4RlFVRkJPenRCUVVWRU8wVkJRME1zYzBKQlFYRkNPMFZCUTNKQ0xHRndRbUpuUXp0RmIwSmphRU1zYVVKQlFXZENPMFZCUTJoQ0xHZENaa3hyUXp0RlpVMXNReXhyUWtGQmFVSXNSVUZ6UW1wQ08wVkJNMEpFTzBsQlVVVXNjMEpCUVhGQ08wbEJRM0pDTEdGQlFWazdTVUZEV2l4cFFrRkJaMEk3U1VGRGFFSXNaMEptV21sRE8wbGxZV3BETEdsQ1FVRm5RaXhGUVVOb1FqdEZRV0pHTzBsQlpVVXNZMEZCWVN4RlFVTmlPMFZ1UWt0RU8wbHRRbkpDUkR0TlFXMUNSU3hwUWtGQlowSXNSVUZSYWtJN1RVRXpRa1E3VVVGeFFrY3NXVUZCVnl4RlFVTllPMDFCZEVKSU8xRkJkMEpITEdOQlFXRXNSVUZEWWl4RlFVRkJPenRCUVVkSU8wVkJRME1zVjBGQlZUdEZRVU5XTEZsQlFWYzdSVUZEV0N4clEwRkJlVUk3VFVGQmVrSXNiVUpCUVhsQ08xVkJRWHBDTERCQ1FVRjVRaXhGUVdkQ2VrSTdSVzVDYUVOQk8wbHRRbUZFTzAxQlMwVXNWMEZCVlR0TlFVTldMRmxCUVZjN1RVRkRXQ3hwUWtGQlVUdFZRVUZTTEd0Q1FVRlJPMk5CUVZJc1UwRkJVVHROUVVOU0xHZERRVUYxUWp0VlFVRjJRaXh6UWtGQmRVSTdZMEZCZGtJc2QwSkJRWFZDTEVWQlYzaENMRVZCUVVFN1JXNUNNVUpCTzBsdFFrOUVPMDFCVjBVc1YwRkJWU3hGUVZGWUxFVkJRVUU3UlVGdVFrUTdTVUZqUlN4blEzQkNja1FyUWl4RmIwSnpSQzlDTzBWQlprWTdTVUZwUWtVc1lVRkJXU3hGUVVOYU96dEJRemxFUmp0RlFVVkRMRzlDYUVKaGEwTTdSV2RDV214RExITkNhRUpaYTBNN1JXZENXR3hETEdkQ2FFSlhhME03UldkQ1ZteERMRzFDYUVKVmEwTTdSV2RDVkd4RExITkNRVUZ4UWp0RlFVTnlRaXgxUWtGQmMwSTdSVUZEZEVJc09FSkJRVFpDTzBWQlF6ZENMSGRDY2tKS1owTTdSWEZDUzJoRExHdERRVUZyUXp0RlFVTnNReXhwUWtGQlowSTdSVUZEYUVJc2VVSm9Ra2RyUXp0RlowSkdiRU1zWTBGQllTeEZRVmRpTzBWQmVFSkVPMGxCYVVKRkxIZENja0phSzBJN1NYRkNZUzlDTEdkQ1FVRmxMRVZCUTJZN1JVRnVRa1k3U1VGelFrVXNaWEpDVERSQ0xFVnhRazAxUWpzN1FVRkhSanRGUVVWRExHVkJRV003UlVGRFpDeFpRVUZYTzBWQlExZ3NZVUZCV1R0RlFVTmFMRzFDUVVGclFqdEZRVU5zUWl4MVFtaENha0pyUXp0RlowSnJRbXhETEdsQ1FVRm5RanRGUVVOb1FpeHBRa0ZCWjBJN1JVRkRhRUlzYjBKQlFXMUNPMFZCUTI1Q0xIZENRVUYxUWp0RlFVTjJRaXgxUWtGQmMwSTdSVUZEZEVJc1lYSkNha05uUXp0RmNVSnJRMmhETEhWQ1FVRnpRaXhGUVVOMFFqczdRVU42UTBRN1JVRkRReXh6UWtGQllUdEZRVUZpTEhGQ1FVRmhPMFZCUVdJc1kwRkJZVHRGUVVOaUxDdENRVUZ6UWp0TlFVRjBRaXd5UWtGQmMwSTdWVUZCZEVJc2RVSkJRWE5DTzBWQlEzUkNMSGRDUVVGbE8wMUJRV1lzYjBKQlFXVTdWVUZCWml4blFrRkJaVHRGY2tKRVpDeFpjVUpGYVVJN1JYSkNSR3BDTEdGeFFrTnBRaXhGUVVOc1FqczdRVUZGUkR0RlFVTkRMREJDUVVGNVFqdEZRVU42UWl4aFFVRlpPMFZCUTFvc1YwRkJWVHRGUVVOV0xITkNRVUZoTzBWQlFXSXNjVUpCUVdFN1JVRkJZaXhqUVVGaE8wVkJRMklzSzBKQlFYTkNPMDFCUVhSQ0xESkNRVUZ6UWp0VlFVRjBRaXgxUWtGQmMwSTdSVUZEZEVJc1owTkJRWFZDTzAxQlFYWkNMSE5DUVVGMVFqdFZRVUYyUWl4M1FrRkJkVUk3UlVGRGRrSXNORUpCUVcxQ08wMUJRVzVDTEhWQ1FVRnRRanRWUVVGdVFpeHZRa0ZCYlVJc1JVRk5ia0k3UlhKQ1dVRTdTWEZDZWtKRU8wMUJVMFVzV1VGQlZ6dE5RVU5ZTEZsQlFWYzdUVUZEV0N4cFFrRkJVVHRWUVVGU0xHdENRVUZSTzJOQlFWSXNVMEZCVVN4RlFVVlVMRVZCUVVFN08wRkJSVVE3UlVGRFF5d3dRa0ZCZVVJN1JVRkRla0lzVjBGQlZUdEZRVU5XTEZsQlFWYzdSVUZEV0N4elFrRkJZVHRGUVVGaUxIRkNRVUZoTzBWQlFXSXNZMEZCWVR0RlFVTmlMR2REUVVGMVFqdE5RVUYyUWl4elFrRkJkVUk3VlVGQmRrSXNkMEpCUVhWQ08wVkJRM1pDTERSQ1FVRnRRanROUVVGdVFpeDFRa0ZCYlVJN1ZVRkJia0lzYjBKQlFXMUNMRVZCVFc1Q08wVnlRa1pCTzBseFFsWkVPMDFCVVVVc1dVRkJWenROUVVOWUxHbENRVUZSTzFWQlFWSXNhMEpCUVZFN1kwRkJVaXhUUVVGUk8wMUJRMUlzV1VGQlZ5eEZRVVZhTEVWQlFVRTdPMEZCUlVRN1JVRkRReXhYUVVGVk8wVkJRMVlzV1VGQlZ6dEZRVU5ZTEhOQ1FVRmhPMFZCUVdJc2NVSkJRV0U3UlVGQllpeGpRVUZoTEVWQlRXSTdSWEpDWWtFN1NYRkNTVVE3VFVGTFJTeFpRVUZYTzAxQlExZ3NhVUpCUVZFN1ZVRkJVaXhyUWtGQlVUdGpRVUZTTEZOQlFWRTdUVUZEVWl4WlFVRlhMRVZCUlZvc1JVRkJRVHM3UVVGRlJEdEZRVU5ETEdWMFFuSkRORUk3UlhOQ2MwTTFRaXhYUVVGVk8wVkJRMVlzYzBKQlFXRTdSVUZCWWl4eFFrRkJZVHRGUVVGaUxHTkJRV0U3UlVGRFlpeDFRMEZCT0VJN1RVRkJPVUlzZFVKQlFUaENPMVZCUVRsQ0xDdENRVUU0UWp0RlFVTTVRaXc0UWtGQmNVSTdUVUZCY2tJc2VVSkJRWEZDTzFWQlFYSkNMSE5DUVVGeFFqdEZRVlZ5UWl4clFrRkJhVUlzUlVGTGFrSTdSVUZ3UWtRN1NVRlBSU3h2UTBGQk1rSTdXVUZCTTBJc05FSkJRVEpDTEVWQlF6TkNPMFZCVWtZN1NVRlhSeXhyUWtGQmFVSTdTVUZEYWtJc2JVSkJRV3RDTzBsQlEyeENMR2xDUVVGblFpeEZRVU5xUWp0RmNrSTNRa1E3U1hGQ1pVUTdUVUZwUWtVc1YwRkJWVHROUVVOV0xHdENRVUZwUWl4RlFVVnNRaXhGUVVGQk96dEJRVVZFTzBWeVFtNUZSU3hYY1VKdlJXZENPMFZ5UW01RmFFSXNaMEpKWVdsRE8wVnBRblZFYkVNc01FSkJRWGxDTzBWQlEzcENMR1ZCUVhkQ08wVkJRM2hDTEdsQ1FVRm5RanRGUVVOb1FpdzJRMEZCTkVNN1JVRkROVU1zWjBSQlFTdERPMFZCUXk5RExHMUNRVUZyUWp0RlFVTnNRaXh4UW1wQ04wUnJRenRGYVVJNFJHeERMR3RDUVVGcFFpeEZRVXRxUWp0RmNrSnVSRUU3U1hGQ2NVTkVPMDFCVjBVc1YwRkJWVHROUVVOV0xHdENRVUZwUWl4RlFVVnNRaXhGUVVGQk96dEJRVVZFTzBWQlEwTXNNRUowUW5CRk5rSTdSWE5DY1VVM1FpeGhkRUpxUm1kRE8wVnpRbXRHYUVNc2MwSkJRV0U3UlVGQllpeHhRa0ZCWVR0RlFVRmlMR05CUVdFN1JVRkRZaXhuUTBGQmRVSTdUVUZCZGtJc2MwSkJRWFZDTzFWQlFYWkNMSGRDUVVGMVFqdEZRVU4yUWl3MFFrRkJiVUk3VFVGQmJrSXNkVUpCUVcxQ08xVkJRVzVDTEc5Q1FVRnRRanRGUVVOdVFpeHJRMEZCYVVNN1JVRkRha01zT0VKQlFUWkNMRVZCVHpkQ08wVkJaRVE3U1VGVFJTd3dRa0ZCZVVJc1JVRkpla0k3U1VGaVJqdE5RVmRITEdGMFFqRkdPRUlzUlhOQ01rWTVRanM3UVVGSlNEdEZRVU5ETEdWQlFXTTdSVUZEWkN4blFrRkJaVHRGUVVObUxGZEJRVlU3UlVGRFZpeGhRVUZaTzBWQlIxb3NiMFJCUVdkRUxFVkJTV2hFTzBWeVFtaEdRVHRKY1VKeFJVUTdUVUZUUlN4WFFVRlZMRVZCUlZnc1JVRkJRVHM3UVVGRlJEdEZRVU5ETEhOQ1FVRmhPMFZCUVdJc2NVSkJRV0U3UlVGQllpeGpRVUZoTzBWQlEySXNiVUpCUVd0Q08wVkJRMnhDTEZkQlFWVTdSVUZEVml4aFFVRlpPMFZCUTFvc1owTkJRWFZDTzAxQlFYWkNMSE5DUVVGMVFqdFZRVUYyUWl4M1FrRkJkVUk3UlVGRGRrSXNORUpCUVcxQ08wMUJRVzVDTEhWQ1FVRnRRanRWUVVGdVFpeHZRa0ZCYlVJc1JVRlJia0k3UlVGa1JEdEpRVkZGTEZsQlFWYzdTVUZEV0N4bFFVRmpPMGx5UW1oRFpDeHRRa0ZCYTBJN1NVRkRiRUlzVDBGQlRUdEpRVU5PTEZGQlFVODdTVUZEVUN4VFFVRlJPMGxCUTFJc1ZVRkJVenRKY1VJNFFsUXNNa05CUVRCRE8wbEJRekZETEZkQlFWVXNSVUZEVmpzN1FVRkhSanRGUVVORExITkNRVUZoTzBWQlFXSXNjVUpCUVdFN1JVRkJZaXhqUVVGaE8wVkJRMklzYlVKQlFXdENPMFZCUTJ4Q0xGZEJRVlU3UlVGRFZpeGhRVUZaTzBWQlExb3NaME5CUVhWQ08wMUJRWFpDTEhOQ1FVRjFRanRWUVVGMlFpeDNRa0ZCZFVJN1JVRkRka0lzTkVKQlFXMUNPMDFCUVc1Q0xIVkNRVUZ0UWp0VlFVRnVRaXh2UWtGQmJVSXNSVUZSYmtJN1JVRmtSRHRKUVZGRkxGbEJRVmM3U1VGRFdDeGxRVUZqTzBseVFtaEVaQ3h0UWtGQmEwSTdTVUZEYkVJc1QwRkJUVHRKUVVOT0xGRkJRVTg3U1VGRFVDeFRRVUZSTzBsQlExSXNWVUZCVXp0SmNVSTRRMUFzTWtOQlFUQkRPMGxCUXpORExGZEJRVlVzUlVGRFdEczdRVUZGUmp0RlFVTkRMR1ZCUVdNN1JVRkRaQ3huUWtGQlpUdEZRVU5tTEZkQlFWVTdSVUZEVml4aFFVRlpPMFZCUjFvc2IwUkJRV2RFTEVWQlNXaEVPMFZ5UWpWSVFUdEpjVUpwU0VRN1RVRlRSU3hYUVVGVkxFVkJSVmdzUlVGQlFUczdRVUZEUkR0RlFVTkRMR1ZCUVdNN1JYSkNOVXBpTEdsQ1NXTnBRenRGU21KcVF5eG5Ra2xoYVVNN1JVcHRSbXBETEcxQ1FVRnJRanRGUVVOc1FpeFRRVUZSTzBWQlExSXNWVUZCVXp0RlFVTlVMSGxEUVVGblF6dFZRVUZvUXl4cFEwRkJaME03UlhGQ01rUnFReXhYUVVGVkxFVkJTVlk3UlVGU1JEdEpRVTFGTEZkQlFWVXNSVUZEVmlJc0ltWnBiR1VpT2lKemNtTXZZWE56WlhSekwzTjBlV3hsY3k5dGVWOTNiM0pyY3k1dFlXbHVMbk5qYzNNaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZLaUVnUjJWdVpYSmhkR1ZrSUdKNUlFWnZiblFnVTNGMWFYSnlaV3dnS0doMGRIQnpPaTh2ZDNkM0xtWnZiblJ6Y1hWcGNuSmxiQzVqYjIwcElHOXVJRTFoY21Ob0lEZ3NJREl3TVRnZ0tpOWNjbHh1WEhKY2JrQm1iMjUwTFdaaFkyVWdlMXh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkaVpYSnVhV1Z5WDJScGMzUnlaWE56WldRbk8xeHlYRzRnSUNBZ2MzSmpPaUIxY213b0p5NHVMMlp2Ym5SekwySmxjbTVwWlhJdlltVnlibWxsY21ScGMzUnlaWE56WldRdGNtVm5kV3hoY2kxM1pXSm1iMjUwTG5kdlptWXlKeWtnWm05eWJXRjBLQ2QzYjJabU1pY3BMRnh5WEc0Z0lDQWdJQ0FnSUNCMWNtd29KeTR1TDJadmJuUnpMMkpsY201cFpYSXZZbVZ5Ym1sbGNtUnBjM1J5WlhOelpXUXRjbVZuZFd4aGNpMTNaV0ptYjI1MExuZHZabVluS1NCbWIzSnRZWFFvSjNkdlptWW5LVHRjY2x4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCdWIzSnRZV3c3WEhKY2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEhKY2JseHlYRzU5WEhKY2JseHlYRzVBWm05dWRDMW1ZV05sSUh0Y2NseHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5ZbVZ5Ym1sbGNpYzdYSEpjYmlBZ0lDQnpjbU02SUhWeWJDZ25MaTR2Wm05dWRITXZZbVZ5Ym1sbGNpOWlaWEp1YVdWeWNtVm5kV3hoY2kxeVpXZDFiR0Z5TFhkbFltWnZiblF1ZDI5bVpqSW5LU0JtYjNKdFlYUW9KM2R2Wm1ZeUp5a3NYSEpjYmlBZ0lDQWdJQ0FnSUhWeWJDZ25MaTR2Wm05dWRITXZZbVZ5Ym1sbGNpOWlaWEp1YVdWeWNtVm5kV3hoY2kxeVpXZDFiR0Z5TFhkbFltWnZiblF1ZDI5bVppY3BJR1p2Y20xaGRDZ25kMjltWmljcE8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRzV2Y20xaGJEdGNjbHh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNjbHh1WEhKY2JuMWNjbHh1WEhKY2JrQm1iMjUwTFdaaFkyVWdlMXh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkaVpYSnVhV1Z5WDNOb1lXUmxKenRjY2x4dUlDQWdJSE55WXpvZ2RYSnNLQ2N1TGk5bWIyNTBjeTlpWlhKdWFXVnlMMkpsY201cFpYSnphR0ZrWlMxeVpXZDFiR0Z5TFhkbFltWnZiblF1ZDI5bVpqSW5LU0JtYjNKdFlYUW9KM2R2Wm1ZeUp5a3NYSEpjYmlBZ0lDQWdJQ0FnSUhWeWJDZ25MaTR2Wm05dWRITXZZbVZ5Ym1sbGNpOWlaWEp1YVdWeWMyaGhaR1V0Y21WbmRXeGhjaTEzWldKbWIyNTBMbmR2Wm1ZbktTQm1iM0p0WVhRb0ozZHZabVluS1R0Y2NseHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQnViM0p0WVd3N1hISmNiaUFnSUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hISmNibHh5WEc1OVhISmNibHh5WEc1Y2NseHVRR1p2Ym5RdFptRmpaU0I3WEhKY2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0ozSnZZbTkwYnljN1hISmNiaUFnSUNCemNtTTZJSFZ5YkNnbkxpNHZabTl1ZEhNdmNtOWliM1J2TDNKdlltOTBieTFpYjJ4a0xYZGxZbVp2Ym5RdWQyOW1aakluS1NCbWIzSnRZWFFvSjNkdlptWXlKeWtzWEhKY2JpQWdJQ0FnSUNBZ0lIVnliQ2duTGk0dlptOXVkSE12Y205aWIzUnZMM0p2WW05MGJ5MWliMnhrTFhkbFltWnZiblF1ZDI5bVppY3BJR1p2Y20xaGRDZ25kMjltWmljcE8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRGt3TUR0Y2NseHVJQ0FnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2NseHVYSEpjYm4xY2NseHVYSEpjYmtCbWIyNTBMV1poWTJVZ2UxeHlYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2R5YjJKdmRHOG5PMXh5WEc0Z0lDQWdjM0pqT2lCMWNtd29KeTR1TDJadmJuUnpMM0p2WW05MGJ5OXliMkp2ZEc4dFltOXNaR2wwWVd4cFl5MTNaV0ptYjI1MExuZHZabVl5SnlrZ1ptOXliV0YwS0NkM2IyWm1NaWNwTEZ4eVhHNGdJQ0FnSUNBZ0lDQjFjbXdvSnk0dUwyWnZiblJ6TDNKdlltOTBieTl5YjJKdmRHOHRZbTlzWkdsMFlXeHBZeTEzWldKbWIyNTBMbmR2Wm1ZbktTQm1iM0p0WVhRb0ozZHZabVluS1R0Y2NseHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTVNREE3WEhKY2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCcGRHRnNhV003WEhKY2JseHlYRzU5WEhKY2JseHlYRzVBWm05dWRDMW1ZV05sSUh0Y2NseHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5jbTlpYjNSdkp6dGNjbHh1SUNBZ0lITnlZem9nZFhKc0tDY3VMaTltYjI1MGN5OXliMkp2ZEc4dmNtOWliM1J2TFdsMFlXeHBZeTEzWldKbWIyNTBMbmR2Wm1ZeUp5a2dabTl5YldGMEtDZDNiMlptTWljcExGeHlYRzRnSUNBZ0lDQWdJQ0IxY213b0p5NHVMMlp2Ym5SekwzSnZZbTkwYnk5eWIySnZkRzh0YVhSaGJHbGpMWGRsWW1admJuUXVkMjltWmljcElHWnZjbTFoZENnbmQyOW1aaWNwTzF4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjY2x4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUdsMFlXeHBZenRjY2x4dVhISmNibjFjY2x4dVhISmNia0JtYjI1MExXWmhZMlVnZTF4eVhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZHliMkp2ZEc4bk8xeHlYRzRnSUNBZ2MzSmpPaUIxY213b0p5NHVMMlp2Ym5SekwzSnZZbTkwYnk5eWIySnZkRzh0YkdsbmFIUXRkMlZpWm05dWRDNTNiMlptTWljcElHWnZjbTFoZENnbmQyOW1aakluS1N4Y2NseHVJQ0FnSUNBZ0lDQWdkWEpzS0NjdUxpOW1iMjUwY3k5eWIySnZkRzh2Y205aWIzUnZMV3hwWjJoMExYZGxZbVp2Ym5RdWQyOW1aaWNwSUdadmNtMWhkQ2duZDI5bVppY3BPMXh5WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURNd01EdGNjbHh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNjbHh1WEhKY2JuMWNjbHh1WEhKY2JrQm1iMjUwTFdaaFkyVWdlMXh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkeWIySnZkRzhuTzF4eVhHNGdJQ0FnYzNKak9pQjFjbXdvSnk0dUwyWnZiblJ6TDNKdlltOTBieTl5YjJKdmRHOHRiR2xuYUhScGRHRnNhV010ZDJWaVptOXVkQzUzYjJabU1pY3BJR1p2Y20xaGRDZ25kMjltWmpJbktTeGNjbHh1SUNBZ0lDQWdJQ0FnZFhKc0tDY3VMaTltYjI1MGN5OXliMkp2ZEc4dmNtOWliM1J2TFd4cFoyaDBhWFJoYkdsakxYZGxZbVp2Ym5RdWQyOW1aaWNwSUdadmNtMWhkQ2duZDI5bVppY3BPMXh5WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURNd01EdGNjbHh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJR2wwWVd4cFl6dGNjbHh1WEhKY2JuMWNjbHh1WEhKY2JrQm1iMjUwTFdaaFkyVWdlMXh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkeWIySnZkRzhuTzF4eVhHNGdJQ0FnYzNKak9pQjFjbXdvSnk0dUwyWnZiblJ6TDNKdlltOTBieTl5YjJKdmRHOHRiV1ZrYVhWdExYZGxZbVp2Ym5RdWQyOW1aakluS1NCbWIzSnRZWFFvSjNkdlptWXlKeWtzWEhKY2JpQWdJQ0FnSUNBZ0lIVnliQ2duTGk0dlptOXVkSE12Y205aWIzUnZMM0p2WW05MGJ5MXRaV1JwZFcwdGQyVmlabTl1ZEM1M2IyWm1KeWtnWm05eWJXRjBLQ2QzYjJabUp5azdYSEpjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHlYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHlYRzVjY2x4dWZWeHlYRzVjY2x4dVFHWnZiblF0Wm1GalpTQjdYSEpjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjNKdlltOTBieWM3WEhKY2JpQWdJQ0J6Y21NNklIVnliQ2duTGk0dlptOXVkSE12Y205aWIzUnZMM0p2WW05MGJ5MXRaV1JwZFcxcGRHRnNhV010ZDJWaVptOXVkQzUzYjJabU1pY3BJR1p2Y20xaGRDZ25kMjltWmpJbktTeGNjbHh1SUNBZ0lDQWdJQ0FnZFhKc0tDY3VMaTltYjI1MGN5OXliMkp2ZEc4dmNtOWliM1J2TFcxbFpHbDFiV2wwWVd4cFl5MTNaV0ptYjI1MExuZHZabVluS1NCbWIzSnRZWFFvSjNkdlptWW5LVHRjY2x4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBMU1EQTdYSEpjYmlBZ0lDQm1iMjUwTFhOMGVXeGxPaUJwZEdGc2FXTTdYSEpjYmx4eVhHNTlYSEpjYmx4eVhHNUFabTl1ZEMxbVlXTmxJSHRjY2x4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBbmNtOWliM1J2Snp0Y2NseHVJQ0FnSUhOeVl6b2dkWEpzS0NjdUxpOW1iMjUwY3k5eWIySnZkRzh2Y205aWIzUnZMWEpsWjNWc1lYSXRkMlZpWm05dWRDNTNiMlptTWljcElHWnZjbTFoZENnbmQyOW1aakluS1N4Y2NseHVJQ0FnSUNBZ0lDQWdkWEpzS0NjdUxpOW1iMjUwY3k5eWIySnZkRzh2Y205aWIzUnZMWEpsWjNWc1lYSXRkMlZpWm05dWRDNTNiMlptSnlrZ1ptOXliV0YwS0NkM2IyWm1KeWs3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh5WEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh5WEc1Y2NseHVmVnh5WEc1Y2NseHVKSFJsZUhRdFptOXVkQzF6ZEdGamF6b2dLQ2R5YjJKdmRHOG5MQ0FuUVhKcFlXd25MQ0J6WVc1ekxYTmxjbWxtS1RzaUxDSXZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVMeThnVkdocGN5Qm1hV3hsSUdOdmJuUmhhVzV6SUhabGNua2dZbUZ6YVdNZ2MzUjViR1Z6TGx4dUx5OGdMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JseHVMeW9xWEc0Z0tpQlRaWFFnZFhBZ1lTQmtaV05sYm5RZ1ltOTRJRzF2WkdWc0lHOXVJSFJvWlNCeWIyOTBJR1ZzWlcxbGJuUmNiaUFxTDF4dUtpQjdYRzVjZEdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzU5WEc1Y2JtSnZaSGtzSUdoMGJXd2dlMXh1WEc0Z0lGeDBZMjlzYjNJNklDUjBaWGgwTFdOdmJHOXlPMXh1SUZ4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pHeHBaMmgwTFdkeVpYazdJRnh1SUNCY2RHWnZiblF0Wm1GdGFXeDVPaUFrZEdWNGRDMW1iMjUwTFhOMFlXTnJPMXh1WEhSdFlYSm5hVzQ2SURBN1hHNWNkSEJoWkdScGJtYzZJREE3WEc1Y2RIZHBaSFJvT2lBeE1EQWxPMXh1WEhSbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4dVhIUm1iMjUwTFhOcGVtVTZJREUyY0hnN1hHNWNkR3hwYm1VdGFHVnBaMmgwT2lBeExqUXlOWEpsYlR0Y2JseDBabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh1WEhRdGQyVmlhMmwwTFdadmJuUXRjMjF2YjNSb2FXNW5PaUJoYm5ScFlXeHBZWE5sWkR0Y2JseDBMVzF2ZWkxdmMzZ3RabTl1ZEMxemJXOXZkR2hwYm1jNklHZHlZWGx6WTJGc1pUdGNibHgwWm05dWRDMWthWE53YkdGNU9pQnZjSFJwYjI1aGJEdGNibHgwY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dVhIUkFhVzVqYkhWa1pTQmpkWE4wYjIxZk1UZ3dNQ0I3WEc1Y2RGeDBZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNna2RHVjRkQzFqYjJ4dmNpd2dNQzR6S1R0Y2JseDBmU0JjYmx4MFhHNWNkRUJwYm1Oc2RXUmxJR3hoY0hSdmNDQjdYRzVjYmx4MFhIUm1iMjUwTFhOcGVtVTZJREUxY0hnN1hHNWNkSDFjYmx4dVhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHVYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQXhOSEI0TzF4dVhIUjlYRzVjYmx4MFFHbHVZMngxWkdVZ2JXOWlhV3hsSUh0Y2JseHVYSFJjZEdadmJuUXRjMmw2WlRvZ01UTndlRHRjYmx4MGZWeHVYRzVjZEVCcGJtTnNkV1JsSUhNdGJXOWlhV3hsSUh0Y2JseHVYSFJjZEdadmJuUXRjMmw2WlRvZ01USndlRHRjYmx4MGZWeHVmVnh1WW05a2VTNW9aWEp2TENCb2RHMXNMbWhsY204Z2UxeHVYSFJvWldsbmFIUTZJREV3TUNVN1hHNWNkRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1RXRnJaU0JoYkd3Z1pXeGxiV1Z1ZEhNZ1puSnZiU0IwYUdVZ1JFOU5JR2x1YUdWeWFYUWdabkp2YlNCMGFHVWdjR0Z5Wlc1MElHSnZlQzF6YVhwcGJtZGNiaUFxSUZOcGJtTmxJR0FxWUNCb1lYTWdZU0J6Y0dWamFXWnBZMmwwZVNCdlppQXdMQ0JwZENCa2IyVnpJRzV2ZENCdmRtVnljbWxrWlNCMGFHVWdZR2gwYld4Z0lIWmhiSFZsWEc0Z0tpQnRZV3RwYm1jZ1lXeHNJR1ZzWlcxbGJuUnpJR2x1YUdWeWFYUnBibWNnWm5KdmJTQjBhR1VnY205dmRDQmliM2d0YzJsNmFXNW5JSFpoYkhWbFhHNGdLaUJUWldVNklHaDBkSEJ6T2k4dlkzTnpMWFJ5YVdOcmN5NWpiMjB2YVc1b1pYSnBkR2x1WnkxaWIzZ3RjMmw2YVc1bkxYQnliMkpoWW14NUxYTnNhV2RvZEd4NUxXSmxkSFJsY2kxaVpYTjBMWEJ5WVdOMGFXTmxMMXh1SUNvdlhHNHFPanBpWldadmNtVXNYRzRxT2pwaFpuUmxjaUI3WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR2x1YUdWeWFYUTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FtRnphV01nYzNSNWJHVnpJR1p2Y2lCc2FXNXJjMXh1SUNvdlhHNWhJSHRjYmlBZ1kyOXNiM0k2SUNSd2NtbHRZWEo1UTI5c2IzSTdYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibjFjYmx4dWRXd2dlMXh1WEhSdFlYSm5hVzQ2SURBN1hHNWNkSEJoWkdScGJtYzZJREE3WEc1OVhHNWNiblZzSUd4cElIdGNibHgwYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjYm4xY2JseHVhREVzSUdneUxDQm9NeXdnY0NCN1hHNWNkRzFoY21kcGJqb2dNRHRjYm4xY2JseHVjM1puSUh0Y2JseDBabWxzYkRvZ1kzVnljbVZ1ZEVOdmJHOXlPMXh1WEhSemRISnZhMlU2SUdOMWNuSmxiblJEYjJ4dmNqdGNibjFjYmx4dVluVjBkRzl1TENCcGJuQjFkQ3dnYzJWc1pXTjBMQ0IwWlhoMFlYSmxZU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFrZEdWNGRDMW1iMjUwTFhOMFlXTnJPMXh1SUgxY2JseHVJaXdpTHk4Z0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmk4dklGUm9hWE1nWm1sc1pTQmpiMjUwWVdsdWN5QmhiR3dnWVhCd2JHbGpZWFJwYjI0dGQybGtaU0JUWVhOeklIWmhjbWxoWW14bGN5NWNiaTh2SUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzR2THk4Z1VtVm5kV3hoY2lCbWIyNTBJR1poYldsc2VWeHVMeTh2SUVCMGVYQmxJRXhwYzNSY2JseHVKSEJ5YVcxaGNubERiMnh2Y2pvZ2NtZGlLREkxTlN3Z01qVTFMQ0F5TlRVcE8xeHVYRzR2THk4Z1EyOXdlU0IwWlhoMElHTnZiRzl5WEc0dkx5OGdRSFI1Y0dVZ1EyOXNiM0pjYmlSMFpYaDBMV052Ykc5eU9pQnlaMklvTmprc0lEa3dMQ0F4TURBcElDRmtaV1poZFd4ME8xeHVKSFJwZEd4bExXTnZiRzl5T2lCeVoySW9OVFVzSURZeUxDQTJOaWs3WEc0dkx5OWNiaVJrWVhKckxYUmxlSFF0WTI5c2IzSTZJQ016TnpORk5ESTdYRzVjYmk4dkx5Qk5ZV2x1SUdKeVlXNWtJR052Ykc5eVhHNHZMeThnUUhSNWNHVWdRMjlzYjNKY2JpOHZKR0p5WVc1a0xXTnZiRzl5T2lCeVoySW9NeklzTVRneExERTJNU2tnSVdSbFptRjFiSFE3WEc0a1luSmhibVF0WTI5c2IzSTZJSEpuWWlnd0xDQXhPVEVzSURFMk5Ta2dJV1JsWm1GMWJIUTdYRzVjYmk4dkx5QlRaV052Ym1SaGNua2dZMjlzYjNKY2JpUnpaV052Ym1RdFkyOXNiM0k2SUhKbllpZ3dMQ0F4TlRBc0lERXpOaWs3WEc1Y2JpUnNhV2RvZEMxeVpXUTZJSEpuWWlneU1qTXNJRGczTENBeE1ESXBPMXh1WEc0a2JHbG5hSFF0ZDJocGRHVTZJQ05HUlVaRlJrVTdYRzRrYkdsbmFIUXRZbVZwWjJVNklDTkdNRVZHUlRrN1hHNGtZbVZwWjJVNklDTkdRa1k0UmpFN1hHNGtZbVZwWjJVdGIyNWxPaUFqWldabFpXVTVPMXh1SkdKbGFXZGxMWFIzYnpvZ0kyVmxaV0prWmp0Y2JseHVMeTh2SUV4cFoyaDBJR2R5WlhsY2JpOHZMeUJBZEhsd1pTQkRiMnh2Y2x4dUpHeHBaMmgwTFdkeVpYazZJSEpuWWlneU16Y3NJREl6Tnl3Z01qTTNLU0FoWkdWbVlYVnNkRHRjYmx4dUx5OHZJRTFsWkdsMWJTQm5jbVY1WEc0dkx5OGdRSFI1Y0dVZ1EyOXNiM0pjYmlSdGFXUXRaM0psZVRvZ2NtZGlLREUxTXl3Z01UVXpMQ0F4TlRNcElDRmtaV1poZFd4ME8xeHVYRzR2THk4Z1JHRnlheUJuY21WNVhHNHZMeThnUUhSNWNHVWdRMjlzYjNKY2JpUmtZWEpyTFdkeVpYazZJSEpuWWlnMk9Dd2dOamdzSURZNEtTQWhaR1ZtWVhWc2REdGNibHh1THk4dktpb3FJR052Ykc5eWN5QXFLaW9xWEc0dkx5OWNiaTh2WENJak1EQTNOMEkxWENKY2JpOHZjbWRpS0RFc0lERXdNaXdnTVRFMEtWeHVYRzR2THk4Z1EyOXVkR0ZwYm1WeUozTWdiV0Y0YVcxMWJTQjNhV1IwYUZ4dUx5OHZJRUIwZVhCbElFeGxibWQwYUZ4dUpHMWhlQzEzYVdSMGFEb2dNVEU0TUhCNElDRmtaV1poZFd4ME8xeHVYRzR2THk4Z1FuSmxZV3R3YjJsdWRITWdiV0Z3WEc0dkx5OGdRSEJ5YjNBZ2UxTjBjbWx1WjMwZ2EyVjVjeUF0SUV0bGVYTWdZWEpsSUdsa1pXNTBhV1pwWlhKeklHMWhjSEJsWkNCMGJ5QmhJR2RwZG1WdUlHeGxibWQwYUZ4dUx5OHZJRUJ3Y205d0lIdE5ZWEI5SUhaaGJIVmxjeUF0SUZaaGJIVmxjeUJoY21VZ1lXTjBkV0ZzSUdKeVpXRnJjRzlwYm5SeklHVjRjSEpsYzNObFpDQnBiaUJ3YVhobGJITmNiaVJpY21WaGEzQnZhVzUwY3pvZ0tGeHVJQ0FuYzIxaGJHd25PaUF6TWpCd2VDeGNiaUFnSjIxbFpHbDFiU2M2SURjMk9IQjRMRnh1SUNBbmJHRnlaMlVuT2lBeE1ESTBjSGdzWEc0cElDRmtaV1poZFd4ME8xeHVYRzRrWkdWemEzUnZjRG9nTVRNd01IQjRPMXh1Skd4aGNIUnZjRG9nSURrNU1uQjRPMXh1SkhSaFlteGxkRG9nTnpZNGNIZzdYRzRrYlc5aWFXeGxPaUEwT0RCd2VEdGNiaVJ6YldGc2JDMXRiMkpwYkdVNklETTNOWEI0TzF4dVhHNHZMeThnVW1Wc1lYUnBkbVVnYjNJZ1lXSnpiMngxZEdVZ1ZWSk1JSGRvWlhKbElHRnNiQ0JoYzNObGRITWdZWEpsSUhObGNuWmxaQ0JtY205dFhHNHZMeThnUUhSNWNHVWdVM1J5YVc1blhHNHZMeThnUUdWNFlXMXdiR1VnYzJOemN5QXRJRmRvWlc0Z2RYTnBibWNnWVNCRFJFNWNiaTh2THlBZ0lDUmlZWE5sTFhWeWJEb2dKMmgwZEhBNkx5OWpaRzR1WlhoaGJYQnNaUzVqYjIwdllYTnpaWFJ6THljN1hHNGtZbUZ6WlMxMWNtdzZJQ2N2WVhOelpYUnpMeWNnSVdSbFptRjFiSFE3WEc0aUxDSmNjbHh1UUcxcGVHbHVJSE5wZW1Vb0pIZHBaSFJvTENBa2FHVnBaMmgwT2lBa2QybGtkR2dwSUh0Y2NseHVJQ0IzYVdSMGFEb2dKSGRwWkhSb08xeHlYRzRnSUdobGFXZG9kRG9nSkdobGFXZG9kRHRjY2x4dWZWeHlYRzVjY2x4dUx5OHZJRzFwZUdsdWN5Qm1iM0lnVFdWa2FXRWdVWFZsY21sbGMxeHlYRzVBYldsNGFXNGdZM1Z6ZEc5dFh6RTRNREFnZTF4eVhHNGdJRUJ0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGQybGtkR2c2SURFNE1EQndlQ2tnZTF4eVhHNGdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQjlYSEpjYm4xY2NseHVYSEpjYmtCdGFYaHBiaUJqZFhOMGIyMGdlMXh5WEc0Z0lFQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRhVzR0ZDJsa2RHZzZJQ1JrWlhOcmRHOXdJQ3NnTVNrZ2UxeHlYRzRnSUNBZ1FHTnZiblJsYm5RN1hISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV2w0YVc0Z1pHVnphM1J2Y0NCN1hISmNibHgwUUcxbFpHbGhJSE5qY21WbGJpQmhibVFnS0cxcGJpMTNhV1IwYURvZ0pHeGhjSFJ2Y0NBcklERXBJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQWtaR1Z6YTNSdmNDa2dlMXh5WEc1Y2RGeDBRR052Ym5SbGJuUTdYSEpjYmx4MGZWeHlYRzU5WEhKY2JseHlYRzVBYldsNGFXNGdiR0Z3ZEc5d0lIdGNjbHh1WEhSQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQWtiR0Z3ZEc5d0tTQmhibVFnS0cxcGJpMTNhV1IwYURvZ0pIUmhZbXhsZENBcklERXBJSHRjY2x4dUlDQmNkRUJqYjI1MFpXNTBPMXh5WEc1Y2RIMWNjbHh1ZlZ4eVhHNWNjbHh1UUcxcGVHbHVJSFJoWW14bGRDQjdYSEpjYmx4MFFHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dKSFJoWW14bGRDa2dlMXh5WEc1Y2RGeDBRR052Ym5SbGJuUTdYSEpjYmx4MGZWeHlYRzU5WEhKY2JseHlYRzVBYldsNGFXNGdiVzlpYVd4bElIdGNjbHh1WEhSQWJXVmthV0VnYzJOeVpXVnVJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQWtiVzlpYVd4bEtTQjdYSEpjYmx4MFhIUkFZMjl1ZEdWdWREdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNia0J0YVhocGJpQnpMVzF2WW1sc1pTQjdYSEpjYmx4MFFHMWxaR2xoSUhOamNtVmxiaUJoYm1RZ0tHMWhlQzEzYVdSMGFEb2dKSE50WVd4c0xXMXZZbWxzWlNrZ2UxeHlYRzVjZEZ4MFFHTnZiblJsYm5RN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV2w0YVc0Z2NtVjBhVzVoSUh0Y2NseHVJQ0JBYldWa2FXRmNjbHh1SUNBZ0lHOXViSGtnYzJOeVpXVnVJR0Z1WkNBb0xYZGxZbXRwZEMxdGFXNHRaR1YyYVdObExYQnBlR1ZzTFhKaGRHbHZPaUF5S1N4Y2NseHVJQ0FnSUc5dWJIa2djMk55WldWdUlHRnVaQ0FvYldsdUxTMXRiM290WkdWMmFXTmxMWEJwZUdWc0xYSmhkR2x2T2lBeUtTeGNjbHh1SUNBZ0lHOXViSGtnYzJOeVpXVnVJR0Z1WkNBb0xXOHRiV2x1TFdSbGRtbGpaUzF3YVhobGJDMXlZWFJwYnpvZ01pOHhLU3hjY2x4dUlDQWdJRzl1YkhrZ2MyTnlaV1Z1SUdGdVpDQW9iV2x1TFdSbGRtbGpaUzF3YVhobGJDMXlZWFJwYnpvZ01pa3NYSEpjYmlBZ0lDQnZibXg1SUhOamNtVmxiaUJoYm1RZ0tHMXBiaTF5WlhOdmJIVjBhVzl1T2lBeE9USmtjR2twTEZ4eVhHNGdJQ0FnYjI1c2VTQnpZM0psWlc0Z1lXNWtJQ2h0YVc0dGNtVnpiMngxZEdsdmJqb2dNbVJ3Y0hncElIdGNjbHh1SUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVYSEpjYmtCdGFYaHBiaUJ3Y21sdWRDQjdYSEpjYmlBZ1FHMWxaR2xoSUhCeWFXNTBJSHRjY2x4dUlDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THk4dklHMXBlR2x1Y3lCbWIzSWdZMmhoYm1kbElIWnBjMmxpYkdsMGVWeHlYRzVjY2x4dVFHMXBlR2x1SUdsdWRtbHphV0pzWlNCN1hISmNiaUFnWW05eVpHVnlPaUF3TzF4eVhHNGdJR05zYVhBNklISmxZM1FvTUNBd0lEQWdNQ2s3WEhKY2JpQWdhR1ZwWjJoME9pQXhjSGc3WEhKY2JpQWdiV0Z5WjJsdU9pQXRNWEI0TzF4eVhHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYSEpjYmlBZ2NHRmtaR2x1WnpvZ01EdGNjbHh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnZDJsa2RHZzZJREZ3ZUR0Y2NseHVmVnh5WEc1Y2NseHVRRzFwZUdsdUlIWnBjMmxpYkdVZ2UxeHlYRzRnSUdobGFXZG9kRG9nYVc1cGRHbGhiRHRjY2x4dUlDQjNhV1IwYURvZ2FXNXBkR2xoYkR0Y2NseHVJQ0J0WVhKbmFXNDZJR2x1YVhScFlXdzdYSEpjYmlBZ2NHOXphWFJwYjI0NklHbHVhWFJwWVd3N1hISmNibjFjY2x4dVhISmNiaTh2THlCd2IzTnBkR2x2Ymx4eVhHNWNjbHh1UUcxcGVHbHVJR0ZpYzI5c2RYUmxMWE4wY21WMFkyZ2dlMXh5WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNCMGIzQTZJREE3WEhKY2JpQWdiR1ZtZERvZ01EdGNjbHh1SUNCeWFXZG9kRG9nTUR0Y2NseHVJQ0JpYjNSMGIyMDZJREE3WEhKY2JuMWNjbHh1WEhKY2JrQnRhWGhwYmlCaFluTnZiSFYwWlMxalpXNTBaWElnZTF4eVhHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dUlDQjBiM0E2SURVd0pUdGNjbHh1SUNCc1pXWjBPaUExTUNVN1hISmNiaUFnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdVb0xUVXdKU3dnTFRVd0pTazdYSEpjYm4xY2NseHVYSEpjYmtCdGFYaHBiaUJoWW5OdmJIVjBaUzFqWlc1MFpYSllJSHRjY2x4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYSEpjYmlBZ2RHOXdPaUExTUNVN1hISmNiaUFnYkdWbWREb2dOVEFsTzF4eVhHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0NndE5UQWxLVHRjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUdGaWMyOXNkWFJsTFdObGJuUmxjbGtnZTF4eVhHNGdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dUlDQjBiM0E2SURVd0pUdGNjbHh1SUNCc1pXWjBPaUExTUNVN1hISmNiaUFnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDFNQ1VwTzF4eVhHNTlYSEpjYmk4dkx5QlVjbWxoYm1kc1pTQm9aV3h3WlhJZ2JXbDRhVzVjY2x4dUx5OHZJRUJ3WVhKaGJTQjdSR2x5WldOMGFXOXVmU0FrWkdseVpXTjBhVzl1SUMwZ1ZISnBZVzVuYkdVZ1pHbHlaV04wYVc5dUxDQmxhWFJvWlhJZ1lIUnZjR0FzSUdCeWFXZG9kR0FzSUZ4eVhHNHZMeTlnWW05MGRHOXRZQ0J2Y2lCZ2JHVm1kR0JjY2x4dUx5OHZJRUJ3WVhKaGJTQjdRMjlzYjNKOUlDUmpiMnh2Y2lCYlkzVnljbVZ1ZEdOdmJHOXlYU0F0SUZSeWFXRnVaMnhsSUdOdmJHOXlJRnh5WEc0dkx5OGdRSEJoY21GdElIdE1aVzVuZEdoOUlDUnphWHBsSUZzeFpXMWRJQzBnVkhKcFlXNW5iR1VnYzJsNlpWeHlYRzVjY2x4dVFHMXBlR2x1SUhSeWFXRnVaMnhsS0NSa2FYSmxZM1JwYjI0c0lDUmpiMnh2Y2pvZ1kzVnljbVZ1ZEdOdmJHOXlMQ0FrYzJsNlpUb2dNV1Z0S1NCN1hISmNiaUFnWEhKY2JpQWdRR2xtSUc1dmRDQnBibVJsZUNoMGIzQWdjbWxuYUhRZ1ltOTBkRzl0SUd4bFpuUXNJQ1JrYVhKbFkzUnBiMjRwSUh0Y2NseHVJQ0FnSUVCbGNuSnZjaUJjSWtScGNtVmpkR2x2YmlCdGRYTjBJR0psSUdWcGRHaGxjaUJnZEc5d1lDd2dZSEpwWjJoMFlDd2dZR0p2ZEhSdmJXQWdiM0lnWUd4bFpuUmdMbHdpTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnZDJsa2RHZzZJREE3WEhKY2JpQWdhR1ZwWjJoME9pQXdPMXh5WEc0Z0lIb3RhVzVrWlhnNklESTdYSEpjYmlBZ1ltOXlaR1Z5TFNON2IzQndiM05wZEdVdFpHbHlaV04wYVc5dUtDUmthWEpsWTNScGIyNHBmVG9nS0NSemFYcGxJQ29nTVM0MUtTQnpiMnhwWkNBa1kyOXNiM0k3WEhKY2JpQWdYSEpjYmlBZ0pIQmxjbkJsYm1ScFkzVnNZWEl0WW05eVpHVnljem9nSkhOcGVtVWdjMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYSEpjYmlBZ1hISmNiaUFnUUdsbUlDUmthWEpsWTNScGIyNGdQVDBnZEc5d0lHOXlJQ1JrYVhKbFkzUnBiMjRnUFQwZ1ltOTBkRzl0SUh0Y2NseHVJQ0FnSUdKdmNtUmxjaTFzWldaME9pQWdJQ1J3WlhKd1pXNWthV04xYkdGeUxXSnZjbVJsY25NN1hISmNiaUFnSUNCaWIzSmtaWEl0Y21sbmFIUTZJQ0FrY0dWeWNHVnVaR2xqZFd4aGNpMWliM0prWlhKek8xeHlYRzRnSUgwZ1FHVnNjMlVnYVdZZ0pHUnBjbVZqZEdsdmJpQTlQU0J5YVdkb2RDQnZjaUFrWkdseVpXTjBhVzl1SUQwOUlHeGxablFnZTF4eVhHNGdJQ0FnWW05eVpHVnlMV0p2ZEhSdmJUb2dKSEJsY25CbGJtUnBZM1ZzWVhJdFltOXlaR1Z5Y3p0Y2NseHVJQ0FnSUdKdmNtUmxjaTEwYjNBNklDQWdJQ1J3WlhKd1pXNWthV04xYkdGeUxXSnZjbVJsY25NN1hISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNWNjbHh1THk4dklITjBlV3hwYm1jZ2NtRmthVzlpZFhSMGIyNHNJR05vWldOclltOTRYSEpjYmx4eVhHNUFiV2w0YVc0Z2FHbGtaR1Z1SUh0Y2NseHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdkRzl3T2lBd2NIZzdYSEpjYmlBZ2JHVm1kRG9nTUhCNE8xeHlYRzRnSUhkcFpIUm9PaUF3TzF4eVhHNGdJR2hsYVdkb2REb2dNRHRjY2x4dUlDQnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHlYRzRnSUc5d1lXTnBkSGs2SURBN1hISmNibjFjY2x4dUx5OHZJR1p2Y2lCd2JHRmpaV2h2YkdSbGNpQnpkSGxzYVc1blhISmNibHh5WEc1QWJXbDRhVzRnY0d4aFkyVm9iMnhrWlhJZ2UxeHlYRzRnSUZ4eVhHNGdJQ1k2T2kxM1pXSnJhWFF0YVc1d2RYUXRjR3hoWTJWb2IyeGtaWElnZXlCQVkyOXVkR1Z1ZERzZ2ZWeHlYRzRnSUNZNkxXMXZlaTF3YkdGalpXaHZiR1JsY2lBZ0lDQWdJQ0FnSUNBZ2V5QkFZMjl1ZEdWdWREc2dmVnh5WEc0Z0lDWTZPaTF0YjNvdGNHeGhZMlZvYjJ4a1pYSWdJQ0FnSUNBZ0lDQWdleUJBWTI5dWRHVnVkRHNnZlZ4eVhHNGdJQ1k2TFcxekxXbHVjSFYwTFhCc1lXTmxhRzlzWkdWeUlDQWdJQ0FnZXlCQVkyOXVkR1Z1ZERzZ2ZTQWdYSEpjYm4waUxDSXZMeUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVMeThnVkdocGN5Qm1hV3hsSUdOdmJuUmhhVzV6SUVOVFV5Qm9aV3h3WlhJZ1kyeGhjM05sY3k1Y2JpOHZJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNWNiaThxS2x4dUlDb2dRMnhsWVhJZ2FXNXVaWElnWm14dllYUnpYRzRnS2k5Y2JpNWpiR1ZoY21acGVEbzZZV1owWlhJZ2UxeHVJQ0JqYkdWaGNqb2dZbTkwYUR0Y2JpQWdZMjl1ZEdWdWREb2dKeWM3WEc0Z0lHUnBjM0JzWVhrNklIUmhZbXhsTzF4dWZWeHVYRzR2S2lwY2JpQXFJRTFoYVc0Z1kyOXVkR1Z1ZENCamIyNTBZV2x1WlhKelhHNGdLaUF4TGlCTllXdGxJSFJvWlNCamIyNTBZV2x1WlhJZ1puVnNiQzEzYVdSMGFDQjNhWFJvSUdFZ2JXRjRhVzExYlNCM2FXUjBhRnh1SUNvZ01pNGdRMlZ1ZEdWeUlHbDBJR2x1SUhSb1pTQjJhV1YzY0c5eWRGeHVJQ29nTXk0Z1RHVmhkbVVnYzI5dFpTQnpjR0ZqWlNCdmJpQjBhR1VnWldSblpYTXNJR1Z6Y0dWamFXRnNiSGtnZG1Gc2RXRmliR1VnYjI0Z2MyMWhiR3dnYzJOeVpXVnVjMXh1SUNvdlhHNWNibHh1THlvcVhHNGdLaUJJYVdSbElIUmxlSFFnZDJocGJHVWdiV0ZyYVc1bklHbDBJSEpsWVdSaFlteGxJR1p2Y2lCelkzSmxaVzRnY21WaFpHVnljMXh1SUNvZ01TNGdUbVZsWkdWa0lHbHVJRmRsWWt0cGRDMWlZWE5sWkNCaWNtOTNjMlZ5Y3lCaVpXTmhkWE5sSUc5bUlHRnVJR2x0Y0d4bGJXVnVkR0YwYVc5dUlHSjFaenRjYmlBcUlDQWdJRk5sWlRvZ2FIUjBjSE02THk5amIyUmxMbWR2YjJkc1pTNWpiMjB2Y0M5amFISnZiV2wxYlM5cGMzTjFaWE12WkdWMFlXbHNQMmxrUFRRMU56RTBObHh1SUNvdlhHNHVhR2xrWlMxMFpYaDBJSHRjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JpQWdjR0ZrWkdsdVp6b2dNRHNnTHlvZ01TQXFMMXh1SUNCMFpYaDBMV2x1WkdWdWREb2dNVEF4SlR0Y2JpQWdkMmhwZEdVdGMzQmhZMlU2SUc1dmQzSmhjRHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc1OVhHNWNiaThxS2x4dUlDb2dTR2xrWlNCbGJHVnRaVzUwSUhkb2FXeGxJRzFoYTJsdVp5QnBkQ0J5WldGa1lXSnNaU0JtYjNJZ2MyTnlaV1Z1SUhKbFlXUmxjbk5jYmlBcUlGTm9ZVzFsYkdWemMyeDVJR0p2Y25KdmQyVmtJR1p5YjIwZ1NGUk5URFZDYjJsc1pYSndiR0YwWlRwY2JpQXFJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzlvTldKd0wyaDBiV3cxTFdKdmFXeGxjbkJzWVhSbEwySnNiMkl2YldGemRHVnlMM055WXk5amMzTXZiV0ZwYmk1amMzTWpUREV4T1MxTU1UTXpYRzRnS2k5Y2JpNTJhWE4xWVd4c2VTMW9hV1JrWlc0Z2UxeHVJQ0JpYjNKa1pYSTZJREE3WEc0Z0lHTnNhWEE2SUhKbFkzUW9NQ0F3SURBZ01DazdYRzRnSUdobGFXZG9kRG9nTVhCNE8xeHVJQzhxSUcxaGNtZHBiam9nTFRGd2VEc3FMMXh1SUNCdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSGRwWkhSb09pQXhjSGc3WEc1OVhHNWNiaUlzSWx4eVhHNHViQzEzY21Gd2NHVnlJSHRjY2x4dVhIUmNjbHh1WEhSQWFXNWpiSFZrWlNCemFYcGxLREV3TUNVcE8xeHlYRzVjZEcxaGNtZHBiam9nTUR0Y2NseHVYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JseDBiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNjbHh1WEhSQWFXNWpiSFZrWlNCamRYTjBiMjBnZTF4eVhHNWNkRngwYldsdUxXaGxhV2RvZERvZ05qVXdjSGc3WEhKY2JseDBmVnh5WEc1OUlpd2lYSEpjYmk1c0xYTmxZM1JwYjI0Z2UxeHlYRzVjZEhkcFpIUm9PaUF4TURBbE8xeHlYRzVjZEcxcGJpMW9aV2xuYUhRNklEWXlPSEI0TzF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjY2x4dVhIUmNkRUJwYm1Oc2RXUmxJR04xYzNSdmJTQjdYSEpjYmx4MFhIUmNkRzFwYmkxb1pXbG5hSFE2SURZMU1IQjRPMXh5WEc1Y2RGeDBYSFIzYVdSMGFEb2djbVZ0S0RFNE1EQXBPMXh5WEc1Y2RGeDBYSFJ0WVhKbmFXNDZJR0YxZEc4N1hISmNibHgwWEhSOVhISmNibHgwWEhSQWFXNWpiSFZrWlNCMFlXSnNaWFFnZTF4eVhHNWNkRngwWEhSdGFXNHRhR1ZwWjJoME9pQXhNREIyYUR0Y2NseHVYSFJjZEgxY2NseHVmVnh5WEc1Y2NseHVMbXd0YkdGemRDQjdYSEpjYmx4MGFHVnBaMmgwT2lBeE1EQWxPMXh5WEc1Y2RHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JuMWNjbHh1WEhKY2JpNXNMV3hoZVc5MWRDMW1hWEp6ZENCN1hISmNibHgwUUdsdVkyeDFaR1VnWVdKemIyeDFkR1V0YzNSeVpYUmphRHRjY2x4dVhIUmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNWNkR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hISmNibjBpTENJdkx5QXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUx5OGdWR2hwY3lCbWFXeGxJR052Ym5SaGFXNXpJR0ZzYkNCaGNIQnNhV05oZEdsdmJpMTNhV1JsSUZOaGMzTWdablZ1WTNScGIyNXpMbHh1THk4Z0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlSaWNtOTNjMlZ5TFdOdmJuUmxlSFE2SURFMk8xeHVYRzR2THk4Z2NtVnRYRzVjYmtCbWRXNWpkR2x2YmlCeVpXMG9KSEJwZUdWc2N5d2dKR052Ym5SbGVIUTZJQ1JpY205M2MyVnlMV052Ym5SbGVIUXBJSHRjYmlBZ1FHbG1JQ2gxYm1sMGJHVnpjeWdrY0dsNFpXeHpLU2tnZTF4dUlDQWdJQ1J3YVhobGJITTZJQ1J3YVhobGJITWdLaUF4Y0hnN1hHNGdJSDFjYmx4dUlDQkFhV1lnS0hWdWFYUnNaWE56S0NSamIyNTBaWGgwS1NrZ2UxeHVJQ0FnSUNSamIyNTBaWGgwT2lBa1kyOXVkR1Y0ZENBcUlERndlRHRjYmlBZ2ZWeHVYRzRnSUVCeVpYUjFjbTRnSkhCcGVHVnNjeUF2SUNSamIyNTBaWGgwSUNvZ01YSmxiVHRjYm4xY2JseHVMeTh2SUdWdFhHNWNia0JtZFc1amRHbHZiaUJsYlNna2NHbDRaV3h6TENBa1kyOXVkR1Y0ZERvZ0pHSnliM2R6WlhJdFkyOXVkR1Y0ZENrZ2UxeHVJQ0JBYVdZZ0tIVnVhWFJzWlhOektDUndhWGhsYkhNcEtTQjdYRzRnSUNBZ0pIQnBlR1ZzY3pvZ0pIQnBlR1ZzY3lBcUlERndlRHRjYmlBZ2ZWeHVYRzRnSUVCcFppQW9kVzVwZEd4bGMzTW9KR052Ym5SbGVIUXBLU0I3WEc0Z0lDQWdKR052Ym5SbGVIUTZJQ1JqYjI1MFpYaDBJQ29nTVhCNE8xeHVJQ0I5WEc1Y2JpQWdRSEpsZEhWeWJpQWtjR2w0Wld4eklDOGdKR052Ym5SbGVIUWdLaUF4WlcwN1hHNTlYRzVjYmk4dkx5Qm1kVzVqZEdsdmJpQnBjeUJwZENCaGJHeHZkM01nZVc5MUlIUnZJSEJoYzNNZ1lTQnNhWE4wSUc5bUlHUnBjbVZqZEdsdmJuTXNJRnh1THk4dmMyOGdkR2hoZENCNWIzVWdaMlYwSUdKdmRIUnZiU0JzWldaMElHWnliMjBnYjNCd2IzTnBkR1V0WkdseVpXTjBhVzl1S0hSdmNDQnlhV2RvZENrdVhHNHZMeThnU1hRZ1kyRnVJR0psSUhWelpXWjFiQ0IzYUdWdUlHUmxZV3hwYm1jZ2QybDBhQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1TENCbWIzSWdhVzV6ZEdGdVkyVmNibHh1UUdaMWJtTjBhVzl1SUc5d2NHOXphWFJsTFdScGNtVmpkR2x2Ymlna1pHbHlaV04wYVc5dWN5a2dlMXh1WEc0Z0lDUnZjSEJ2YzJsMFpTMWthWEpsWTNScGIyNXpPaUFvS1R0Y2JpQWdKR1JwY21WamRHbHZiaTF0WVhBNklDaGNiaUFnSUNBbmRHOXdKem9nSjJKdmRIUnZiU2NzWEc0Z0lDQWdKM0pwWjJoMEp6b2dKMnhsWm5RbkxGeHVJQ0FnSUNkaWIzUjBiMjBuT2lBbmRHOXdKeXhjYmlBZ0lDQW5iR1ZtZENjNklDZHlhV2RvZENjc1hHNGdJQ0FnSjJ4MGNpYzZJQ2R5ZEd3bkxGeHVJQ0FnSUNkeWRHd25PaUFuYkhSeUp5azdYRzVjYmlBZ1FHVmhZMmdnSkdScGNtVmpkR2x2YmlCcGJpQWtaR2x5WldOMGFXOXVjeUI3WEc0Z0lDQWdKRzl3Y0c5emFYUmxMV1JwY21WamRHbHZiam9nYldGd0xXZGxkQ2drWkdseVpXTjBhVzl1TFcxaGNDd2dKR1JwY21WamRHbHZiaWs3WEc0Z0lDQWdJQ0FnSUVCcFppQWtiM0J3YjNOcGRHVXRaR2x5WldOMGFXOXVJQ0U5SUc1MWJHd2dleUJjYmlBZ0lDQWdJQ1J2Y0hCdmMybDBaUzFrYVhKbFkzUnBiMjV6T2lCaGNIQmxibVFvSkc5d2NHOXphWFJsTFdScGNtVmpkR2x2Ym5Nc0lDTjdKRzl3Y0c5emFYUmxMV1JwY21WamRHbHZibjBwTzF4dUlDQWdJSDFjYmlBZ0lDQkFaV3h6WlNCN1hHNGdJQ0FnSUNCQWQyRnliaUJjSWs1dklHOXdjRzl6YVhSbElHUnBjbVZqZEdsdmJpQmpZVzRnWW1VZ1ptOTFibVFnWm05eUlHQWpleVJrYVhKbFkzUnBiMjU5WUM1Y0lqdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQkFjbVYwZFhKdUlDUnZjSEJ2YzJsMFpTMWthWEpsWTNScGIyNXpPMXh1ZlZ4dVhHNGlMQ0pjY2x4dUxtd3RhR1Z5YnlCN1hISmNibHgwYUdWcFoyaDBPaUF4TURCMmFEdGNjbHh1WEhSaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHlYRzVjZEdKaFkydG5jbTkxYm1RdGMybDZaVG9nWTI5MlpYSTdYSEpjYmx4MFltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dZMlZ1ZEdWeUlHTmxiblJsY2p0Y2NseHVYSFJpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b0p5NHVMMmx0WVdkbGN5OWtaV052Y2k5aVp5OXRiMjUwWVdsdWN5NXFjR2NuS1R0Y2NseHVYSFJpWVdOclozSnZkVzVrTFdGMGRHRmphRzFsYm5RNklHWnBlR1ZrTzF4eVhHNWNkRngwWEhKY2JseDBYSFFtT21KbFptOXlaU0I3WEhKY2JseDBYSFJjZEdOdmJuUmxiblE2SUNjbk8xeHlYRzVjZEZ4MFhIUmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVYSFJjZEZ4MFFHbHVZMngxWkdVZ1lXSnpiMngxZEdVdGMzUnlaWFJqYUR0Y2NseHVYSFJjZEZ4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlZU2d4TENBeE1ESXNJREV4TkN3Z01DNHpLVHRjY2x4dVhIUmNkRngwZWkxcGJtUmxlRG9nTUR0Y2NseHVYSFJjZEgxY2NseHVYSEpjYmx4MFFHbHVZMngxWkdVZ1kzVnpkRzl0SUh0Y2NseHVYSFJjZEcxcGJpMW9aV2xuYUhRNklEWTFNSEI0TzF4eVhHNWNkSDFjY2x4dVhISmNibHgwUUdsdVkyeDFaR1VnYlc5aWFXeGxJSHRjY2x4dVhIUmNkR0poWTJ0bmNtOTFibVF0WVhSMFlXTm9iV1Z1ZERvZ2MyTnliMnhzTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxtd3RhR1Z5YjE5aWJHOW5JSHRjY2x4dVhIUmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUJqWlc1MFpYSWdkRzl3TzF4eVhHNWNjbHh1WEhRbU9tSmxabTl5WlNCN1hISmNibHgwWEhSa2FYTndiR0Y1T2lCaWJHOWphenRjY2x4dVhIUmNkR052Ym5SbGJuUTZJQ2NuTzF4eVhHNWNkRngwZDJsa2RHZzZJREV3TUNVN1hISmNibHgwWEhSb1pXbG5hSFE2SURNbE8xeHlYRzVjZEZ4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlLREl5TXl3Z09EY3NJREV3TWlrN1hISmNibHgwZlZ4eVhHNWNjbHh1WEhRbU9tRm1kR1Z5SUh0Y2NseHVYSFJjZEZ4MFkyOXVkR1Z1ZERvZ0p5YzdYSEpjYmx4MFhIUmNkR1JwYzNCc1lYazZJR0pzYjJOck8xeHlYRzVjZEZ4MFhIUkFhVzVqYkhWa1pTQmhZbk52YkhWMFpTMXpkSEpsZEdOb08xeHlYRzVjZEZ4MFhIUjBiM0E2SURNbE8xeHlYRzVjZEZ4MFhIUmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMkpoS0RFc0lERXdNaXdnTVRFMExDQXdMak1wTzF4eVhHNWNkRngwWEhSNkxXbHVaR1Y0T2lBd08xeHlYRzVjZEZ4MGZWeHlYRzU5WEhKY2JseHlYRzR1YkMxb1pYSnZYMTlrWlhabGJHOXdJSHRjY2x4dVhIUkFhVzVqYkhWa1pTQmhZbk52YkhWMFpTMWpaVzUwWlhJN1hISmNibHgwZWkxcGJtUmxlRG9nTWp0Y2NseHVmVnh5WEc1Y2NseHVMbXd0YUdWeWIxOWZaR1YyWld4dmNGOWliRzluSUh0Y2NseHVYSFJpYjNSMGIyMDZJREE3WEhKY2JseDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTFRVd0pTd2dMVGM1SlNrN1hISmNibjBpTENKY2NseHVMbXd0YUdWeWIxOWZjMjlqYVdGc0lIdGNjbHh1WEhSd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNibHgwZWkxcGJtUmxlRG9nTVR0Y2NseHVYSFJzWldaME9pQXhNQ1U3WEhKY2JseDBkRzl3T2lBeE1DVTdYSEpjYmx4MFpHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dVhIUjNhV1IwYURvZ01USWxPMXh5WEc1Y2RHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxianRjY2x4dVhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHlYRzVjZEZ4MGQybGtkR2c2SURJd0pUdGNjbHh1WEhSOVhISmNibHgwUUdsdVkyeDFaR1VnYlc5aWFXeGxJSHRjY2x4dVhIUmNkSGRwWkhSb09pQXpNQ1U3WEhKY2JseDBmVnh5WEc1OVhISmNibHh5WEc0dWJDMW9aWEp2WDE5emIyTnBZV3d0YVhSbGJTQjdYSEpjYmx4eVhHNWNkR2hsYVdkb2REb2djbVZ0S0RJeUtUdGNjbHh1ZlZ4eVhHNWNjbHh1TG13dGFHVnliMTlmYzI5amFXRnNMV3hwYm1zZ2UxeHlYRzVjY2x4dVhIUmthWE53YkdGNU9pQnBibXhwYm1VdFlteHZZMnM3WEhKY2JseDBhR1ZwWjJoME9pQXhNREFsTzF4eVhHNWNkR052Ykc5eU9pQWtjSEpwYldGeWVVTnZiRzl5TzF4eVhHNWNjbHh1WEhRbU9taHZkbVZ5SUM1emRtY3RkWE5sSUh0Y2NseHVYSEpjYmx4MFhIUnZjR0ZqYVhSNU9pQXhPMXh5WEc1Y2RIMWNjbHh1ZlZ4eVhHNWNjbHh1TG5OMlp5MTFjMlVnZTF4eVhHNWNjbHh1WEhSQWFXNWpiSFZrWlNCemFYcGxLSEpsYlNneU9Da3NJSEpsYlNneU1pa3BPMXh5WEc1Y2RIUnlZVzV6YVhScGIyNDZJRzl3WVdOcGRIa2dNQzQwY3p0Y2NseHVYSFJ2Y0dGamFYUjVPaUF3TGpVN1hISmNibjBpTENJdWJDMWpiMjUwWVdsdVpYSWdlMXh5WEc1Y2RIZHBaSFJvT2lBNU5TVTdYSEpjYmx4MGFHVnBaMmgwT2lCeVpXMG9NVFEzY0hncE8xeHlYRzVjZEdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmx4MGJXRnlaMmx1T2lCaGRYUnZPMXh5WEc1Y2RHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEhKY2JseDBabXhsZUMxM2NtRndPaUIzY21Gd08xeHlYRzVjZEVCcGJtTnNkV1JsSUhSaFlteGxkQ0I3WEhKY2JseDBYSFJvWldsbmFIUTZJSEpsYlNneU16WXBPMXh5WEc1Y2RGeDBZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjY2x4dVhIUjlYSEpjYmx4MFFHbHVZMngxWkdVZ2JXOWlhV3hsSUh0Y2NseHVYSFJjZEdobGFXZG9kRG9nY21WdEtESTNNQ2s3WEhKY2JseDBmVnh5WEc1OUlpd2lYSEpjYmk1c0xXaGhiV0oxY21kbGNpQjdYSEpjYmx4eVhHNWNkSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dVhIUjBiM0E2SURNbE8xeHlYRzVjZEhKcFoyaDBPaUF4TUNVN1hISmNibHgwZWkxcGJtUmxlRG9nTVR0Y2NseHVYSFF2TDBCcGJtTnNkV1JsSUhOcGVtVW9jbVZ0S0RNd0tTd2djbVZ0S0RJMEtTazdYSEpjYm4xY2NseHVYSEpjYmlJc0lpNXNMVzFoYVc0Z2UxeHlYRzVjZEhkcFpIUm9PaUF4TURBbE8xeHlYRzVjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNOR01FVkdSVGs3WEhKY2JuMWNjbHh1WEhKY2JpNXNMVzFoYVc1ZllteHZaeUI3WEhKY2JseDBYSEpjYm4xY2NseHVYSEpjYmk1c0xXMWhhVzVmWDNSdmNDQjdYSEpjYmx4MGQybGtkR2c2SURFd01DVTdYSEpjYmx4MGNHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHlYRzVjZEhSdmNEb2dNRHRjY2x4dVhIUnNaV1owT2lBd08xeHlYRzVjZEhKcFoyaDBPaUF3TzF4eVhHNWNkSG90YVc1a1pYZzZJREE3WEhKY2JseDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwMU1DVXBPMXh5WEc1OVhISmNibHh5WEc0dWJDMXRZV2x1WDE5MGIzQmZZbXh2WnlCN1hISmNibHgwZEc5d09pQTFNQ1U3WEhKY2JseDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwMk1DVXBPMXh5WEc1OVhISmNibHh5WEc0dWJDMXRZV2x1WDE5M2NtRndjR1Z5SUh0Y2NseHVYSFIzYVdSMGFEb2dNVEF3SlR0Y2NseHVYSFJ0YVc0dGFHVnBaMmgwT2lBeE1EQWxPMXh5WEc1Y2RHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JseDBZV3hwWjI0dGFYUmxiWE02SUdKaGMyVnNhVzVsTzF4eVhHNWNkRUJwYm1Oc2RXUmxJR04xYzNSdmJTQjdYSEpjYmx4MFhIUmNkSGRwWkhSb09pQnlaVzBvTVRnd01DazdYSEpjYmx4MFhIUmNkRzFoY21kcGJqb2dZWFYwYnp0Y2NseHVYSFI5WEhKY2JseDBKaTVzTFcxaGFXNWZYM2R5WVhCd1pYSmZaR2x6Y0d4aGVTMWliQ0I3WEhKY2JseDBYSFJrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNiaTVzTFcxaGFXNWZYMmhsWVdSbGNpQjdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2d4TURBbExDQnlaVzBvTVRrMUtTazdYSEpjYmx4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlLREkxTUN3Z01qUTRMQ0F5TkRBcE8xeHlYRzVjZEdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmx4MGFuVnpkR2xtZVMxamIyNTBaVzUwT2lCalpXNTBaWEk3WEhKY2JseDBZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjZEZ4eVhHNTlYSEpjYmx4eVhHNHViQzF0WVdsdVgxOW9aV0ZrWlhJdGRHbDBiR1VnZTF4eVhHNWNkSGRwWkhSb09pQTBNQ1U3WEhKY2JseDBjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc1Y2RHTnZiRzl5T2lBa2RHbDBiR1V0WTI5c2IzSTdYSEpjYmx4MFpHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dVhIUnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdKbGRIZGxaVzQ3WEhKY2JseDBZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjY2x4dVhIUW1JQzVvTFhScGRHeGxMWE5sWTNScGIyNGdlMXh5WEc1Y2RGeDBJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dVhIUjlYSEpjYmx4MEpqbzZabWx5YzNRdGJHVjBkR1Z5SUh0Y2NseHVYSFJjZEhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEhKY2JseDBmVnh5WEc1Y2RFQnBibU5zZFdSbElIUmhZbXhsZENCN1hISmNibHgwWEhSM2FXUjBhRG9nTkRNbE8xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbXd0YldGcGJsOWZjMnhwWkdWeUlIdGNjbHh1WEhSM2FXUjBhRG9nTVRBd0pUdGNjbHh1WEhSb1pXbG5hSFE2SURjMU1IQjRPMXh5WEc1Y2RHUnBjM0JzWVhrNklHSnNiMk5yTzF4eVhHNWNkRUJwYm1Oc2RXUmxJSFJoWW14bGRDQjdYSEpjYmx4MFhIUm9aV2xuYUhRNklERXdNekJ3ZUR0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JpNXNMVzFoYVc1ZlgyTnZiSFZ0YmkxdmJtVXNJQzVzTFcxaGFXNWZYMk52YkhWdGJpMTBkMjhnZTF4eVhHNWNkR1pzWlhnNklERTdYSEpjYmx4MGQybGtkR2c2SURVd0pUdGNjbHh1WEhSdGFXNHRhR1ZwWjJoME9pQXhNREFsTzF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVHRjY2x4dWZWeHlYRzVjY2x4dUxtd3RiV0ZwYmw5ZlkyOXNkVzF1TFc5dVpTQjdYSEpjYmx4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kwWXdSVVpGT1R0Y2NseHVmVnh5WEc1Y2NseHVMbXd0YldGcGJsOWZZMjlzZFcxdUxYUjNieUI3WEhKY2JseDBZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMFZHUlVKRk1EdGNjbHh1ZlNJc0lpNXNMVzFoY0MxamIyNTBZV2x1WlhJZ2UxeHlYRzVjZEVCcGJtTnNkV1JsSUhOcGVtVW9NVEF3SlNrN1hISmNibjBpTENJdWJDMWpiMjUwWVdOMGN5QjdYSEpjYmx4MFpteGxlQzFuY205M09pQXhPMXh5WEc1Y2RHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JseDBhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hISmNibHgwWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVmVnh5WEc1Y2NseHVJaXdpTG13dFptOXZkR1Z5SUh0Y2NseHVYSFJrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzVjZEcxcGJpMW9aV2xuYUhRNklISmxiU2d4TkRkd2VDazdYSEpjYmx4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlZU2cxTlN3Z05qSXNJRFkyTERBdU9EVXBPMXh5WEc1Y2RIQmhaR1JwYm1jNklEQXVOU1VnTUR0Y2NseHVYSFJ3YjNOcGRHbHZiam9nY21Wc1lYUnBkbVU3WEhKY2JseDBKanBoWm5SbGNpQjdYSEpjYmx4MFhIUmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVYSFJjZEdOdmJuUmxiblE2SUNjbk8xeHlYRzVjZEZ4MGQybGtkR2c2SURFd01DVTdYSEpjYmx4MFhIUm9aV2xuYUhRNklERndlRHRjY2x4dVhIUmNkR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSEpuWW1Fb0pIQnlhVzFoY25sRGIyeHZjaXdnTUM0eEtUdGNjbHh1WEhSY2RIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1WEhSY2RHeGxablE2SURBN1hISmNibHgwWEhSMGIzQTZJRFV3SlR0Y2NseHVYSFI5WEhKY2JseDBRR2x1WTJ4MVpHVWdkR0ZpYkdWMElIdGNjbHh1WEhSY2RHMXBiaTFvWldsbmFIUTZJSEpsYlNneU16WXBPMXh5WEc1Y2RIMWNjbHh1WEhSQWFXNWpiSFZrWlNCdGIySnBiR1VnZTF4eVhHNWNkRngwYldsdUxXaGxhV2RvZERvZ2NtVnRLREkzTUNrN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNHViQzFtYjI5MFpYSmZYMjVoZGlCN1hISmNibHgwZDJsa2RHZzZJRFV3SlR0Y2NseHVYSFJvWldsbmFIUTZJRFV3SlR0Y2NseHVYSFJrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzVjZEdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibHgwUUdsdVkyeDFaR1VnZEdGaWJHVjBJSHRjY2x4dVhIUmNkSGRwWkhSb09pQTRNQ1U3WEhKY2JseDBYSFJvWldsbmFIUTZJREl5SlR0Y2NseHVYSFJjZEc5eVpHVnlPaUF4TzF4eVhHNWNkRngwYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYSEpjYmx4MGZWeHlYRzVjZEVCcGJtTnNkV1JsSUcxdlltbHNaU0I3WEhKY2JseDBYSFIzYVdSMGFEb2dPVEFsTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxtd3RabTl2ZEdWeVgxOTBaWGgwSUh0Y2NseHVYSFIzYVdSMGFEb2dOVEFsTzF4eVhHNWNkR2hsYVdkb2REb2dOVEFsTzF4eVhHNWNkR1p2Ym5RdGMybDZaVG9nY21WdEtERTNLVHRjY2x4dVhIUm1iMjUwTFhkbGFXZG9kRG9nTXpBd08xeHlYRzVjZEdOdmJHOXlPaUJ5WjJKaEtDUndjbWx0WVhKNVEyOXNiM0lzSURBdU5TazdYSEpjYmx4MGJHbHVaUzFvWldsbmFIUTZJREV1TlR0Y2NseHVYSFIwWlhoMExXRnNhV2R1T2lCc1pXWjBPMXh5WEc1Y2RHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JseDBZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjY2x4dVhIUW1JR0VnZTF4eVhHNWNkRngwZEdWNGRDMWtaV052Y21GMGFXOXVPaUIxYm1SbGNteHBibVU3WEhKY2JseDBYSFJqZFhKemIzSTZJSEJ2YVc1MFpYSTdYSEpjYmx4MFhIUnZjR0ZqYVhSNU9pQXdMalU3WEhKY2JseDBmVnh5WEc1Y2RDWWdZVHBvYjNabGNpQjdYSEpjYmx4MFhIUjBaWGgwTFdSbFkyOXlZWFJwYjI0NklHNXZibVU3WEhKY2JseDBmVnh5WEc1Y2RFQnBibU5zZFdSbElIUmhZbXhsZENCN1hISmNibHgwWEhSM2FXUjBhRG9nT0RBbE8xeHlYRzVjZEZ4MGFHVnBaMmgwT2lBeU9DVTdYSEpjYmx4MFhIUnZjbVJsY2pvZ016dGNjbHh1WEhSY2RHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4eVhHNWNkRngwZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4eVhHNWNkSDFjY2x4dVhIUkFhVzVqYkhWa1pTQnRiMkpwYkdVZ2UxeHlYRzVjZEZ4MGQybGtkR2c2SURrd0pUdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNiaTVzTFdadmIzUmxjbDlmYzI5amFXRnNJSHRjY2x4dVhIUjNhV1IwYURvMU1DVTdYSEpjYmx4MGFHVnBaMmgwT2lBMU1DVTdYSEpjYmx4MFpHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dVhIUnFkWE4wYVdaNUxXTnZiblJsYm5RNklHWnNaWGd0Wlc1a08xeHlYRzVjZEdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibHgwUUdsdVkyeDFaR1VnZEdGaWJHVjBJSHRjY2x4dVhIUmNkSGRwWkhSb09pQTRNQ1U3WEhKY2JseDBYSFJvWldsbmFIUTZJREk0SlR0Y2NseHVYSFJjZEc5eVpHVnlPaUF5TzF4eVhHNWNkRngwYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYSEpjYmx4MGZWeHlYRzVjZEVCcGJtTnNkV1JsSUcxdlltbHNaU0I3WEhKY2JseDBYSFIzYVdSMGFEb2dPVEFsTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxtd3RabTl2ZEdWeVgxOXpiMk5wWVd3dGFYUmxiU0I3WEhKY2JseDBRR2x1WTJ4MVpHVWdjMmw2WlNneUxqRnlaVzBwTzF4eVhHNWNkR0p2Y21SbGNqb2dNQzQxY0hnZ2MyOXNhV1FnY21kaVlTZ2tjSEpwYldGeWVVTnZiRzl5TENBd0xqVXBPMXh5WEc1Y2RHSnZjbVJsY2kxeVlXUnBkWE02SURVd0pUdGNjbHh1WEhSdFlYSm5hVzR0Y21sbmFIUTZJRElsTzF4eVhHNWNkSFJ5WVc1emFYUnBiMjQ2SUdKaFkydG5jbTkxYm1RdFkyOXNiM0lnTUM0emN6dGNjbHh1WEhRbU9taHZkbVZ5SUNCN1hISmNibHgwWEhSaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCeVoySmhLQ1J3Y21sdFlYSjVRMjlzYjNJc0lEQXVPRFVwTzF4eVhHNWNkRngwTG13dFptOXZkR1Z5WDE5emIyTnBZV3d0YkdsdWF5QjdYSEpjYmx4MFhIUmNkR052Ykc5eU9pQWtkR1Y0ZEMxamIyeHZjanRjY2x4dVhIUmNkSDFjY2x4dVhIUmNkQ1lnTG5OMlp5MTFjMlVnZTF4eVhHNWNkRngwYjNCaFkybDBlVG9nTVR0Y2NseHVYSFJjZEgxY2RGeDBYSEpjYmx4MGZWeHlYRzU5WEhKY2JseHlYRzR1YkMxbWIyOTBaWEpmWDNOdlkybGhiQzFzYVc1cklIdGNjbHh1WEhSa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2d4TURBbEtUdGNjbHh1WEhSamIyeHZjam9nSkhCeWFXMWhjbmxEYjJ4dmNqdGNjbHh1WEhSa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc1Y2RHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4eVhHNWNkR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JseDBkSEpoYm5OcGRHbHZiam9nWTI5c2IzSWdNQzR6Y3p0Y2NseHVYSFFtSUM1emRtY3RkWE5sSUh0Y2NseHVYSFJjZEVCcGJtTnNkV1JsSUhOcGVtVW9NUzR5Y21WdExDQXhMalUxY21WdEtUdGNjbHh1WEhSY2RHOXdZV05wZEhrNklEQXVOVHRjY2x4dVhIUmNkSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnTUM0emN6dGNjbHh1WEhSOVhIUmNkRnh5WEc1OUlpd2lYSEpjYmk1akxXaGhiV0oxY21kbGNpMXVZWFlnZTF4eVhHNWNkRnh5WEc1Y2RFQnBibU5zZFdSbElITnBlbVVvY21WdEtETTRLU3dnY21WdEtETXpLU2s3WEhKY2JuMWNjbHh1WEhKY2JpNWpMV2hoYldKMWNtZGxjaTF1WVhaZlgzUmhjbWRsZENCN1hISmNibHgwWEhKY2JseDBaR2x6Y0d4aGVUb2dZbXh2WTJzN1hISmNibHgwUUdsdVkyeDFaR1VnYzJsNlpTZ3hNREFsS1R0Y2NseHVYSFJrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzVjZEdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibjFjY2x4dVhISmNiaTVqTFdoaGJXSjFjbWRsY2kxdVlYWmZYMlpoYTJVZ2UxeHlYRzVjY2x4dVhIUmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVYSFJBYVc1amJIVmtaU0J6YVhwbEtISmxiU2d6T0Nrc0lISmxiU2cxS1NrN1hISmNibHgwWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSkhCeWFXMWhjbmxEYjJ4dmNqdGNjbHh1WEhSaWIzSmtaWEl0Y21Ga2FYVnpPaUF4TlNVN1hISmNibHgwYjNabGNtWnNiM2M2SUhacGMybGliR1U3WEhKY2JseDBkSEpoYm5OcGRHbHZiam9nTUM0emN6dGNjbHh1WEhKY2JseDBKanBpWldadmNtVWdlMXh5WEc1Y2NseHVYSFFnSUdOdmJuUmxiblE2SUZ3aVhDSTdYSEpjYmx4MElDQmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVYSFFnSUVCcGJtTnNkV1JsSUhOcGVtVW9jbVZ0S0RNNEtTd2djbVZ0S0RVcEtUdGNjbHh1WEhRZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURFMUpUdGNjbHh1WEhRZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUndjbWx0WVhKNVEyOXNiM0k3WEhKY2JseDBJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JseDBJQ0IwYjNBNklERXdNQ1U3WEhKY2JseDBJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZrb0xURXdNQ1VwTzF4eVhHNWNkQ0FnYkdWbWREb2dNRHRjY2x4dVhIUjlYSEpjYmx4eVhHNWNkQ1k2WVdaMFpYSWdlMXh5WEc1Y2NseHVYSFFnSUdOdmJuUmxiblE2SUZ3aVhDSTdYSEpjYmx4MElDQmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVYSFFnSUVCcGJtTnNkV1JsSUhOcGVtVW9jbVZ0S0RNNEtTd2djbVZ0S0RVcEtUdGNjbHh1WEhRZ0lHSnZjbVJsY2kxeVlXUnBkWE02SURFMUpUdGNjbHh1WEhRZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUndjbWx0WVhKNVEyOXNiM0k3WEhKY2JseDBJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JseDBJQ0JpYjNSMGIyMDZJREV3TUNVN1hISmNibHgwSUNCc1pXWjBPaUF3TzF4eVhHNWNkQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktERXdNQ1VwTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxtTXRhR0Z0WW5WeVoyVnlMVzVoZGw5ZmJHbHpkQ0I3WEhKY2JseHlYRzVjZEdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmx4MFpteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRianRjY2x4dVhIUnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2NseHVYSFJoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4eVhHNTlYSEpjYmx4eVhHNHVZeTFvWVcxaWRYSm5aWEl0Ym1GMlgxOXBkR1Z0SUh0Y2NseHVYSEpjYmx4MFpHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dVhIUm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4eVhHNWNkR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JseDBkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNjbHh1WEhSbWIyNTBMWE5wZW1VNklISmxiU2d5TkNrN1hISmNibHgwWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjY2x4dVhISmNibHgwSmpwaVpXWnZjbVVnZTF4eVhHNWNjbHh1WEhSY2RHTnZiblJsYm5RNklGd2lYQ0k3WEhKY2JseDBYSFJrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1WEhSY2RFQnBibU5zZFdSbElITnBlbVVvY21WdEtEVXBLVHRjY2x4dVhIUmNkR0p2Y21SbGNpMXlZV1JwZFhNNklEVXdKVHRjY2x4dVhIUmNkR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1J3Y21sdFlYSjVRMjlzYjNJN1hISmNibHgwWEhSdFlYSm5hVzQ2SUhKbGJTZ3hOU2s3WEhKY2JseDBmVnh5WEc1Y2NseHVYSFFtT21acGNuTjBMV05vYVd4a09tSmxabTl5WlNCN1hISmNibHgwWEhSY2NseHVYSFJjZEdScGMzQnNZWGs2SUc1dmJtVTdYSEpjYmx4MGZWeHlYRzU5WEhKY2JpNWpMV2hoYldKMWNtZGxjaTF1WVhaZlgyeHBibXNnZTF4eVhHNWNjbHh1WEhKY2JuMGlMQ0l1WXkxa1pYWmxiRzl3WlhJZ2UxeHlYRzVjZEhkcFpIUm9PaUJ5Wlcwb016Z3dLVHRjY2x4dVhIUmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNWNkR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hISmNibHgwWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVmVnh5WEc1Y2NseHVMbU10WkdWMlpXeHZjR1Z5WDE5cGJXY3RkM0poY0NCN1hISmNibHgwUUdsdVkyeDFaR1VnYzJsNlpTaHlaVzBvTVRReEtTazdYSEpjYmx4MFltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNjbHh1WEhSaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQmpaVzUwWlhJN1hISmNibHgwWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNqdGNjbHh1WEhSdmRtVnlabXh2ZHpvZ2FHbGtaR1Z1TzF4eVhHNWNkRzFoY21kcGJpMWliM1IwYjIwNklEUWxPMXh5WEc1Y2RHSnZjbVJsY2kxeVlXUnBkWE02SURVd0pUdGNjbHh1ZlZ4eVhHNWNjbHh1TG1NdFpHVjJaV3h2Y0dWeVgxOXBiV2NnZTF4eVhHNWNkRzFoZUMxM2FXUjBhRG9nTVRBd0pUdGNjbHh1ZlZ4eVhHNWNjbHh1TG1NdFpHVjJaV3h2Y0dWeVgxOWpiMjUwWlc1MElIdGNjbHh1WEhSM2FXUjBhRG9nTVRBd0pUdGNjbHh1WEhSMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNibjFjY2x4dVhISmNiaTVqTFdSbGRtVnNiM0JmWW14dlp5MW9aV0ZrWlhJZ2UxeHlYRzVjZEdOdmJHOXlPaUFrY0hKcGJXRnllVU52Ykc5eU8xeHlYRzU5WEhKY2JseHlYRzR1WXkxa1pYWmxiRzl3WlhKZlgyaGxZV1JsY2lCN1hISmNibHh5WEc1Y2RHWnZiblF0YzJsNlpUb2djbVZ0S0RNMUtUdGNjbHh1WEhSbWIyNTBMWGRsYVdkb2REb2dOVEF3TzF4eVhHNWNkR3hwYm1VdGFHVnBaMmgwT2lBeExqVTdYSEpjYmx4MGJXRnlaMmx1TFdKdmRIUnZiVG9nTUM0ekpUdGNjbHh1WEhSamIyeHZjam9nSkhCeWFXMWhjbmxEYjJ4dmNqdGNjbHh1ZlZ4eVhHNWNjbHh1TG1NdFpHVjJaV3h2Y0dWeVgxOWtaWE5qSUh0Y2NseHVYSFJtYjI1MExYTnBlbVU2SUhKbGJTZ3hOaWs3WEhKY2JseDBZMjlzYjNJNklISm5ZbUVvSkhCeWFXMWhjbmxEYjJ4dmNpd2dNQzQ0S1R0Y2NseHVYSFJzYVc1bExXaGxhV2RvZERvZ01TNDFPMXh5WEc1Y2RHWnZiblF0ZDJWcFoyaDBPaUF6TURBN1hISmNibjFjY2x4dVhISmNiaTVqTFdSbGRtVnNiM0JsY2w5ZlpHVnpZMTlpYkc5bklIdGNjbHh1WEhSamIyeHZjam9nSkhCeWFXMWhjbmxEYjJ4dmNqdGNjbHh1WEhSbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4eVhHNWNkR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2NseHVYSFIzYVdSMGFEb2dNVEF3SlR0Y2NseHVmU0lzSWk1akxXNWxlSFFnZTF4eVhHNWNjbHh1WEhSa2FYTndiR0Y1T2lCaWJHOWphenRjY2x4dVhIUkFhVzVqYkhWa1pTQnphWHBsS0hKbGJTZ3lPQ2tzSUhKbGJTZ3hPQ2twTzF4eVhHNWNkSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dVhIUmliM1IwYjIwNklERTFKVHRjY2x4dVhIUnNaV1owT2lBMU1DVTdYSEpjYmx4MGRISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLQzAxTUNVcE8xeHlYRzVjZEhvdGFXNWtaWGc2SURJN1hISmNibHgwZEhKaGJuTnBkR2x2YmpvZ2RISmhibk5tYjNKdElEQXVNM003WEhKY2JseDBkMmxzYkMxamFHRnVaMlU2SUhSeVlXNXpabTl5YlR0Y2NseHVYSEpjYmx4MEpqcG9iM1psY2lCN1hISmNibHh5WEc1Y2RGeDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZZS0MwMU1DVXBJSE5qWVd4bEtERXVNaWs3WEhKY2JseDBYSFF1YzNablgyNWxlSFFnZTF4eVhHNWNkRngwWEhSdmNHRmphWFI1T2lBeE8xeHlYRzVjZEZ4MGZWeHlYRzVjZEgxY2NseHVmU0lzSWx4eVhHNHVjM1puWDJobGNtOGdlMXh5WEc1Y2RHOXdZV05wZEhrNklEQXVNRFk3WEhKY2JseDBRR2x1WTJ4MVpHVWdjMmw2WlNneE1EQWxMQ0F6TnlVcE8xeHlYRzVjZEVCcGJtTnNkV1JsSUdGaWMyOXNkWFJsTFdObGJuUmxjanRjY2x4dVhIUm1hV3hzT2lBa2NISnBiV0Z5ZVVOdmJHOXlPMXh5WEc1Y2RIb3RhVzVrWlhnNklERTdYSEpjYm4xY2NseHVYSEpjYmk1emRtZGZibVY0ZENCN1hISmNibHgwYjNCaFkybDBlVG9nTUM0M08xeHlYRzVjZEVCcGJtTnNkV1JsSUhOcGVtVW9NVEF3SlNrN1hISmNibHgwWm1sc2JEb2dKSEJ5YVcxaGNubERiMnh2Y2p0Y2NseHVYSFIwY21GdWMybDBhVzl1T2lCdmNHRmphWFI1SURBdU0zTTdYSEpjYm4xY2NseHVYSEpjYmk1emRtZGZaR0Z6YUNCN1hISmNibHgwUUdsdVkyeDFaR1VnYzJsNlpTZ3hMalp5Wlcwc0lEQXVPSEpsYlNrN1hISmNibHgwYjNCaFkybDBlVG9nTUM0eU5UdGNjbHh1WEhSbWFXeHNPaUJqZFhKeVpXNTBRMjlzYjNJN1hISmNibHgwYzNSeWIydGxPaUJqZFhKeVpXNTBRMjlzYjNJN1hISmNibHgwWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHlYRzVjZEhabGNuUnBZMkZzTFdGc2FXZHVPaUJ0YVdSa2JHVTdYSEpjYm4xY2NseHVYSEpjYmk1emRtY3RiV0ZwYmkxMGIzQmZkSGR2TFdOdmJHOXlJSHRjY2x4dVhIUjNhV1IwYURvZ01UQXdKVHRjY2x4dVhIUm9aV2xuYUhRNklESXdjbVZ0TzF4eVhHNTlYSEpjYmx4eVhHNHVjM1puWDIxaGFXNHRkRzl3WDI5dVpTMWpiMnh2Y2lCN1hISmNibHgwZDJsa2RHZzZJREV3TUNVN1hISmNibHgwYUdWcFoyaDBPaUF5TUhKbGJUdGNjbHh1WEhSamIyeHZjam9nY21kaUtESTFNQ3dnTWpRNExDQXlOREFwTzF4eVhHNTlYSEpjYmx4eVhHNHVjM1puTFcxaGFXNHRhV052YmlCN1hISmNibHgwYjNCaFkybDBlVG9nTUM0d056dGNjbHh1WEhSd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNibHgwZEc5d09pQXdPMXh5WEc1Y2RHeGxablE2SURVd0pUdGNjbHh1WEhSeWFXZG9kRG9nTUR0Y2NseHVYSFJpYjNSMGIyMDZJREE3WEhKY2JseDBkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1VvTFRVd0pTd2dMVEkxSlNrN1hISmNibHgwZWkxcGJtUmxlRG9nTUR0Y2NseHVmVnh5WEc0dWMzWm5MVzFoYVc0dGFXTnZibDloWW05MWRDQjdYSEpjYmx4MGQybGtkR2c2SURnd0pUdGNjbHh1ZlZ4eVhHNWNjbHh1TG5OMlp5MXRZV2x1TFdsamIyNWZkMjl5YTNNZ2UxeHlYRzVjZEhkcFpIUm9PaUF4TXpRbE8xeHlYRzVjZEdobGFXZG9kRG9nY21WdEtERTVOQ2s3WEhKY2JseDBRR2x1WTJ4MVpHVWdkR0ZpYkdWMElIdGNjbHh1WEhSY2RHaGxhV2RvZERvZ09DNHhNalZ5WlcwN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNHVjM1puWDNOcmVYQmxMQ0F1YzNablgyMWhhV3dzSUM1emRtZGZjR2h2Ym1Vc0lDNXpkbWRmYldGd0xXMWhjbXRsY2lCN1hISmNibHgwWTI5c2IzSTZJQ1JpY21GdVpDMWpiMnh2Y2p0Y2NseHVYSFJtYkdWNExXSmhjMmx6T2lBeU1DVTdYSEpjYmx4MGRISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQXdMak56TzF4eVhHNWNkQ1k2YUc5MlpYSWdlMXh5WEc1Y2RGeDBiM0JoWTJsMGVUb2dNQzQzTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxuTjJaMTl6YTNsd1pTQjdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2h5Wlcwb01qUXBMQ0J5Wlcwb01qUXBLVHRjY2x4dWZWeHlYRzR1YzNablgyMWhhV3dnZTF4eVhHNWNkRUJwYm1Oc2RXUmxJSE5wZW1Vb01pNDFjbVZ0TENBeExqYzFjbVZ0S1R0Y2NseHVmVnh5WEc0dWMzWm5YM0JvYjI1bElIdGNjbHh1WEhSQWFXNWpiSFZrWlNCemFYcGxLSEpsYlNneU1Da3NJSEpsYlNneE9Ta3BPMXh5WEc1Y2NseHVmVnh5WEc0dWMzWm5YMjFoY0MxdFlYSnJaWElnZTF4eVhHNWNkRUJwYm1Oc2RXUmxJSE5wZW1Vb2NtVnRLREU1S1N3Z2NtVnRLREkwS1NrN1hISmNibjFjY2x4dUxuTjJaMTlzYjJkcGJpQjdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2h5Wlcwb01UVXBMQ0J5Wlcwb01UY3BLVHRjY2x4dVhIUWdZMjlzYjNJNklISm5ZaWd4T1RZc0lESXdNeXdnTWpBMUtUdGNjbHh1ZlZ4eVhHNHVjM1puWDJ4cGJtc2dlMXh5WEc1Y2RFQnBibU5zZFdSbElITnBlbVVvY21WdEtESXdLU3dnY21WdEtERTVLU2s3WEhKY2JseDBiV0Z5WjJsdUxYSnBaMmgwT2lCeVpXMG9PQ2s3WEhKY2JuMWNjbHh1TG5OMloxOXpiR2xrWlhJdFlYSnliM2NnZTF4eVhHNWNkRUJwYm1Oc2RXUmxJSE5wZW1Vb2NtVnRLRFExS1N3Z2NtVnRLREk0S1NrN1hISmNibHgwWW05NExYTm9ZV1J2ZHpvZ01IQjRJREp3ZUNBeWNIZ2dNQ0J5WjJKaEtEQXNJREFzSURBc0lEQXVNVFlwTzF4eVhHNWNkR052Ykc5eU9pQWtjSEpwYldGeWVVTnZiRzl5TzF4eVhHNWNkRzl3WVdOcGRIazZJREF1Tnp0Y2NseHVYSFIwY21GdWMybDBhVzl1T2lCdmNHRmphWFI1SURBdU0zTTdYSEpjYm4waUxDSXVhQzEwYVhSc1pTMXpaV04wYVc5dUlIdGNjbHh1WEhSbWIyNTBMV1poYldsc2VUb2dKMkpsY201cFpYSW5PMXh5WEc1Y2RHWnZiblF0YzJsNlpUb2djbVZ0S0RZektUdGNjbHh1WEhSc1pYUjBaWEl0YzNCaFkybHVaem9nTUM0eWNtVnRPMXh5WEc1Y2RHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjY2x4dVhIUjJaWEowYVdOaGJDMWhiR2xuYmpvZ2JXbGtaR3hsTzF4eVhHNWNkRzFoY21kcGJqb2dNQ0F5TGpVbE8xeHlYRzVjZEd4cGJtVXRhR1ZwWjJoME9pQXhMalU3WEhKY2JseDBabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNjbHh1WEhSamIyeHZjam9nSkhScGRHeGxMV052Ykc5eU8xeHlYRzVjY2x4dVhIUW1PbVpwY25OMExXeGxkSFJsY2lCN1hISmNibHgwWEhSMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4eVhHNWNkSDFjY2x4dVhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHlYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQnlaVzBvTkRrcE8xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbWd0ZEdsMGJHVXRjMlZqZEdsdmJsOWpiMnh2Y2lCN1hISmNibHgwWTI5c2IzSTZJQ1J3Y21sdFlYSjVRMjlzYjNJN1hISmNibjFjY2x4dVhISmNiaTVvTFhScGRHeGxMV0Z5ZEdsamJHVWdlMXh5WEc1Y2RHWnZiblF0Wm1GdGFXeDVPaUFuWW1WeWJtbGxjaWM3WEhKY2JseDBabTl1ZEMxemFYcGxPaUJ5Wlcwb016VXBPMXh5WEc1Y2RHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjY2x4dVhIUjJaWEowYVdOaGJDMWhiR2xuYmpvZ2JXbGtaR3hsTzF4eVhHNWNkRzFoY21kcGJqb2dNQ0F5TGpVbE8xeHlYRzVjZEd4cGJtVXRhR1ZwWjJoME9pQXhMalU3WEhKY2JseDBabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNjbHh1WEhSamIyeHZjam9nSkhSbGVIUXRZMjlzYjNJN1hISmNibHh5WEc1Y2RDWTZabWx5YzNRdGJHVjBkR1Z5SUh0Y2NseHVYSFJjZEhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEhKY2JseDBmVnh5WEc1Y2NseHVmU0lzSWk1akxXNWhkbDlmYkdsemRDQjdYSEpjYmx4MFpHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dVhIUjNhV1IwYURvZ09EQWxPMXh5WEc1Y2RHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYSEpjYm4xY2NseHVYSEpjYmk1akxXNWhkbDlmYVhSbGJTQjdYSEpjYmx4MFpteGxlQzFuY205M09pQXhPMXh5WEc1OVhISmNibHh5WEc0dVl5MXVZWFpmWDJ4cGJtc2dlMXh5WEc1Y2RHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjY2x4dVhIUm1iMjUwTFhOcGVtVTZJQ2h5Wlcwb01UY3BLVHRjY2x4dVhIUnNhVzVsTFdobGFXZG9kRG9nTVM0MU8xeHlYRzVjZEdadmJuUXRkMlZwWjJoME9pQTFNREE3WEhKY2JseDBkMmhwZEdVdGMzQmhZMlU2SUc1dmQzSmhjRHRjY2x4dVhIUmpiMnh2Y2pvZ0pIQnlhVzFoY25sRGIyeHZjanRjY2x4dVhIUjBjbUZ1YzJsMGFXOXVPaUJqYjJ4dmNpQXdMalJ6TzF4eVhHNWNkQ1k2T21acGNuTjBMV3hsZEhSbGNpQjdYSEpjYmx4MFhIUjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHlYRzVjZEgxY2NseHVYSFFtT21odmRtVnlJSHRjY2x4dVhIUmNkR052Ykc5eU9pQWtZbkpoYm1RdFkyOXNiM0k3WEhKY2JseDBmVnh5WEc1OUlpd2lMbU10WTI5d2VTQjdYSEpjYmx4MFpHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dVhIUmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh5WEc1Y2RHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4eVhHNWNkQ1lnWVNCN1hISmNibHgwWEhSMFpYaDBMV1JsWTI5eVlYUnBiMjQ2SUhWdVpHVnliR2x1WlR0Y2NseHVYSFJjZEdOMWNuTnZjam9nY0c5cGJuUmxjanRjY2x4dVhIUjlYSEpjYmx4MEppQmhPbWh2ZG1WeUlIdGNjbHh1WEhSY2RIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjY2x4dVhIUjlYSEpjYmx4MFFHbHVZMngxWkdVZ2JXOWlhV3hsSUh0Y2NseHVYSFJjZEdac1pYZ3RkM0poY0RvZ2QzSmhjRHRjY2x4dVhIUmNkSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dVhIUjlYSEpjYm4xY2NseHVYSEpjYmk1akxXTnZjSGxmYVhSbGJTQjdYSEpjYmx4MFpHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh5WEc1Y2RHTnZiRzl5T2lBa2NISnBiV0Z5ZVVOdmJHOXlPMXh5WEc1Y2RHWnZiblF0ZDJWcFoyaDBPaUF6TURBN1hISmNibHgwWm05dWRDMXphWHBsT2lCeVpXMG9NVFlwTzF4eVhHNWNkR3hwYm1VdGFHVnBaMmgwT2lBMkxqSTRPMXh5WEc1Y2RGeHlYRzVjZENZNllXWjBaWElnZTF4eVhHNWNkRngwWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHlYRzVjZEZ4MFkyOXVkR1Z1ZERvZ0ozd25PMXh5WEc1Y2RGeDBiV0Z5WjJsdU9pQXdJREF1TTNKbGJUdGNjbHh1WEhSY2RHWnZiblF0YzJsNlpUb2djbVZ0S0RFMktUdGNjbHh1WEhSY2RHWnZiblF0ZDJWcFoyaDBPaUF6TURBN1hISmNibHgwZlZ4eVhHNWNkQ1k2YkdGemRDMWphR2xzWkRwaFpuUmxjaUI3WEhKY2JseDBYSFJrYVhOd2JHRjVPaUJ1YjI1bE8xeHlYRzVjZEgxY2NseHVYSEpjYmx4MFFHbHVZMngxWkdVZ2JXOWlhV3hsSUh0Y2NseHVYSFJjZEd4cGJtVXRhR1ZwWjJoME9pQXhMalU3WEhKY2JseDBYSFFtT21acGNuTjBMV05vYVd4a0lIdGNjbHh1WEhSY2RGeDBkMmxrZEdnNklERXdNQ1U3WEhKY2JseDBYSFI5WEhKY2JseDBYSFFtT21acGNuTjBMV05vYVd4a09tRm1kR1Z5SUh0Y2NseHVYSFJjZEZ4MFpHbHpjR3hoZVRvZ2JtOXVaVHRjY2x4dVhIUmNkSDFjY2x4dVhIUjlYSEpjYm4xY2NseHVMbU10WTI5d2VWOW1iMjkwWlhJZ2UxeHlYRzVjZEhkcFpIUm9PaUExTUNVN1hISmNibHgwYUdWcFoyaDBPaUExTUNVN1hISmNibHgwYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJtYkdWNExXVnVaRHRjY2x4dVhIUkFhVzVqYkhWa1pTQjBZV0pzWlhRZ2UxeHlYRzVjZEZ4MGQybGtkR2c2SURnd0pUdGNjbHh1WEhSY2RHaGxhV2RvZERvZ01qSWxPMXh5WEc1Y2RGeDBiM0prWlhJNklEUTdYSEpjYmx4MFhIUnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2NseHVYSFI5WEhKY2JseDBRR2x1WTJ4MVpHVWdiVzlpYVd4bElIdGNjbHh1WEhSY2RIZHBaSFJvT2lBNU1DVTdYSEpjYmx4MGZWeHlYRzVjZENZZ0xtTXRZMjl3ZVY5cGRHVnRJSHRjY2x4dVhIUmNkR052Ykc5eU9pQnlaMkpoS0NSd2NtbHRZWEo1UTI5c2IzSXNJREF1TlNrN1hISmNibHgwZlZ4eVhHNWNkQ1lnWVNCN1hISmNibHgwWEhSdmNHRmphWFI1T2lBd0xqVTdYSEpjYmx4MGZWeHlYRzU5SWl3aVhISmNiaTVqTFdKMWRIUnZiaUI3WEhKY2JseHlYRzVjZEcxcGJpMTNhV1IwYURvZ2NtVnRLRFV3S1R0Y2NseHVYSFJ0YVc0dGFHVnBaMmgwT2lCeVpXMG9ORFVwTzF4eVhHNWNkR1p2Ym5RdGMybDZaVG9nY21WdEtERTJLVHRjY2x4dVhIUndZV1JrYVc1bk9pQXdJSEpsYlNneU9DazdYSEpjYmx4MFpHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh5WEc1Y2RIWmxjblJwWTJGc0xXRnNhV2R1T2lCdGFXUmtiR1U3WEhKY2JseDBZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblE3WEhKY2JseDBZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdKSEJ5YVcxaGNubERiMnh2Y2p0Y2NseHVYSFIwY21GdWMybDBhVzl1T2lBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2lBd0xqSnpPMXh5WEc1Y2RHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hISmNibHgwWW05eVpHVnlMWEpoWkdsMWN6b2djbVZ0S0RVcE8xeHlYRzVjZEc5MWRHeHBibVU2SUc1dmJtVTdYSEpjYmx4eVhHNWNkQ1k2YUc5MlpYSWdlMXh5WEc1Y2RGeDBYSEpjYmx4MFhIUmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtjSEpwYldGeWVVTnZiRzl5TzF4eVhHNWNkRngwWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh5WEc1Y2RIMWNjbHh1WEhRbU9taHZkbVZ5SUM1akxXSjFkSFJ2Ymw5ZmRHVjRkQ0I3WEhKY2JseHlYRzVjZEZ4MFkyOXNiM0k2SUNSaWNtRnVaQzFqYjJ4dmNqdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNiaTVqTFdKMWRIUnZibDlmZEdWNGRDQjdYSEpjYmx4eVhHNWNkR1JwYzNCc1lYazZJR0pzYjJOck8xeHlYRzVjZEhkcFpIUm9PaUF4TURBbE8xeHlYRzVjZEdobGFXZG9kRG9nTVRBd0pUdGNjbHh1WEhSMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNibHgwYkdsdVpTMW9aV2xuYUhRNklISmxiU2cwTlNrN1hISmNibHgwWm05dWRDMTNaV2xuYUhRNklEVXdNRHRjY2x4dVhIUnZkbVZ5Wm14dmR6b2dhR2xrWkdWdU8xeHlYRzVjZEhkb2FYUmxMWE53WVdObE9pQnViM2R5WVhBN1hISmNibHgwZEdWNGRDMXZkbVZ5Wm14dmR6b2daV3hzYVhCemFYTTdYSEpjYmx4MGRtVnlkR2xqWVd3dFlXeHBaMjQ2SUcxcFpHUnNaVHRjY2x4dVhIUmpiMnh2Y2pvZ0pIQnlhVzFoY25sRGIyeHZjanRjY2x4dVhIUjBjbUZ1YzJsMGFXOXVPaUJqYjJ4dmNpQXdMakp6TzF4eVhHNTlYSEpjYmlJc0lpNWpMWE5zYVdSbGNpQjdYSEpjYmx4MFpHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dVhIUm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4eVhHNWNkR1pzWlhndGQzSmhjRG9nZDNKaGNEdGNjbHh1WEhSQWFXNWpiSFZrWlNCemFYcGxLREV3TUNVcE8xeHlYRzU5WEhKY2JseHlYRzR1WXkxemJHbGtaWEpmWDJSbGMyTXRabklnZTF4eVhHNWNkR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05HTUVWR1JUazdYSEpjYmx4MGFHVnBaMmgwT2lBeE1EQWxPMXh5WEc1Y2RIZHBaSFJvT2lBMU1DVTdYSEpjYmx4MFpHbHpjR3hoZVRvZ1pteGxlRHRjY2x4dVhIUm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4eVhHNWNkR3AxYzNScFpua3RZMjl1ZEdWdWREb2dZMlZ1ZEdWeU8xeHlYRzVjZEdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibHgwUUdsdVkyeDFaR1VnZEdGaWJHVjBJSHRjY2x4dVhIUmNkSGRwWkhSb09pQXhNREFsTzF4eVhHNWNkRngwYUdWcFoyaDBPaUF5TnlVN1hISmNibHgwWEhSdmNtUmxjam9nTWp0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JpNWpMWE5zYVdSbGNsOWZiV0ZwYmkxbWNpQjdYSEpjYmx4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kwVkdSVUpGTUR0Y2NseHVYSFIzYVdSMGFEb2dOVEFsTzF4eVhHNWNkR2hsYVdkb2REb2dOekFsTzF4eVhHNWNkR1JwYzNCc1lYazZJR1pzWlhnN1hISmNibHgwYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYSEpjYmx4MFlXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNjbHh1WEhSQWFXNWpiSFZrWlNCMFlXSnNaWFFnZTF4eVhHNWNkRngwZDJsa2RHZzZJREV3TUNVN1hISmNibHgwWEhSdmNtUmxjam9nTVR0Y2NseHVYSFJjZEdobGFXZG9kRG9nTlRFbE8xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbU10YzJ4cFpHVnlYMTlqYjI1MGNtOXNMV1p5SUh0Y2NseHVYSFIzYVdSMGFEb2dOVEFsTzF4eVhHNWNkR2hsYVdkb2REb2dNekFsTzF4eVhHNWNkR1JwYzNCc1lYazZJR1pzWlhnN1hISmNibHgwUUdsdVkyeDFaR1VnZEdGaWJHVjBJSHRjY2x4dVhIUmNkSGRwWkhSb09pQXhNREFsTzF4eVhHNWNkRngwYjNKa1pYSTZJRE03WEhKY2JseDBYSFJvWldsbmFIUTZJREl5SlR0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JpNWpMWE5zYVdSbGNsOWZaR1Z6WXkxb1pXRmtaWElnZTF4eVhHNWNkR052Ykc5eU9pQWtkR2wwYkdVdFkyOXNiM0k3WEhKY2JseDBkMmxrZEdnNklEWTFKVHRjY2x4dVhIUmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNWNkR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2NseHVYSFJoYkdsbmJpMXBkR1Z0Y3pvZ1ltRnpaV3hwYm1VN1hISmNibHgwSmlBdWMzWm5YMlJoYzJnZ2UxeHlYRzVjZEZ4MGRISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLQzAxTUNVcE8xeHlYRzVjZEgxY2NseHVYSEpjYmx4MEppQXVhQzEwYVhSc1pTMWhjblJwWTJ4bElIdGNjbHh1WEhSY2RDQnNhVzVsTFdobGFXZG9kRG9nTVM0eE56dGNjbHh1WEhSY2RDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmx4MFhIUWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNjbHh1WEhSOVhISmNibHgwYldGeVoybHVMV0p2ZEhSdmJUb2dOU1U3WEhKY2JseDBRR2x1WTJ4MVpHVWdkR0ZpYkdWMElIdGNjbHh1WEhSY2RIZHBaSFJvT2lBMk9DVTdYSEpjYmx4MFhIUnRZWEpuYVc0dFltOTBkRzl0T2lBeUpUdGNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNiaTVqTFhOc2FXUmxjbDlmWkdWell5MTBaWGgwSUh0Y2NseHVYSFJBYVc1amJIVmtaU0J6YVhwbEtEZ3dKU3dnY21WdEtEWXdLU2xjY2x4dVhIUjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHlYRzVjZEdOdmJHOXlPaUJ5WjJJb016SXNJREU0TVN3Z01UWXhLVHRjY2x4dVhIUm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHlYRzVjZEdKdmNtUmxjaTEwYjNBNklESndlQ0J6YjJ4cFpDQnlaMkpoS0RBc0lERTFNQ3dnTVRNMkxDQXdMak1wTzF4eVhHNWNkR0p2Y21SbGNpMWliM1IwYjIwNklESndlQ0J6YjJ4cFpDQnlaMkpoS0RBc0lERTFNQ3dnTVRNMkxDQXdMak1wTzF4eVhHNWNkSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dVhIUnNhVzVsTFdobGFXZG9kRG9nY21WdEtEWXdLVHRjY2x4dVhIUnRZWEpuYVc0dFltOTBkRzl0T2lBMUpUdGNjbHh1WEhSQWFXNWpiSFZrWlNCMFlXSnNaWFFnZTF4eVhHNWNkRngwZDJsa2RHZzZJRFV3SlR0Y2NseHVYSFJjZEcxaGNtZHBiaTFpYjNSMGIyMDZJRElsTzF4eVhHNWNkSDFjY2x4dWZWeHlYRzVjY2x4dUxtTXRjMnhwWkdWeVgxOWtaWE5qTFd4cGJtc2dlMXh5WEc1Y2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUmljbUZ1WkMxamIyeHZjanRjY2x4dVhIUmpiMnh2Y2pvZ0pIQnlhVzFoY25sRGIyeHZjanRjY2x4dVhIUmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNWNkR3AxYzNScFpua3RZMjl1ZEdWdWREb2dZMlZ1ZEdWeU8xeHlYRzVjZEdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNibHgwZEhKaGJuTnBkR2x2YmpvZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2lBd0xqTnpPMXh5WEc1Y2RHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lIUnlZVzV6Y0dGeVpXNTBPMXh5WEc1Y2RDWTZhRzkyWlhJZ2UxeHlYRzVjZEZ4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6QXdPVFk0T0R0Y2NseHVYSFJjZEM1akxXSjFkSFJ2Ymw5ZmRHVjRkQ0I3WEhKY2JseDBYSFJjZEdOdmJHOXlPaUFrY0hKcGJXRnllVU52Ykc5eU8xeHlYRzVjZEZ4MGZWeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbU10YzJ4cFpHVnlYMTl0WVdsdUxXbHRaeUI3WEhKY2JseDBiV0Y0TFhkcFpIUm9PaUE1TUNVN1hISmNibHgwYldGNExXaGxhV2RvZERvZ09EQWxPMXh5WEc1Y2RIZHBaSFJvT2lBMk1DVTdYSEpjYmx4MGFHVnBaMmgwT2lCaGRYUnZPMXh5WEc1Y2RDMTNaV0pyYVhRdFltOTRMWE5vWVdSdmR6b2dOSEI0SURFNGNIZ2dNakp3ZUNBdE1UVndlQ0J5WjJKaEtEQXNNQ3d3TERBdU9EY3BPMXh5WEc1Y2RDMXRiM290WW05NExYTm9ZV1J2ZHpvZ05IQjRJREU0Y0hnZ01qSndlQ0F0TVRWd2VDQnlaMkpoS0RBc01Dd3dMREF1T0RjcE8xeHlYRzVjZEdKdmVDMXphR0ZrYjNjNklEUndlQ0F4T0hCNElESXljSGdnTFRFMWNIZ2djbWRpWVNnd0xEQXNNQ3d3TGpnM0tUdGNjbHh1WEhSQWFXNWpiSFZrWlNCMFlXSnNaWFFnZTF4eVhHNWNkRngwZDJsa2RHZzZJRFExSlR0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2JpNWpMWE5zYVdSbGNsOWZZMjl1ZEhKdmJDMXdjbVYySUh0Y2NseHVYSFJrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzVjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2NseHVYSFIzYVdSMGFEb2dOVEFsTzF4eVhHNWNkR2hsYVdkb2REb2dNVEF3SlR0Y2NseHVYSFJxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNjbHh1WEhSaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHlYRzVjZENZNllXWjBaWElnZTF4eVhHNWNkRngwWTI5dWRHVnVkRG9nSnljN1hISmNibHgwWEhSa2FYTndiR0Y1T2lCaWJHOWphenRjY2x4dVhIUmNkRUJwYm1Oc2RXUmxJR0ZpYzI5c2RYUmxMWE4wY21WMFkyZzdYSEpjYmx4MFhIUmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQnlaMkpoS0RFNE1pd2dNVGd3TENBeE56UXNJREF1TnlrN1hISmNibHgwWEhSNkxXbHVaR1Y0T2lBd08xeHlYRzVjZEgxY2NseHVmVnh5WEc1Y2NseHVMbU10YzJ4cFpHVnlYMTlqYjI1MGNtOXNMVzVsZUhRZ2UxeHlYRzVjZEdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmx4MGNHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHlYRzVjZEhkcFpIUm9PaUExTUNVN1hISmNibHgwYUdWcFoyaDBPaUF4TURBbE8xeHlYRzVjZEdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh5WEc1Y2RHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYSEpjYmx4MEpqcGhablJsY2lCN1hISmNibHgwWEhSamIyNTBaVzUwT2lBbkp6dGNjbHh1WEhSY2RHUnBjM0JzWVhrNklHSnNiMk5yTzF4eVhHNWNkRngwUUdsdVkyeDFaR1VnWVdKemIyeDFkR1V0YzNSeVpYUmphRHRjY2x4dVhIUmNkQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ3hNellzSURFek1Td2dNVEUwTENBd0xqVXBPMXh5WEc1Y2RGeDBJSG90YVc1a1pYZzZJREE3WEhKY2JseDBmVnh5WEc1OVhISmNiaTVqTFhOc2FXUmxjbDlmWTI5dWRISnZiQzFwYldjZ2UxeHlYRzVjZEcxaGVDMTNhV1IwYURvZ09UQWxPMXh5WEc1Y2RHMWhlQzFvWldsbmFIUTZJRGt3SlR0Y2NseHVYSFIzYVdSMGFEb2dOallsTzF4eVhHNWNkR2hsYVdkb2REb2dZWFYwYnp0Y2NseHVYSFF0ZDJWaWEybDBMV0p2ZUMxemFHRmtiM2M2SURSd2VDQXhPSEI0SURJeWNIZ2dMVEUxY0hnZ2NtZGlZU2d3TERBc01Dd3dMamczS1R0Y2NseHVYSFF0Ylc5NkxXSnZlQzF6YUdGa2IzYzZJRFJ3ZUNBeE9IQjRJREl5Y0hnZ0xURTFjSGdnY21kaVlTZ3dMREFzTUN3d0xqZzNLVHRjY2x4dVhIUmliM2d0YzJoaFpHOTNPaUEwY0hnZ01UaHdlQ0F5TW5CNElDMHhOWEI0SUhKblltRW9NQ3d3TERBc01DNDROeWs3WEhKY2JseDBRR2x1WTJ4MVpHVWdkR0ZpYkdWMElIdGNjbHh1WEhSY2RIZHBaSFJvT2lBME5TVTdYSEpjYmx4MGZWeHlYRzU5WEhKY2JpNWpMWE5zYVdSbGNsOWZZMjl1ZEhKdmJGOWZiR2x1YXlCN1hISmNibHgwWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmx4MFFHbHVZMngxWkdVZ2MybDZaU2h5Wlcwb05EVXBMQ0J5Wlcwb01qZ3BLVHRjY2x4dVhIUkFhVzVqYkhWa1pTQmhZbk52YkhWMFpTMWpaVzUwWlhJN1hISmNibHgwZWkxcGJtUmxlRG9nTVR0Y2NseHVYSFFtT21odmRtVnlJQzV6ZG1kZmMyeHBaR1Z5TFdGeWNtOTNJSHRjY2x4dVhIUmNkRzl3WVdOcGRIazZJREU3WEhKY2JseDBmVnh5WEc1OUlsMTkgKi9cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hc3NldHMvc3R5bGVzL215X3dvcmtzLm1haW4uc2NzcyJdLCJzb3VyY2VSb290IjoiIn0=*/