/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on March 8, 2018 */
@font-face {
  font-family: 'bernier_distressed';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierdistressed-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier';
  src: url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/bernierregular-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'bernier_shade';
  src: url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/bernier/berniershade-regular-webfont.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bold-webfont.woff) format("woff");
  font-weight: 900;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-bolditalic-webfont.woff) format("woff");
  font-weight: 900;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-italic-webfont.woff) format("woff");
  font-weight: 400;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-light-webfont.woff) format("woff");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-lightitalic-webfont.woff) format("woff");
  font-weight: 300;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-medium-webfont.woff) format("woff");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-mediumitalic-webfont.woff) format("woff");
  font-weight: 500;
  font-style: italic; }

@font-face {
  font-family: 'roboto';
  src: url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff2) format("woff2"), url(http://localhost:8080/assets/fonts/roboto/roboto-regular-webfont.woff) format("woff");
  font-weight: 400;
  font-style: normal; }

/**
 * Set up a decent box model on the root element
 */
* {
  box-sizing: border-box; }

body, html {
  color: #455a64;
  background-color: #ededed;
  font-family: "roboto", "Arial", sans-serif;
  margin: 0;
  padding: 0;
  width: 100%;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.425rem;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-display: optional;
  position: relative; }
  @media screen and (min-width: 1800px) {
    body, html {
      background-color: rgba(69, 90, 100, 0.3); } }
  @media screen and (max-width: 992px) and (min-width: 769px) {
    body, html {
      font-size: 15px; } }
  @media screen and (max-width: 768px) {
    body, html {
      font-size: 14px; } }
  @media screen and (max-width: 480px) {
    body, html {
      font-size: 13px; } }
  @media screen and (max-width: 375px) {
    body, html {
      font-size: 12px; } }

body.hero, html.hero {
  height: 100%;
  overflow: hidden; }

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*::before,
*::after {
  box-sizing: inherit; }

/**
 * Basic styles for links
 */
a {
  color: white;
  text-decoration: none; }

ul {
  margin: 0;
  padding: 0; }

ul li {
  list-style: none; }

h1, h2, h3, p {
  margin: 0; }

svg {
  fill: currentColor;
  stroke: currentColor; }

button, input, select, textarea {
  font-family: "roboto", "Arial", sans-serif; }

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table; }

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap;
  display: block; }

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  /* margin: -1px;*/
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.l-wrapper {
  width: 100%;
  height: 100%;
  margin: 0;
  position: relative;
  overflow: hidden; }
  @media screen and (min-width: 1301px) {
    .l-wrapper {
      min-height: 650px; } }

.l-parallax__container {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 0;
  background-image: url(http://localhost:8080/assets/images/decor/bg/montains.jpg);
  background-size: 145% 145%;
  background-repeat: no-repeat;
  overflow: hidden;
  background-position: right top;
  will-change: background-position;
  transition: background-position 0.4s; }

.l-flip-container {
  transition: 0.7s;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  position: relative;
  will-change: transform; }

.l-face-container {
  width: 23.75rem;
  height: 24.6875rem;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  position: absolute;
  left: 0;
  right: 0;
  z-index: 2; }

.l-backface-container {
  width: 23.75rem;
  height: 24.6875rem;
  position: absolute;
  left: 0;
  right: 0;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg); }

.l-login__button {
  position: absolute;
  top: 5%;
  right: 5%;
  z-index: 1; }
  @media screen and (min-width: 1301px) {
    .l-login__button {
      right: 10%; } }
  @media screen and (max-width: 768px) {
    .l-login__button {
      top: 4.5%; } }
  @media screen and (max-width: 480px) {
    .l-login__button {
      right: 50%;
      -webkit-transform: translateX(50%);
              transform: translateX(50%); } }

.l-welcome {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 1;
  -webkit-perspective: 1000;
          perspective: 1000;
  width: 23.75rem;
  height: 24.6875rem; }
  .l-welcome.flip .l-flip-container {
    -webkit-transform: rotateY(180deg);
            transform: rotateY(180deg); }

.l-copy {
  position: absolute;
  bottom: 0;
  -webkit-transform: translateY(100%);
          transform: translateY(100%);
  width: 100%; }
  @media screen and (max-width: 480px) {
    .l-copy {
      bottom: -50%;
      -webkit-transform: translateY(-100%);
              transform: translateY(-100%); } }
  @media screen and (max-width: 375px) {
    .l-copy {
      -webkit-transform: translateY(-200%);
              transform: translateY(-200%); } }

.c-button {
  min-width: 3.125rem;
  min-height: 2.8125rem;
  font-size: 1rem;
  padding: 0 1.75rem;
  display: inline-block;
  vertical-align: middle;
  background-color: transparent;
  border: 1px solid white;
  transition: background-color 0.2s;
  overflow: hidden;
  border-radius: 0.3125rem;
  outline: none; }
  .c-button:hover {
    background-color: white;
    cursor: pointer; }
  .c-button:hover .c-button__text {
    color: #00bfa5; }

.c-button__text {
  display: block;
  width: 100%;
  height: 100%;
  text-align: center;
  line-height: 2.8125rem;
  font-weight: 500;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  vertical-align: middle;
  color: white;
  transition: color 0.2s; }

.h-title-section {
  font-family: 'bernier';
  font-size: 3.9375rem;
  letter-spacing: 0.2rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 1.0625rem;
  line-height: 1.05;
  font-weight: 500;
  color: #373e42; }
  .h-title-section:first-letter {
    text-transform: uppercase; }
  @media screen and (max-width: 768px) {
    .h-title-section {
      font-size: 3.0625rem; } }

.h-title-section_color {
  color: white; }

.h-title-article {
  font-family: 'bernier';
  font-size: 2.1875rem;
  display: inline-block;
  vertical-align: middle;
  margin: 0 1rem;
  line-height: 1.5;
  font-weight: 500;
  color: #455a64; }
  .h-title-article:first-letter {
    text-transform: uppercase; }

.svg_hero {
  opacity: 0.06;
  width: 100%;
  height: 37%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  fill: white;
  z-index: 1; }

.svg_hero-blog {
  opacity: 0.06;
  width: 150%;
  height: 300%;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -40%);
          transform: translate(-50%, -40%);
  fill: white;
  z-index: 1; }

.svg_next {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white;
  transition: opacity 0.3s; }

.svg_prev {
  opacity: 0.7;
  width: 100%;
  height: 100%;
  fill: white;
  transition: opacity 0.3s;
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1); }

.svg_dash {
  width: 1.6rem;
  height: 0.8rem;
  opacity: 0.25;
  fill: currentColor;
  stroke: currentColor;
  display: inline-block;
  vertical-align: middle; }

.svg-main-top_two-color {
  width: 100%;
  height: 20rem;
  fill: #EFEBE0;
  stroke: #EFEBE0; }
  @media screen and (max-width: 768px) {
    .svg-main-top_two-color {
      fill: #F0EFE9;
      stroke: #F0EFE9; } }

.svg_main-top_one-color {
  width: 100%;
  height: 20rem;
  color: #faf8f0; }

.svg-main-icon {
  opacity: 0.07;
  position: absolute;
  top: 0;
  left: 50%;
  right: 0;
  bottom: 0;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  z-index: 0; }

.svg-main-icon_about {
  width: 80%;
  -webkit-transform: translate(-50%, -30%);
          transform: translate(-50%, -30%); }
  @media screen and (max-width: 768px) {
    .svg-main-icon_about {
      width: 70%;
      -webkit-transform: translate(-50%, -40%);
              transform: translate(-50%, -40%); } }

.svg-main-icon_works {
  width: 134%;
  height: 12.125rem; }
  @media screen and (max-width: 768px) {
    .svg-main-icon_works {
      height: 8.125rem; } }

.svg_skype, .svg_mail, .svg_phone, .svg_map-marker {
  color: #00bfa5;
  -webkit-flex-basis: 20%;
      -ms-flex-preferred-size: 20%;
          flex-basis: 20%;
  transition: opacity 0.3s; }
  .svg_skype:hover, .svg_mail:hover, .svg_phone:hover, .svg_map-marker:hover {
    opacity: 0.7; }

.svg_skype {
  width: 1.5rem;
  height: 1.5rem; }

.svg_mail {
  width: 1.5rem;
  height: 1.2rem; }

.svg_phone {
  width: 1.25rem;
  height: 1.1875rem; }

.svg_map-marker {
  width: 1.1875rem;
  height: 1.5rem; }

.svg_login {
  width: 0.9375rem;
  height: 1.0625rem;
  color: #c4cbcd; }

.svg_link {
  width: 1.25rem;
  height: 1.1875rem;
  margin-right: 0.5rem; }

.svg_slider-arrow {
  width: 2.8125rem;
  height: 1.75rem;
  box-shadow: 0px 2px 2px 0 rgba(0, 0, 0, 0.16);
  color: white;
  opacity: 0.7;
  transition: opacity 0.3s; }

.c-welcome {
  background-color: rgba(252, 252, 252, 0.85);
  width: 23.75rem;
  height: 24.6875rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  border-radius: 0.3125rem; }

.c-welcome__img-wrap {
  width: 8.8125rem;
  height: 8.8125rem;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  overflow: hidden;
  margin-bottom: 4%;
  border-radius: 50%; }

.c-welcome__img {
  max-width: 100%; }

.c-welcome__content {
  text-align: center;
  max-width: 100%;
  width: 100%; }

.c-welcome__header {
  font-size: 1.75rem;
  font-weight: 500;
  line-height: 1.21;
  margin-bottom: 0.3%; }

.c-welcome__desc {
  font-size: 1rem;
  color: rgba(69, 90, 100, 0.8);
  line-height: 1.5; }

.c-welcome__social {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 10% 0; }

.c-welcome__social-item {
  height: 1.375rem;
  margin-right: 7%; }
  .c-welcome__social-item:last-child {
    margin-right: 0; }

.c-welcome__social-link {
  display: inline-block;
  height: 100%;
  color: #00bfa5; }
  .c-welcome__social-link:hover .svg-use {
    opacity: 1; }

.svg-use {
  width: 1.75rem;
  height: 1.375rem;
  transition: opacity 0.3s;
  opacity: 0.5; }

.c-welcome__nav {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: rgba(0, 191, 165, 0.85);
  max-width: 100%;
  width: 100%;
  overflow: hidden;
  border-radius: 0 0 0.3125rem 0.3125rem; }

.c-welcome__nav-item {
  border-left: 1px solid rgba(255, 255, 255, 0.85);
  transition: background-color 0.3s;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }
  .c-welcome__nav-item:hover {
    background-color: rgba(0, 150, 136, 0.85);
    cursor: pointer; }
  .c-welcome__nav-item:first-child {
    border-left: none; }

.c-welcome__nav-link {
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  font-weight: 500;
  width: 100%;
  height: 100%;
  padding: 7% 7%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: 1rem;
  color: white; }

.c-login-form {
  background-color: rgba(252, 252, 252, 0.85);
  width: 23.75rem;
  height: 24.6875rem;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  border-radius: 0.3125rem; }

.c-login-form__header {
  color: #373e42;
  width: 71%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-align-items: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
  margin: auto; }
  .c-login-form__header .svg_dash {
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%); }
  .c-login-form__header .h-title-article {
    line-height: 1.17;
    text-align: center; }

.c-form {
  width: 100%;
  height: 75%; }

.c-form__inner {
  width: 100%;
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between; }

.c-form__row {
  width: 90%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 3%; }

.c-form__item {
  margin-right: 5%;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  position: relative; }
  .c-form__item:last-child {
    margin-right: 0; }

.c-form__item-logo {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  position: absolute;
  top: 2px;
  left: 2px;
  bottom: 2px;
  width: 2.5rem;
  background-color: #f0efe9;
  border: 2px solid #f0efe9; }

.c-form__item-title {
  display: block;
  text-align: left;
  margin-bottom: 5%;
  color: rgba(69, 90, 100, 0.8); }

.c-form__input {
  width: 100%;
  height: 2.8125rem;
  border-radius: 5px;
  outline: none;
  border: 1px solid white;
  color: #455a64;
  padding: 0.625rem 0.5rem;
  overflow: hidden;
  transition: border 0.3s;
  font-size: 1rem;
  padding-left: 3.5rem; }
  .c-form__input:focus {
    border: 1px solid #00bfa5; }
  .c-form__input::-webkit-input-placeholder {
    opacity: 0.5;
    color: #455a64; }
  .c-form__input:-moz-placeholder {
    opacity: 0.5;
    color: #455a64; }
  .c-form__input::-moz-placeholder {
    opacity: 0.5;
    color: #455a64; }
  .c-form__input:-ms-input-placeholder {
    opacity: 0.5;
    color: #455a64; }

.c-form__buttons {
  width: 66%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  text-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .c-form__buttons .c-form__row {
    -webkit-justify-content: center;
        -ms-flex-pack: center;
            justify-content: center; }
  .c-form__buttons .c-form__item {
    margin: 0 0 3% 0; }
  .c-form__buttons .c-form__item:hover {
    cursor: pointer; }

.c-form__checkbox {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 0;
  height: 0;
  overflow: hidden;
  opacity: 0; }
  .c-form__checkbox:checked + .c-form__item-title--checkbox:before {
    background: url(http://localhost:8080/assets/images/decor/bg/checked.svg) no-repeat center center rgba(0, 191, 165, 0.9);
    background-size: 50% 50%; }

.c-form__item-title--checkbox {
  transition: background 0.7s;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  text-align: left;
  margin-bottom: 2%;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  color: rgba(69, 90, 100, 0.8); }
  @media screen and (max-width: 768px) {
    .c-form__item-title--checkbox {
      margin-bottom: 3%; } }
  .c-form__item-title--checkbox:before {
    content: '';
    display: inline-block;
    width: 1.3125rem;
    height: 1.3125rem;
    background: url(http://localhost:8080/assets/images/decor/bg/checked.svg) no-repeat center center white;
    border: 0.5px solid #00bfa5;
    margin-right: 0.5625rem;
    border-radius: 0.1875rem;
    background-size: 0 0; }

.c-form__row-title {
  display: block;
  text-align: center;
  margin-bottom: 3%;
  font-weight: 900;
  color: rgba(69, 90, 100, 0.8); }

.c-form__radio {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 0;
  height: 0;
  overflow: hidden;
  opacity: 0; }
  .c-form__radio:checked + .c-form__item-title--radio:before {
    background-color: #00bfa5;
    box-shadow: inset 0 0 0 0.3125rem white; }
  .c-form__radio:checked + .c-form__item-title--radio {
    color: #00bfa5; }

.c-form__item-title--radio {
  transition: background-color 0.4s;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  .c-form__item-title--radio:before {
    content: '';
    width: 1.3125rem;
    height: 1.3125rem;
    border-radius: 50%;
    background-color: white;
    margin-right: 0.6rem;
    border: 1px solid #cccccc; }

.c-form__submit {
  position: relative; }

.c-form__required-info {
  position: absolute;
  bottom: 5%;
  left: 0;
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.8125rem; }
  @media screen and (max-width: 768px) {
    .c-form__required-info {
      bottom: -4%; } }
  @media screen and (max-width: 375px) {
    .c-form__required-info {
      bottom: -10%;
      line-height: 1.25rem; } }

.c-form__required-marker {
  font-size: 0.9375rem;
  font-weight: 700;
  color: #00bfa5; }

[data-type='validator-error'] {
  font-size: 0.75rem;
  position: absolute;
  z-index: 10;
  left: 30%;
  margin-top: 0.125rem;
  color: #ffffff;
  background: #c83535;
  box-shadow: 0 6px 2px -2px rgba(211, 77, 77, 0.47);
  padding: 0.25rem 0.625rem;
  border-radius: 1px;
  line-height: 0.75rem;
  pointer-events: none; }

[data-type='validator-error']:before {
  content: '';
  width: 0;
  height: 0;
  top: -5px;
  position: absolute;
  left: 6px;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom: 5px solid #c83535; }

form input[type='text'].error, form input[type='password'].error, form textarea.error {
  border: 1px solid #fa4531; }

.order_spinner {
  width: 3.125rem;
  height: 3.125rem;
  border-radius: 50%;
  border: 0.3125rem solid #f3f1ed;
  border-top: 5px solid #00bfa5;
  will-change: transform;
  margin: auto; }

.animate {
  -webkit-animation-name: spinorder;
          animation-name: spinorder;
  -webkit-animation-duration: 0.8s;
          animation-duration: 0.8s;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  -webkit-transform-origin: center;
          transform-origin: center; }

.c-form__buts-action {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: rgba(0, 191, 165, 0.85);
  max-width: 100%;
  width: 100%;
  overflow: hidden;
  border-radius: 0 0 0.3125rem 0.3125rem; }

.c-form__nav-item {
  border-left: 1px solid rgba(255, 255, 255, 0.85);
  background-color: rgba(0, 191, 165, 0.85);
  transition: background-color 0.3s;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1; }
  .c-form__nav-item:hover {
    background-color: rgba(0, 150, 136, 0.85);
    cursor: pointer; }
  .c-form__nav-item:first-child {
    border-left: none; }

.c-form__nav-link {
  display: inline-block;
  vertical-align: middle;
  text-align: center;
  font-weight: 500;
  width: 100%;
  height: 100%;
  padding: 1% 7%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-size: 1rem;
  border: 0px solid transparent;
  color: white;
  outline: none;
  background-color: rgba(0, 191, 165, 0.85); }
  .c-form__nav-link:first-child {
    border-left: none; }
  .c-form__nav-link:hover {
    background-color: rgba(0, 150, 136, 0.85);
    cursor: pointer; }

.c-copy {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .c-copy a {
    text-decoration: underline;
    cursor: pointer; }
  .c-copy a:hover {
    text-decoration: none; }
  @media screen and (max-width: 480px) {
    .c-copy {
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap;
      text-align: center; } }

.c-copy_item {
  display: inline-block;
  color: white;
  font-weight: 300;
  font-size: 1rem;
  line-height: 6.28; }
  .c-copy_item:after {
    display: inline-block;
    content: '|';
    margin: 0 0.3rem;
    font-size: 1rem;
    font-weight: 300; }
  .c-copy_item:last-child:after {
    display: none; }
  @media screen and (max-width: 480px) {
    .c-copy_item {
      line-height: 1.5; }
      .c-copy_item:first-child {
        width: 100%; }
      .c-copy_item:first-child:after {
        display: none; } }

.c-copy_footer {
  width: 50%;
  height: 50%;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end; }
  @media screen and (max-width: 768px) {
    .c-copy_footer {
      width: 80%;
      height: 22%;
      -webkit-order: 4;
          -ms-flex-order: 4;
              order: 4;
      -webkit-justify-content: center;
          -ms-flex-pack: center;
              justify-content: center; } }
  @media screen and (max-width: 480px) {
    .c-copy_footer {
      width: 90%; } }
  .c-copy_footer .c-copy_item {
    color: rgba(255, 255, 255, 0.5); }
  .c-copy_footer a {
    opacity: 0.5; }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/